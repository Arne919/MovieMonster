{"version":3,"file":"js/app.23f77ea4.js","mappings":"yPAyBA,MAAMA,GAAW,QAAI,MACfC,GAAW,QAAI,MAEfC,EAAQC,IAERC,EAAQ,WACZ,MAAMC,EAAU,CACdL,SAAUA,EAASM,MACnBL,SAAUA,EAASK,OAErBJ,EAAME,MAAMC,EACd,E,+5BC/BME,EAAc,EAEpB,ICDaJ,GAAkB,QAAY,WAAW,KACpD,MAAMK,GAAW,QAAI,IACfC,EAAU,wBACVC,GAAQ,QAAI,MACZC,GAAW,QAAI,IACfC,GAAW,QAAI,MAEfC,GAAO,QAAI,CAAC,GACZC,GAAU,SAAS,IACH,OAAhBJ,EAAMJ,QAMNS,GAAS,UACTC,GAAiB,QAAI,MACrBC,GAAQ,QAAI,MAGZC,EAAgBC,UACpBC,QAAQC,IAAI,kCACZ,IACE,MAAMC,QAAiBC,EAAA,EAAMC,IAAI,GAAGf,wBAA+B,CACjEgB,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAE3Cc,QAAQC,IAAI,+BAAgCC,EAASK,MACrDnB,EAASF,MAAQgB,EAASK,KAC1BP,QAAQC,IAAI,SAASb,EAASF,MAChC,CAAE,MAAOW,GACPG,QAAQH,MAAM,2BAA4BA,EAC5C,GAIIW,EAAST,MAAOd,IACpB,IACE,MAAMiB,QAAiBC,EAAA,EAAMM,KAAK,GAAGpB,4BAAmCJ,EAAS,CAC/EoB,QAAS,CACP,eAAgB,yBAGpBT,EAAeV,MAAQgB,EAASK,KAChCP,QAAQC,IAAI,WAAYC,EAASK,MAGjC,MAAMG,EAAe,CACnB9B,SAAUK,EAAQmB,IAAI,YACtBvB,SAAUI,EAAQmB,IAAI,oBAElBpB,EAAM0B,GAGZf,EAAOgB,KAAK,CAAEC,KAAM,YACtB,CAAE,MAAOC,GAGP,MAFAhB,EAAMX,MAAQ2B,EAAIX,UAAUK,MAAQM,EAAIC,QACxCd,QAAQH,MAAM,WAAYA,EAAMX,OAC1B2B,CACR,GAKIE,EAAgBC,IACF,YAAdA,EACF5B,EAASF,MAAM+B,MAAK,CAACC,EAAGC,IAAMA,EAAEC,WAAaF,EAAEE,aACxB,WAAdJ,IACThB,QAAQC,IAAI,IAAIb,EAASF,OACzBE,EAASF,MAAM+B,MAAK,CAACC,EAAGC,IAAMA,EAAEE,GAAKH,EAAEG,KACzC,EAIIC,EAAoBvB,MAAOiB,EAAY,kBAGnClB,IAERE,QAAQC,IAAI,MAAMb,EAASF,OAG3B6B,EAAaC,EAAU,EAInBO,EAAcC,IAClB,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,cACZC,EAAQC,OAAOL,EAAKM,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOL,EAAKS,WAAWF,SAAS,EAAG,KACzCG,EAAQL,OAAOL,EAAKW,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOL,EAAKa,cAAcN,SAAS,EAAG,KACtD,MAAO,GAAGL,KAAQE,KAASI,KAAOE,KAASE,GAAO,EAI9CE,EAAgBxC,UACpB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,GAAGf,gCAAuC,CACzEgB,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAE3CK,EAASL,MAAQgB,EAASK,KAC1BP,QAAQC,IAAI,uBAAwBV,EAASL,OAC7Cc,QAAQC,IAAI,oBAAqBC,EAASK,KAC5C,CAAE,MAAOV,GACPG,QAAQH,MAAM,2BAA4BA,EAC5C,GAII2C,EAAgBC,IACpB,MAAMC,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAM/B,KAAK,CACTiC,OAAQD,GAAKF,IAGjB,OAAOC,GAGHG,EAAeC,IACnB,MAAMC,EAAQ3D,EAASF,MAAM8D,WAAW9B,GAAMA,EAAEG,KAAOyB,EAAezB,MACvD,IAAX0B,IACF3D,EAASF,MAAM6D,GAAS,IAAK3D,EAASF,MAAM6D,MAAWD,GACzD,EAIIG,EAAYlD,UAChB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,GAAGf,mBAA0B,CAC5DgB,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAGlCO,EAAKP,MAAQ,IAAKgB,EAASK,KAAMc,GAAInB,EAASK,KAAK2C,IACnD1D,EAASN,MAAQgB,EAASK,KAAK3B,SAG/BoB,QAAQC,IAAI,gBAAiBR,EAAKP,MACpC,CAAE,MAAOW,GACPG,QAAQH,MAAM,uBAAwBA,GACtCJ,EAAKP,MAAQ,CAAC,CAChB,GAGJiB,EAAA,EAAMgD,SAAS9C,QAAQ+C,OAAO,iBAAmB,IAAM,SAAS9D,EAAMJ,QAIpE,MAAMmE,EAAqBtD,MAAOuD,EAAYC,KAC5C,IACE,MAAMrD,QAAiBC,EAAA,EAAMqD,MAC3B,GAAGnE,yBAA+BiE,YAClC,CAAE1C,KAAM2C,GACR,CACElD,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAKpC,OADAc,QAAQC,IAAI,yBAA0BC,EAASK,MACxCL,EAASK,IAClB,CAAE,MAAOV,GAEP,MADAG,QAAQH,MAAM,gCAAiCA,GACzCA,CACR,GAII4D,EAAiB1D,MAAOuD,IAC5B,UACQnD,EAAA,EAAMuD,OAAO,GAAGrE,yBAA+BiE,YAAsB,CACzEjD,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAGlCc,QAAQC,IAAI,iCACd,CAAE,MAAOJ,GAEP,MADAG,QAAQH,MAAM,2BAA4BA,GACpCA,CACR,GAII8D,EAA0B5D,MAAOuD,EAAYM,KACjD,UACQzD,EAAA,EAAMM,KACV,GAAGpB,sCACH,CAAEwE,YAAaP,EAAYQ,SAAUF,GACrC,CACEvD,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAIpCc,QAAQC,IAAI,4CACd,CAAE,MAAOJ,GAEP,MADAG,QAAQH,MAAM,sCAAuCA,GAC/CA,CACR,GAKIkE,EAAgBC,GAChBA,EAAS,IAAa,SACtBA,EAAS,IAAa,SACtBA,EAAS,IAAa,OACtBA,EAAS,IAAa,WACnB,UAIHC,EAAkBlE,UACtB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,8CAA+C,CAC9EC,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAGlCc,QAAQC,IAAIC,EAASK,MACrBd,EAAKP,MAAQ,IACRO,EAAKP,MACRgF,eAAgBhE,EAASK,KAAK2D,eAC9BC,WAAYJ,EAAa7D,EAASK,KAAK2D,iBAGzClE,QAAQC,IAAI,oBAAqBC,EAASK,KAE5C,CAAE,MAAOV,GACPG,QAAQH,MAAM,8BAA+BA,EAC/C,GAIIuE,EAAc,CAACC,GAAc,KAGjC,GAFArE,QAAQC,IAAI,gCAEPoE,GAAejF,EAASF,MAAMoF,OAAS,EAG1C,OAFAtE,QAAQC,IAAI,MAAMb,EAASF,YAC3Bc,QAAQC,IAAI,6CAId,EAAAE,EAAA,GAAM,CACJoE,OAAQ,MACRC,IAAK,GAAGnF,wBACRgB,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAG/BuF,MAAMvE,IACLd,EAASF,MAAQgB,EAASK,KAC1BP,QAAQC,IAAI,oBAAqBb,EAASF,MAAM,IAEjDwF,OAAO7D,IACNb,QAAQH,MAAM,2BAA4BgB,EAAI,GAC9C,EAuEA7B,EAAQe,eAAgBd,GAC5B,IACE,MAAM,SAAEL,EAAQ,SAAEC,GAAaI,EACzB0F,QAAYxE,EAAA,EAAMM,KAAK,GAAGpB,oBAA2B,CACzDT,WACAC,aAEFS,EAAMJ,MAAQyF,EAAIpE,KAAKqE,UAEjB3B,UACAgB,IAENtE,EAAOgB,KAAK,CAAEC,KAAM,YACtB,CAAE,MAAOC,GACPb,QAAQH,MAAM,eAAgBgB,GAC9BgE,MAAM,qCACR,CACF,EAIMC,EAAS,YACb,EAAA3E,EAAA,GAAM,CACJoE,OAAQ,OACRC,IAAK,GAAGnF,uBAEPoF,MAAME,IACL3E,QAAQC,IAAI0E,EAAIpE,MAChBjB,EAAMJ,MAAQ,KACdM,EAASN,MAAQ,KACjB6F,aAAaC,WAAW,SACxBvF,EAAKP,MAAQ,CAAEN,SAAU,GAAIoF,OAAQ,GACrCrE,EAAOgB,KAAK,CAAEC,KAAM,eAAe,IAEpC8D,OAAO7D,IACNb,QAAQC,IAAIY,EAAG,GAErB,EAGMoE,EAAeC,IACZ,EAAA/E,EAAA,GAAM,CACXoE,OAAQ,MACRC,IAAK,GAAGnF,wBAA8B6F,cACtC7E,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAK9BiG,EAAa,CAACD,EAAWE,KACtB,EAAAjF,EAAA,GAAM,CACXoE,OAAQ,OACRC,IAAK,GAAGnF,wBAA8B6F,cACtC7E,QAAS,CACPC,cAAe,SAAShB,EAAMJ,SAEhCqB,KAAM,CAAE8E,QAASD,KAKfE,EAAgB,CAACJ,EAAWK,EAAWC,KACpC,EAAArF,EAAA,GAAM,CACXoE,OAAQ,MACRC,IAAK,GAAGnF,wBAA8B6F,cAAsBK,YAC5DlF,QAAS,CACPC,cAAe,SAAShB,EAAMJ,SAEhCqB,KAAM,CAAE8E,QAASG,KAKfC,EAAgB,CAACP,EAAWK,KACzB,EAAApF,EAAA,GAAM,CACXoE,OAAQ,SACRC,IAAK,GAAGnF,wBAA8B6F,cAAsBK,YAC5DlF,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAK9BwG,EAAuB3F,MAAOuD,IAClC,MAAMpD,QAAiBC,EAAA,EAAMC,IAAI,GAAGf,yBAA+BiE,KAAe,CAChFjD,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAE3C,OAAOgB,EAASK,IAAI,EAGhBoF,EAAe5F,MAAO6F,IAC1B,MAAM1F,QAAiBC,EAAA,EAAMC,IAAI,GAAGf,4BAAmC,CACrEwG,OAAQ,CAAED,SACVvF,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAE3C,OAAOgB,EAASK,IAAI,EAIhBuF,EAAqB/F,MAAOuD,EAAYM,WACtCzD,EAAA,EAAMM,KACV,GAAGpB,mCACH,CAAEwE,YAAaP,EAAYQ,SAAUF,GACrC,CAAEvD,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAE7C2F,MAAM,qBAAqB,EAGvBkB,EAAgBhG,MAAOiG,IAC3B,IACEhG,QAAQC,IAAI,KAAK+F,GACjB,MAAM9F,QAAiBC,EAAA,EAAMM,KAAK,GAAGpB,wBAA+B2G,EAAa,CAC/E3F,QAAS,CACPC,cAAe,SAAShB,EAAMJ,WAKlC,OAFAc,QAAQC,IAAI,gCAAiCC,EAASK,MAE/CL,EAASK,IAClB,CAAE,MAAOV,GAEP,MADAG,QAAQH,MAAM,0BAA2BA,GACnCA,CACR,GAGIoG,EAAmBlG,MAAOmF,IAC9B,IACE,MAAMhF,QAAiBC,EAAA,EAAMM,KAC3B,GAAGpB,wBAA8B6F,UACjC,CAAC,EACD,CACE7E,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAIvC4D,EAAiB5C,EAASK,KAG1BwC,EAAQ3D,EAASF,MAAM8D,WAAW9B,GAAMA,EAAEG,KAAO6D,IAKvD,OAJe,IAAXnC,IACF3D,EAASF,MAAM6D,GAAS,IAAK3D,EAASF,MAAM6D,MAAWD,IAGlDA,CACT,CAAE,MAAOjC,GAEP,MADAb,QAAQH,MAAM,kBAAmBgB,GAC3BA,CACR,GAIIqF,EAAmBnG,MAAOmF,IAC9B,MAAMhF,QAAiBC,EAAA,EAAMC,IAAI,GAAGf,wBAA8B6F,KAChE,CACE7E,QAAS,CAAEC,cAAe,SAAShB,EAAMJ,WAI7C,OADAc,QAAQC,IAAI,KAAMC,EAASK,MACpBL,EAASK,IAAI,EAEtB,MAAO,CACLnB,WACAC,UACA8F,aACAF,cACAb,cACA5D,SACAxB,QACAM,QACAI,UACAoF,SACAtF,WACAyE,kBACAxE,OACAwD,YACAI,qBACAI,iBACAE,0BACAnB,eACAD,gBACAhD,WACA+F,gBACAG,gBACAlE,aACAD,oBACAd,SACAZ,iBACAC,QACAkE,eACA2B,uBACAC,eACAG,qBACAC,gBACAE,mBACApD,cACAqD,mBACF,GACC,CAAEC,SAAS,I,kZCxcd,MAAMrH,EAAQC,IACRW,GAAU,SAAS,IAAMZ,EAAMY,UAC/BD,GAAO,SAAS,IAAMX,EAAMW,OAE5B2G,GAAY,SAAI,GAChBC,GAAkB,SAAI,GAUtBC,EAAgBC,IACpB,OAAQA,GACN,IAAK,SACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,OAAO,EACX,EAIIzB,EAAS,KACbhG,EAAMgG,QAAQ,GAIhB,SAAY/E,UACNjB,EAAMQ,aACFR,EAAMmE,kBACNnE,EAAMmF,kBACZmC,EAAUlH,OAAQ,GAElBkH,EAAUlH,OAAQ,CACpB,IAIF,MAAMsH,EAAe,KACnBH,EAAgBnH,MAAQuH,OAAOC,QAAU,GAAG,EAIxCC,EAAc,KAClBF,OAAOG,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,E,OAGjD,SAAU,KACRL,OAAOM,iBAAiB,SAAUP,EAAa,I,i3FClIjD,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,I,mlBCiEA,MAAMQ,EAAQ,EACRC,EAAO,EAGPnI,EAAQC,IACRY,GAAS,UAGTuH,GAAU,QAAI,IAAKF,EAAME,UAgBzBC,GAAU,QAAIH,EAAME,QAAQE,WAAY,GACxCC,GAAY,QAAIL,EAAME,QAAQ9F,YAAc,GAG5CkG,EAAavH,UACjB,IACE,MAAM+C,QAAuBhE,EAAMmH,iBAAiBiB,EAAQhI,MAAMmC,IAGlE6F,EAAQhI,MAAMkI,SAAqC,UAA1BtE,EAAeyE,OACxCL,EAAQhI,MAAMkC,WAAa0B,EAAe1B,WAC1CpB,QAAQC,IAAI,KAAKiH,EAAQhI,OAGzB+H,EAAK,iBAAkBC,EAAQhI,MACjC,CAAE,MAAO2B,GACPb,QAAQH,MAAM,kBAAmBgB,EACnC,IAKF,SACE,IAAMmG,EAAME,UACXM,IACKA,IACFxH,QAAQC,IAAI,yBAA0BuH,GACtCL,EAAQjI,MAAQsI,EAAWJ,WAAY,EACvCC,EAAUnI,MAAQsI,EAAWpG,YAAc,EAC3CpB,QAAQC,IAAI,uBAAwBkH,EAAQjI,OAC9C,GAEF,CAAEuI,WAAW,IAIf,MAAMC,EAA0BxC,IAC9BvF,EAAOgB,KAAK,CAAEC,KAAM,aAAciF,OAAQ,CAAExE,GAAI6D,IAAc,EAI1DyC,EAAqB/I,IACzBe,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAEjH,aAAa,EAItDgJ,EAAyBhE,IAC7BjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,E,OAS/D5D,QAAQC,IAAI,aAAaiH,EAAQhI,MAAM2I,O,svDCnJjC,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,sHCyBoB,QAAI,IAAxB,MACMC,GAAe,QAAI,IAGnBhJ,IAFS,UAEDC,KAERK,GAAW,SAAS,IAAMN,EAAMM,WACtCY,QAAQC,IAAI,MAAMb,GAElB,MAAM4B,GAAY,QAAI,UAGhB+G,EAAgBC,IACpBhH,EAAU9B,MAAQ8I,EAClBlJ,EAAMwC,kBAAkB0G,EAAK,EAGzBC,EAAiBnF,IACrB,MAAMC,EAAQjE,EAAMM,SAAS4D,WAAWkE,GAAYA,EAAQ7F,KAAOyB,EAAezB,MACnE,IAAX0B,IACFjE,EAAMM,SAAS2D,GAAS,IAAKD,GAC7B9C,QAAQC,IAAI,uCAAwCnB,EAAMM,SAAS2D,IACrE,E,OAMF,SAAUhD,UACR,UAGUjB,EAAMwC,kBAAkBN,EAAU9B,OAE1Cc,QAAQC,IAAI,OAAQb,EAASF,MAC/B,CAAE,MAAO2B,GACPb,QAAQH,MAAM,0BAA2BgB,GACzCiH,EAAa5I,MAAQ,yBACvB,K,osBCjEI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,yFCYA,MAAMJ,EAAQC,I,OAEd,SAAU,KAERD,EAAMsF,aAAY,I,kaClBd,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,oyBC4GA,MAAMtF,EAAQC,IACRmJ,GAAQ,UACRvI,GAAS,UAETuH,GAAU,QAAI,MACdiB,GAAW,QAAI,IACfC,GAAa,QAAI,IACjBC,GAAiB,QAAI,MACrBC,GAAwB,QAAI,IAC5BC,GAAW,SAAI,GAEfjB,EAAavH,UACjB,IACE,MAAM+C,QAAuBhE,EAAMmH,iBAAiBiB,EAAQhI,MAAMmC,IAGlE6F,EAAQhI,MAAMkI,SAAqC,UAA1BtE,EAAeyE,OACxCL,EAAQhI,MAAMkC,WAAa0B,EAAe1B,WAG1C,MAAM2B,EAAQjE,EAAMM,SAAS4D,WAAW9B,GAAMA,EAAEG,KAAO6F,EAAQhI,MAAMmC,MACtD,IAAX0B,IACFjE,EAAMM,SAAS2D,GAAS,IAAKmE,EAAQhI,OAEzC,CAAE,MAAO2B,GACPb,QAAQH,MAAM,kBAAmBgB,EACnC,GAII+G,EAAyBhE,IAC7BjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,GAU/D,SAAU,KACR,MAAMsB,EAAYgD,EAAMrC,OAAOxE,GAC/BmH,EAAatD,GACbuD,EAAcvD,GACdlF,QAAQC,IAAI,YAAYiH,EAAQhI,MAAK,IAIvC,MAAMsJ,EAAgBtD,IACpB/E,EAAA,EACGC,IAAI,GAAGtB,EAAMO,8BAA8B6F,KAAc,CACxD7E,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAE1CmF,MAAMvE,IACLgH,EAAQhI,MAAQgB,EAASK,KACzBgI,EAASrJ,MAAQgB,EAASK,KAAKd,OAASX,EAAMU,QAAQ,IAEvDkF,OAAO7E,IACNG,QAAQH,MAAM,eAAgBA,EAAM,GACpC,EAIA4I,EAAgB,KACpBtI,EAAA,EACGC,IAAI,GAAGtB,EAAMO,8BAA8B6I,EAAMrC,OAAOxE,oBAAqB,CAC5EhB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAE1CmF,MAAME,IACLwD,EAASjJ,MAAQyF,EAAIpE,IAAI,IAE1BmE,OAAO7D,IACNb,QAAQH,MAAM,cAAegB,EAAI,GACjC,EAIA6H,EAAgB,KACfN,EAAWlJ,MAAMyJ,QAItBxI,EAAA,EACGM,KACC,GAAG3B,EAAMO,8BAA8B6I,EAAMrC,OAAOxE,eACpD,CAAEgE,QAAS+C,EAAWlJ,OACtB,CAAEmB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAE5CmF,MAAME,IACL,MAAM,QAAEiE,EAAO,cAAEC,GAAkBlE,EAAIpE,KAEvC4H,EAASjJ,MAAMyB,KAAKiI,GACpB1B,EAAQhI,MAAM2J,cAAgBA,EAG9B,MAAM9F,EAAQjE,EAAMM,SAAS4D,WAAW9B,GAAMA,EAAEG,KAAO6F,EAAQhI,MAAMmC,MACtD,IAAX0B,IACFjE,EAAMM,SAAS2D,GAAO8F,cAAgBA,GAGxCT,EAAWlJ,MAAQ,EAAE,IAEtBwF,OAAO7D,IACNb,QAAQH,MAAM,YAAagB,EAAI,GAC/B,EAIAiI,EAAeF,IACnBP,EAAenJ,MAAQ0J,EACvBN,EAAsBpJ,MAAQ0J,EAAQvD,OAAO,EAIzC0D,EAAuB,KACtBT,EAAsBpJ,MAAMyJ,QACjCxI,EAAA,EACG6I,IACC,GAAGlK,EAAMO,8BAA8B6I,EAAMrC,OAAOxE,eAAegH,EAAenJ,MAAMmC,aACxF,CAAEgE,QAASiD,EAAsBpJ,OACjC,CACEmB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAG5CmF,MAAMvE,IACL,MAAM6C,EAAQoF,EAASjJ,MAAM8D,WAAWiG,GAAMA,EAAE5H,KAAOgH,EAAenJ,MAAMmC,MAC7D,IAAX0B,IACFoF,EAASjJ,MAAM6D,GAAS7C,EAASK,MAEnC8H,EAAenJ,MAAQ,KACvBoJ,EAAsBpJ,MAAQ,EAAE,IAEjCwF,OAAO7E,IACNG,QAAQH,MAAM,YAAaA,EAAM,GACjC,EAIAqJ,EAAiB3D,IACrBpF,EAAA,EACGuD,OACC,GAAG5E,EAAMO,8BAA8B6I,EAAMrC,OAAOxE,eAAekE,YACnE,CACElF,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAG5CmF,MAAK,KACJ0D,EAASjJ,MAAQiJ,EAASjJ,MAAMiK,QAAQP,GAAYA,EAAQvH,KAAOkE,IAEnE2B,EAAQhI,MAAM2J,cAAgBV,EAASjJ,MAAMoF,OAG7C,MAAMvB,EAAQjE,EAAMM,SAAS4D,WAAW9B,GAAMA,EAAEG,KAAO6F,EAAQhI,MAAMmC,MACtD,IAAX0B,IACFjE,EAAMM,SAAS2D,GAAO8F,cAAgBV,EAASjJ,MAAMoF,OACvD,IAEDI,OAAO7E,IACNG,QAAQH,MAAM,YAAaA,EAAM,GACjC,EAIAuJ,EAAa,KACjBf,EAAenJ,MAAQ,KACvBoJ,EAAsBpJ,MAAQ,EAAE,EAI5BmK,EAAgB,KACpBlJ,EAAA,EACGuD,OAAO,GAAG5E,EAAMO,8BAA8B6H,EAAQhI,MAAMmC,aAAc,CACzEhB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAE1CmF,MAAK,KACJI,MAAM,iBACNlF,EAAOgB,KAAK,CAAEC,KAAM,eAAgB,IAErC8D,OAAO7E,IACNG,QAAQH,MAAM,aAAcA,EAAM,GAClC,EAIAyJ,EAAS,KACb3J,EAAOgB,KAAK,CAAEC,KAAM,eAAgB,EAGhC2I,EAAW,KACf5J,EAAOgB,KAAK,CAAEC,KAAM,WAAYiF,OAAQ,CAAExE,GAAI6F,EAAQhI,MAAMmC,KAAO,E,OAGrErB,QAAQC,IAAI,KAAKiH,G,6jGC/SX,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,wSCkEA,MAAMtB,GAAQ,QAAI,IACZP,GAAU,QAAI,IACdmE,GAAc,QAAI,IAClBC,GAAgB,QAAI,IACpBC,GAAgB,QAAI,MACpBC,GAAsB,QAAI,MAC1B7B,GAAe,QAAI,IACnB8B,GAAiB,SAAI,GACrBC,GAAc,QAAI,GAClBC,GAAiB,QAAI,GAErBhL,EAAQC,IACRY,GAAS,UAET2J,EAAS,KACb3J,EAAOoK,IAAI,EAAE,EAITC,EAAuB,IAAOJ,EAAe1K,OAAQ,EACrD+K,EAAkB,KACtBL,EAAe1K,OAAQ,EACvBsK,EAAYtK,MAAQ,GACpBuK,EAAcvK,MAAQ,EAAE,EAIpByG,EAAe5F,UACnB,GAAKyJ,EAAYtK,MAAMyJ,OAKvB,IACE,MAAMzI,QAAiBpB,EAAM6G,aAAa6D,EAAYtK,MAAMyJ,QAC5Dc,EAAcvK,MAAQgB,CACxB,CAAE,MAAOL,GACPG,QAAQH,MAAM,0BAA2BA,GACzCiI,EAAa5I,MAAQ,mBACvB,MAVEuK,EAAcvK,MAAQ,EAUxB,EAIIgL,EAAerC,IACnB6B,EAAcxK,MAAQ2I,EACtB8B,EAAoBzK,MAAQ,kCAAkC2I,EAAMsC,aACpEF,GAAiB,EAIbG,EAAalL,GAAW2K,EAAY3K,MAAQA,EAC5CmL,EAAa,IAAOR,EAAY3K,MAAQ,EACxCoL,EAAgB7H,GAAYqH,EAAe5K,MAAQuD,EAGnD8H,GAAe,SAAI,GAEnBxE,EAAgBhG,UACpB,IAAIwK,EAAarL,MAAjB,CAGA,GAFAqL,EAAarL,OAAQ,GAEhBwK,EAAcxK,MAGjB,OAFA2F,MAAM,2BACN0F,EAAarL,OAAQ,GAIvB,IACE,MAAMsI,QAAmB1I,EAAMiH,cAAc,CAC3CH,MAAOA,EAAM1G,MACbmG,QAASA,EAAQnG,MACjBiL,WAAYR,EAAoBzK,MAChCuD,OAAQqH,EAAe5K,MACvB2I,MAAO6B,EAAcxK,MAAMmC,KAI7BvC,EAAMM,SAASoL,QAAQhD,SACjB1I,EAAMmF,kBACZY,MAAM,sBACNlF,EAAOgB,KAAK,CAAEC,KAAM,eACtB,CAAE,MAAOf,GACPG,QAAQH,MAAM,0BAA2BA,GACzCgF,MAAM,iBACR,CAAE,QACA0F,EAAarL,OAAQ,CACvB,CA5B8B,CA4B9B,E,k0DC1JI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,gRCkCA,MAAMN,GAAW,QAAI,IACf6L,GAAY,QAAI,IAChBC,GAAY,QAAI,IAChBC,GAAiB,QAAI,MACrBC,GAAiB,QAAI,MACrBC,GAAY,QAAI,MAEhB/L,EAAQC,IAER+L,EAAgBC,IACpB,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC5BF,IACFL,EAAezL,MAAQ8L,EACvBJ,EAAe1L,MAAQiM,IAAIC,gBAAgBJ,GAC7C,EAEIxK,EAAST,UACb,MAAMsL,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAY3M,EAASM,OACrCmM,EAASE,OAAO,YAAad,EAAUvL,OACvCmM,EAASE,OAAO,YAAab,EAAUxL,OACnCyL,EAAezL,OACjBmM,EAASE,OAAO,kBAAmBZ,EAAezL,OAGpDc,QAAQC,IAAI,4BACZ,IAAK,IAAK2E,EAAK1F,KAAUmM,EAASG,UAChCxL,QAAQC,IAAI,GAAG2E,KAAQ1F,GAGzB,UACQJ,EAAM0B,OAAO6K,GACnBxG,MAAM,WACR,CAAE,MAAOhF,GACPG,QAAQH,MAAM,WAAYA,GAC1BgF,MAAM,WACR,GAEI4G,EAAmB,KACvBZ,EAAU3L,MAAMwM,OAAO,E,qlDC3EnB,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,ICPOC,MAAM,a,IAGJA,MAAM,0B,IAJf,MAc2BA,MAAM,e,IAdjC,MAiByCA,MAAM,kB,IAEpCA,MAAM,kB,GAnBjB,Y,GAAA,c,IAAA,O,IAyCaA,MAAM,qD,IACLA,MAAM,e,GA1CpB,Y,IAiDaA,MAAM,oB,GAjDnB,Y,IAqDeA,MAAM,4B,GArDrB,Y,GAAA,c,GAAA,Y,0EACE,QAiFM,MAjFN,GAiFM,C,aAhFJ,QAAsE,MAAlEA,MAAM,2CAA0C,iBAAa,KAEjE,QASM,MATN,GASM,EARN,QAA0C,GAA7B,gBAAgB,EAAAC,WAAS,6BAEtC,QAKO,QALA,SAAM,aAPjB,iBAO2B,EAAAC,aAAA,EAAAA,eAAA,IAAW,cAAEF,MAAM,c,WACxC,QAA+F,SAAxFG,KAAK,SARlB,qCAQoC,EAAW,eAAEC,QAAQ,UAASC,SAAA,GAASC,YAAY,a,iBAAnD,EAAAzC,e,aAC9B,QAES,UAFDmC,MAAM,aAAaG,KAAK,U,EAC9B,QAAe,YAAT,Q,WAID,EAAY,e,WAArB,QAAiE,IAAjE,IAAiE,QAAnB,EAAAhE,cAAY,KAd9D,eAiBe,EAAA2B,cAAcnF,OAAS,I,WAAlC,QAgBM,MAhBN,GAgBM,C,aAfJ,QAAc,UAAV,SAAK,KACT,QAaM,MAbN,GAaM,G,aAZJ,QAWM,WA/Bd,QAsB0B,EAAAmF,eAAT5B,K,WAFT,QAWM,OAVJ8D,MAAM,OAEL/G,IAAKiD,EAAMxG,GACX,QAAK,GAAE,EAAA6K,WAAWrE,EAAMxG,K,EAEzB,QAIE,OAHC8K,IAAK,EAAAC,iBAAiBvE,EAAMsC,YAC7BwB,MAAM,eACLU,IAAKxE,EAAMjC,O,OA7BxB,K,EAAA,O,wBAoCI,QA6CM,MAjFV,M,aAwCM,QAwCM,WAhFZ,QAwC6B,EAAA0G,UAAXC,K,WAAZ,QAwCM,OAxC4B3H,IAAK2H,EAAQ3L,KAAM+K,MAAM,Q,EACzD,QAKM,MALN,GAKM,EAJJ,QAAgD,KAAhD,IAAgD,QAArBY,EAAQ3G,OAAK,IACxC,QAES,UAFD+F,MAAM,WAAY,QAAK,GAAE,EAAAa,SAASD,EAAQ3L,O,cA3C5D,QA2CmE,UACnD,QAA+B,QAAzB+K,MAAM,SAAQ,KAAI,K,EA5CxC,OAiDQ,QA8BM,MA9BN,GA8BM,EA7BJ,QAES,UAFDA,MAAM,oBAAqB,QAAK,GAAE,EAAAc,UAAUF,EAAQ3L,OAAO,MAEnE,EApDV,KAqDU,QAsBM,MAtBN,GAsBM,EArBJ,QAoBM,OAnBJ+K,MAAM,iBACLe,OAxDf,S,yBAwD4F,IAAzB,eAAa,EAAQ,a,gBAI1E,QAaM,WAzEpB,QA8DyC,EAAAC,UAAUJ,EAAQK,OAAQ,IA9DnE,CA8DwBC,EAAO9J,M,WAFjB,QAaM,OAZJ4I,MAAM,iBAEL/G,IAAK7B,G,gBAEN,QAOM,WAxEtB,QAiEkD8J,GAAThF,K,WAAzB,QAOM,OAPD8D,MAAM,OAA+B/G,IAAKiD,EAAM/D,SACpD,SAlEjB,YAkE6B,EAAAoI,WAAWrE,EAAM/D,WAAQ,W,EACpC,QAIE,OAHCqI,IAAK,EAAAC,iBAAiBvE,EAAMsC,YAC7BwB,MAAM,eACLU,IAAKxE,EAAMjC,O,OAtEhC,K,EAAA,O,wBA4EU,QAES,UAFD+F,MAAM,oBAAqB,QAAK,GAAE,EAAAmB,UAAUP,EAAQ3L,OAAO,MAEnE,EA9EV,W,qBCCO+K,MAAM,a,IAEJA,MAAM,0B,GAHf,U,IAAA,MAuB+CA,MAAM,Q,IAC3CA,MAAM,e,IAGLA,MAAM,kB,GA3BjB,Y,GAAA,c,2CACE,QA8CM,MA9CN,GA8CM,EA5CJ,QAiBM,MAjBN,GAiBM,C,aAhBJ,QAAwD,SAAjDoB,IAAI,eAAepB,MAAM,eAAc,MAAE,K,SAChD,QAcS,UAbPtK,GAAG,eACHsK,MAAM,eAPd,qCAQiB,EAAK,SACb,SAAM,oBAAE,EAAAqB,mBAAA,EAAAA,qBAAA,K,cAET,QAAkC,UAA1B9N,MAAM,QAAO,QAAI,M,aACzB,QAMS,WAlBjB,QAa8B,EAAA+N,QAAbC,K,WADT,QAMS,UAJNtI,IAAKsI,EACLhO,MAAOgO,I,QAEL,EAAAC,kBAAkBD,IAAcA,GAAS,EAjBtD,O,mBAQiB,EAAAE,WAeF,EAAAA,OAAS,EAAAC,eAAe/I,S,WAAnC,QAkBM,MAlBN,GAkBM,EAjBJ,QAEK,KAFL,IAEK,QADU,QAAV,EAAA8I,MAAkB,QAAU,GAAG,EAAAD,kBAAkB,EAAAC,QAAU,EAAAA,YAAK,IAErE,QAaM,MAbN,GAaM,G,aAZJ,QAWM,WAvCd,QA8B0B,EAAAC,gBAATxF,K,WAFT,QAWM,OAVJ8D,MAAM,OAEL/G,IAAKiD,EAAM/D,SACX,QAAK,GAAE,EAAAoI,WAAWrE,EAAM/D,W,EAEzB,QAIE,OAHCqI,IAAK,EAAAC,iBAAiBvE,EAAMsC,YAC7BwB,MAAM,eACLU,IAAKxE,EAAMjC,O,OArCxB,K,EAAA,O,YAAA,gB,CAuDA,UACE,KAAA0H,GACE,MAAM3N,GAAS,UACTuI,GAAQ,UAERiF,EAAoB,CACxBI,IAAK,QACLC,OAAQ,KACRC,SAAU,OACVC,MAAO,KACPC,MAAO,MACPC,QAAS,MACTC,QAAS,MACTC,UAAW,QACXC,UAAW,KACXC,OAAQ,KACRC,OAAQ,MACRC,QAAS,KACTC,IAAK,KACL,kBAAmB,KACnBC,QAAS,OACTC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,YAAa,SAITvB,GAAS,QAAI,IACbL,GAAS,QAAI,IACbS,GAAiB,QAAI,IACrBD,GAAQ,QAAIlF,EAAMrC,OAAOuH,OAAS,QAGlCqB,EAAc1O,UAClB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,oBACjCwM,EAAO1N,MAAQgB,EAASK,KAAKmO,KAAKC,IAAS,CACzC7K,SAAU6K,EAAKC,OAAO9K,SACtB8B,MAAO+I,EAAKC,OAAOhJ,MACnBuE,WAAYwE,EAAKC,OAAOzE,WACxB8C,OAAQ0B,EAAKC,OAAO3B,WAItB,MAAM4B,EAAW,IAAIC,IACrBlC,EAAO1N,MAAM6P,SAASlH,IACpBA,EAAMoF,OAAO8B,SAASC,GAAMH,EAASI,IAAID,IAAG,IAE9C/B,EAAO/N,MAAQ,CAAC,SAAUgQ,MAAMC,KAAKN,IAErCO,GACF,CAAE,MAAOvP,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAIIuP,EAAe,KACdhC,EAAMlO,OAAyB,SAAhBkO,EAAMlO,MAGC,QAAhBkO,EAAMlO,MACfmO,EAAenO,MAAQ0N,EAAO1N,MAE9BmO,EAAenO,MAAQ0N,EAAO1N,MAAMiK,QAAQtB,GAC1CA,EAAMoF,OAAOoC,SAASjC,EAAMlO,SAL9BmO,EAAenO,MAAQ,EAOzB,EAII8N,EAAoB,KACJ,SAAhBI,EAAMlO,MACRS,EAAOgB,KAAK,CAAEC,KAAM,cAEpBjB,EAAOgB,KAAK,CAAEC,KAAM,aAAciF,OAAQ,CAAEuH,MAAOA,EAAMlO,QAC3D,EAIIgN,EAActI,IAClBjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,EAIzDwI,EAAoBkD,IACxB,MAAMC,EAAU,kCAChB,MAAO,GAAGA,IAAUD,GAAW,EAWjC,OAPA,QAAMpH,GAAQsH,IACZpC,EAAMlO,MAAQsQ,EAAS3J,OAAOuH,OAAS,OACvCgC,GAAc,KAGhB,QAAUX,GAEH,CACLxB,SACAI,iBACAD,QACAD,oBACAH,oBACAd,aACAE,mBAEJ,GC5JI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,MFmFA,IACEqD,WAAY,CAAEC,WAAU,IACxB,KAAApC,GACE,MAAM3N,GAAS,UACT6J,GAAc,QAAI,IAClB1B,GAAe,QAAI,IACnB2B,GAAgB,QAAI,IACpBkG,EAAgB,+DAChBrD,GAAW,QAAI,CACnB,CAAE1L,KAAM,UAAWgF,MAAO,OAAQgH,OAAQ,IAC1C,CAAEhM,KAAM,SAAUgF,MAAO,OAAQgH,OAAQ,IACzC,CAAEhM,KAAM,WAAYgF,MAAO,SAAUgH,OAAQ,MAGzCgD,GAAe,QAAI,CACvBC,QAAS,EACTC,OAAQ,EACRC,SAAU,IAGNtB,EAAc1O,UAClB,MAAMiQ,EAAY,CAChBH,QAAS,gBACTC,OAAQ,eACRC,SAAU,kBAGZ,IAAK,MAAMxD,KAAWD,EAASpN,MAC7B,IACE,MAAMgB,QAAiBC,EAAA,EAAMC,IAAI4P,EAAUzD,EAAQ3L,OACnD2L,EAAQK,OAAS1M,EAASK,KAAKmO,KAAKC,IAAS,CAC3C7K,SAAU6K,EAAKC,OAAO9K,SACtB8B,MAAO+I,EAAKC,OAAOhJ,MACnBuE,WAAYwE,EAAKC,OAAOzE,cAE5B,CAAE,MAAOtK,GACPG,QAAQH,MAAM,kBAAkB0M,EAAQ3L,QAASf,EACnD,CACF,EAGI8M,EAAY,CAACC,EAAQqD,KACzB,MAAMC,EAAS,GACf,IAAK,IAAIvN,EAAI,EAAGA,EAAIiK,EAAOtI,OAAQ3B,GAAKsN,EACtCC,EAAOvP,KAAKiM,EAAOuD,MAAMxN,EAAGA,EAAIsN,IAElC,OAAOC,CAAM,EAGTpD,EAAasD,IACjB,MAAMC,EAAcC,KAAKC,KACvBjE,EAASpN,MAAMsR,MAAMC,GAAMA,EAAE7P,OAASwP,IAAaxD,OAAOtI,OAAS,GAEjEsL,EAAa1Q,MAAMkR,GAAeC,EAAc,GAClDT,EAAa1Q,MAAMkR,IACrB,EAGI3D,EAAa2D,IACbR,EAAa1Q,MAAMkR,GAAe,GACpCR,EAAa1Q,MAAMkR,IACrB,EAGIM,EAAmB,CAAC9D,EAAQ+D,IACzB/D,EAAOuD,MAAM,EAAGQ,GAGnBzE,EAActI,IAClBjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,EAGzD4I,EAAYD,IAChB5M,EAAOgB,KAAK,CAAEC,KAAM,YAAaiF,OAAQ,CAAE0G,YAAY,EAGnDX,EAAawB,IACH,SAAVA,EACFzN,EAAOgB,KAAK,CAAEC,KAAM,cAAe6D,MAAK,KACtCgC,OAAOmK,SAASC,QAAQ,IAG1BlR,EAAOgB,KAAK,CAAEC,KAAM,aAAciF,OAAQ,CAAEuH,UAC9C,EAGIhB,EAAoBkD,GACxB,kCAAkCA,IAE9BzD,EAAc9L,UAClB,IAAKyJ,EAAYtK,MAAMyJ,OAGrB,OAFAc,EAAcvK,MAAQ,QACtB4I,EAAa5I,MAAQ,mBAIvB,IACE,MAAM4R,EAAiBtH,EAAYtK,MAAM6R,QAAQ,OAAQ,IACnD7Q,QAAiBC,EAAA,EAAMC,IAC3B,8CACA,CACEyF,OAAQ,CAAED,MAAOkL,KAIrBrH,EAAcvK,MAAQgB,EAASK,KAAKmO,KAAK7G,IAAU,CACjDxG,GAAIwG,EAAMxG,GACVuE,MAAOiC,EAAMjC,MACbuE,WAAYtC,EAAMsC,WAClB6G,YAAanJ,EAAMmJ,gBAErBlJ,EAAa5I,MAAQ,EACvB,CAAE,MAAOW,GACPiI,EAAa5I,MACXW,EAAMK,UAAUK,MAAMV,OAAS,iBACjC4J,EAAcvK,MAAQ,EACxB,GAMF,OAHA,QAAUuP,GACVzO,QAAQC,IAAI,qBAAqBwJ,GAE1B,CACL6C,WACA9C,cACA1B,eACA8H,eACAjD,YACAG,YACAL,YACAP,aACAM,WACAZ,YACAQ,mBACAsE,mBACA7E,cACA8D,gBACAlG,gBAEJ,GGhOI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAASwH,IAAQ,CAAC,YAAY,qBAEzF,M,ICROtF,MAAM,a,IAEJA,MAAM,0D,IACLA,MAAM,e,IAQPA,MAAM,kB,GAZf,Y,GAAA,c,2CACE,QAyBM,MAzBN,GAyBM,EAvBJ,QAMM,MANN,GAMM,EALJ,QAAkD,KAAlD,IAAkD,QAAvB,EAAAuF,cAAe,MAAG,IAC7C,QAES,UAFDvF,MAAM,WAAY,QAAK,oBAAE,EAAArC,QAAA,EAAAA,UAAA,K,cAC/B,QAA+B,QAAzBqC,MAAM,SAAQ,KAAI,IANhC,QAMuC,gBAMnC,QAaM,MAbN,GAaM,G,aAZJ,QAWM,WAxBZ,QAewB,EAAAiB,QAAT/E,K,WAFT,QAWM,OAVJ8D,MAAM,OAEL/G,IAAKiD,EAAM/D,SACX,QAAK,GAAE,EAAAoI,WAAWrE,EAAM/D,W,EAEzB,QAIE,OAHCqI,IAAK,EAAAC,iBAAiBvE,EAAMsC,YAC7BwB,MAAM,eACLU,IAAKxE,EAAMjC,O,OAtBtB,K,EAAA,O,UAkCA,UACE,KAAA0H,GACE,MAAMpF,GAAQ,UACRvI,GAAS,UACT4M,GAAU,QAAIrE,EAAMrC,OAAO0G,SAC3BK,GAAS,QAAI,IAGb6B,EAAc1O,UAClB,IACE,MAAMoR,EACc,YAAlB5E,EAAQrN,MACJ,gBACkB,WAAlBqN,EAAQrN,MACR,eACA,iBAEAgB,QAAiBC,EAAA,EAAMC,IAAI+Q,GACjCvE,EAAO1N,MAAQgB,EAASK,KAAKmO,KAAKC,IAAS,CACzC7K,SAAU6K,EAAKC,OAAO9K,SACtB8B,MAAO+I,EAAKC,OAAOhJ,MACnBuE,WAAYwE,EAAKC,OAAOzE,cAE5B,CAAE,MAAOtK,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAIIqR,GAAe,SAAS,IACH,YAAlB3E,EAAQrN,MACX,KACkB,WAAlBqN,EAAQrN,MACR,KACA,SAIAgN,EAActI,IAClBjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,EAIzDwI,EAAoBkD,GACxB,kCAAkCA,IAG9BhG,EAAS,KACb3J,EAAOoK,IAAI,EAAE,EAKf,OAFA,QAAU0E,GAEH,CACLyC,eACAtE,SACAV,aACAE,mBACA9C,SAEJ,GCvFI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,ICROqC,MAAM,iB,IACJA,MAAM,iB,IACJA,MAAM,gB,IAINA,MAAM,c,IAELA,MAAM,iB,GATlB,Y,IA0BaA,MAAM,gB,2CAzBjB,QAqCM,MArCN,GAqCM,EApCJ,QAmCM,MAnCN,GAmCM,EAlCJ,QAGM,MAHN,GAGM,C,aAFJ,QAAmC,MAA/BA,MAAM,eAAc,UAAM,KAC9B,QAAkE,UAA1DA,MAAM,YAAa,QAAK,eAAEyF,EAAAA,MAAM,WAAU,QAEpD,QA6BM,MA7BN,GA6BM,EA3BJ,QAcK,KAdL,GAcK,G,aAbH,QAYK,WAtBf,QAW+B,EAAAC,YAAZC,K,WADT,QAYK,MAVF1M,IAAK0M,EAASjQ,GACfsK,MAAM,iB,EAblB,iBAee2F,EAAS1Q,MAAO,IACnB,YAKS,UAJP+K,MAAM,cACL,QAAK,GAAE,EAAA7F,mBAAmBwL,EAASjQ,KACrC,OAED,EArBZ,S,SA0BQ,QASM,MATN,GASM,E,SARJ,QAIE,SA/BZ,qCA4BqB,EAAe,mBACxB4K,YAAY,mBACZN,MAAM,kB,iBAFG,EAAA4F,oBAIX,QAES,UAFD5F,MAAM,iBAAkB,QAAK,oBAAE,EAAA6F,gBAAA,EAAAA,kBAAA,KAAgB,mB,CC9BjE,MAAMC,GAAgBtR,EAAA,EAAMuR,OAAO,CACjCC,QAAS,+BACTC,QAAS,IACTC,iBAAiB,IAInBJ,GAAcK,aAAaC,QAAQC,KAAKC,IACtC,MAAM3S,EAAQyF,aAAamN,QAAQ,SAInC,OAHI5S,IACF2S,EAAO5R,QAAQC,cAAgB,SAAShB,KAEnC2S,CAAM,IAGf,YD6BA,IACEjL,MAAO,CACLpD,QAASuO,QAEX,KAAA7E,CAAMtG,GACJ,MAAMqK,GAAa,QAAI,IACjBE,GAAkB,QAAI,IACtBzS,EAAQC,IAERqT,EAAkBrS,UACtB,IACE,MAAMG,QAAiB,GAAcE,IACnC,6CAA8C,CAC5CC,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpC+R,EAAWnS,MAAQgB,EAASK,IAC9B,CAAE,MAAOV,GACPG,QAAQH,MAAM,6BAA8BA,GAC5CgF,MAAM,sBACR,GAII2M,EAAiBzR,UACrB,GAAKwR,EAAgBrS,MAAMyJ,OAI3B,IACE,MAAMzI,QAAiB,GAAcO,KACnC,oDACA,CAAEG,KAAM2Q,EAAgBrS,OACxB,CACEmB,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpC+R,EAAWnS,MAAMyB,KAAKT,EAASK,MAC/BgR,EAAgBrS,MAAQ,GACxB2F,MAAM,gBACR,CAAE,MAAOhF,GACPG,QAAQH,MAAM,2BAA4BA,EAAMK,UAAYL,EAAMiB,SAClE+D,MACE,wBACGhF,EAAMK,UAAUK,MAAM8R,QAAU,aAEvC,MAtBExN,MAAM,kBAsBR,EAIIiB,EAAqB/F,MAAOuD,IAChC,UACQ,GAAc7C,KAClB,uDACA,CACEoD,YAAaP,EACbQ,SAAUkD,EAAMpD,SAElB,CACEvD,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCuF,MAAM,oBACR,CAAE,MAAOhF,GACPG,QAAQH,MAAM,kCAAmCA,GACjDgF,MAAM,qBACR,GAMF,OAFA,QAAUuN,GAEH,CACLf,aACAE,kBACAa,kBACAZ,iBACA1L,qBAEJ,GE5HI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,6aCyCA,MAAMkB,EAAQ,EAIRsL,GAAY,QAAI,IAChBlM,GAAY,SAAI,GAChBmM,GAAW,QAAI,MACfC,QAAa,wBAEbC,EAAY,KAChBH,EAAUpT,MAAQ,EAAE,EAIhBwT,EAAe3S,UACnBqG,EAAUlH,OAAQ,EAClB,IACE,MAAMgB,QAAiBC,EAAA,EAAMC,IAAI,+CAAgD,CAC/EyF,OAAQ,CACNjB,IAAK4N,EACLG,KAAM,UACN7G,KAAM,QACN8G,EAAG,GAAG5L,EAAM6L,4BACZC,WAAY,KAIVC,EAAU7S,EAASK,KAAKyS,MAAM,IAAI3R,IAAI0R,SAAW,KAErDT,EAAUpT,MADR6T,EACgB,iCAAiCA,sBAEjC,IAEtB,CAAE,MAAOlT,GACPG,QAAQH,MAAM,qBAAsBA,GACpCyS,EAAUpT,MAAQ,IACpB,CAAE,QACAkH,EAAUlH,OAAQ,CACpB,G,OAIF,SAAU,KACJqT,EAASrT,QACXqT,EAASrT,MAAM6H,iBAAiB,gBAAiB2L,GACjDH,EAASrT,MAAM6H,iBAAiB,kBAAmB0L,GACrD,KAGF,SAAgB,KACVF,EAASrT,QACXqT,EAASrT,MAAM+T,oBAAoB,gBAAiBP,GACpDH,EAASrT,MAAM+T,oBAAoB,kBAAmBR,GACxD,I,6xBCjGI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,iWC0DA,MAAMvK,GAAQ,UAERL,GAAQ,QAAI,CAAC,GACbqL,GAAoB,SAAI,GAGxB9G,EAAoBkD,IACxB,MAAMC,EAAU,kCAChB,MAAO,GAAGA,IAAUD,GAAW,EAI3B6D,EAAapT,UACjB,MAAM6D,EAAUsE,EAAMrC,OAAOxE,GAC7B,IACE,MAAMnB,QAAiBC,EAAA,EAAMC,IAC3B,uCAAuCwD,MAEzCiE,EAAM3I,MAAQgB,EAASK,KAGvB,MAAM6S,EAAc,sCAAsCvL,EAAM3I,MAAMmU,eAChEC,EAAoBC,SAASC,cAAc,qBAC7CF,IACFA,EAAkB5G,MAAM+G,gBAAkB,QAAQL,MAEtD,CAAE,MAAOvT,GACPG,QAAQH,MAAM,uBAAwBA,EACxC,G,OAIF,QAAUsT,G,2jDC5FJ,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,2HCPOxH,MAAM,a,IAGJA,MAAM,a,IAJf,MA6D0BA,MAAM,iB,IACzBA,MAAM,iB,IAEJA,MAAM,iB,2CA/Db,QAqEM,MArEN,GAqEM,C,aApEJ,QAA2E,MAAvEA,MAAM,2CAA0C,sBAAkB,KAEtE,QAsDM,MAtDN,GAsDM,EApDJ,QAeM,OAdJA,OAPR,SAOc,YAAW,UACG,EAAA+H,WAAW,sBAC9B,QAAK,eAAE,EAAAC,gBAAgB,kBAAmB,c,cAE3C,QAIE,OAHAxH,IAAA,GACAE,IAAI,WACJV,MAAM,a,UAER,QAA4C,OAAvCA,MAAM,0BAAyB,MAAE,IACtC,QAGM,OAHDA,MAAM,aAAW,EACpB,QAAiB,UAAb,aACJ,QAAoB,SAAjB,mB,SAKP,QAeM,OAdJA,OAzBR,SAyBc,YAAW,UACG,EAAA+H,WAAW,wBAC9B,QAAK,eAAE,EAAAC,gBAAgB,oBAAqB,c,cAE7C,QAIE,OAHAxH,IAAA,GACAE,IAAI,WACJV,MAAM,a,UAER,QAAmD,OAA9CA,MAAM,iCAAgC,MAAE,IAC7C,QAGM,OAHDA,MAAM,aAAW,EACpB,QAAiB,UAAb,aACJ,QAAyD,WArCnE,QAqCa,kCAA6B,QAAK,OArC/C,QAqC+C,wB,SAKzC,QAeM,OAdJA,OA3CR,SA2Cc,YAAW,UACG,EAAA+H,WAAW,kBAC9B,QAAK,eAAE,EAAAC,gBAAgB,cAAe,c,cAEvC,QAIE,OAHAxH,IAAA,GACAE,IAAI,WACJV,MAAM,a,UAER,QAAkD,OAA7CA,MAAM,+BAA8B,OAAG,IAC5C,QAGM,OAHDA,MAAM,aAAW,EACpB,QAAiB,UAAb,aACJ,QAA0B,SAAvB,yB,UAME,EAAS,Y,WAApB,QAOE,MAPF,GAOE,EANJ,QAKM,MALN,GAKM,EAJJ,QAAyB,kBAAnB,EAAAiI,cAAY,IAClB,QAEM,MAFN,GAEM,EADJ,QAA0D,UAAlDjI,MAAM,aAAc,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,cAjErD,gB,CA2EA,UACEjT,KAAM,WACN,IAAAL,GACE,MAAO,CACLuT,aAAc,MAEdC,WAAW,EACXH,aAAc,GAElB,EACAI,QAAS,CACP,eAAAL,CAAgBM,EAASC,GACvB,MAAMC,EAAapP,aAAamN,QAAQ+B,GAClCG,EAAM1S,KAAK0S,MAEjB,GAAID,GAAcC,EAAMD,EAAaE,KAAKP,aAAc,CACtD,MAAMQ,EAAgBD,KAAKP,cAAgBM,EAAMD,GAC3ChS,EAAQmO,KAAKiE,MAAMD,EAAgB,MACnCjS,EAAUiO,KAAKiE,MAAOD,EAAgB,KAAoB,KAChED,KAAKT,aAAe,GAAGM,SAAgB/R,OAAWE,uBAClDgS,KAAKN,WAAY,CACnB,MACEM,KAAKG,QAAQ7T,KAAK,CAAEC,KAAMqT,GAE9B,EACA,UAAAP,CAAWO,GACT,MAAME,EAAapP,aAAamN,QAAQ+B,GAClCG,EAAM1S,KAAK0S,MACjB,OAAOD,GAAcC,EAAMD,EAAaE,KAAKP,YAC/C,EACA,UAAAD,GACEQ,KAAKN,WAAY,CACnB,ICpGE,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,ICROpI,MAAM,a,IADb,MAIyBA,MAAM,e,IAJ/B,O,IAyDSA,MAAM,e,IAzDf,MA4D+CA,MAAM,gC,IAKxCA,MAAM,mB,IAjEnB,MA8E8CA,MAAM,qC,IA9EpD,MA+E6BA,MAAM,gB,IA/EnC,MAgFmBA,MAAM,e,GAhFzB,Q,IAAA,MA4F0BA,MAAM,iB,IACrBA,MAAM,iB,IACJA,MAAM,gB,IAINA,MAAM,c,IAGJA,MAAM,iB,2CApGnB,QA2GM,MA3GN,GA2GM,C,eA1GJ,QAAgD,MAA5CA,MAAM,0BAAyB,YAAQ,IAEhC,EAAQ,W,WAAnB,QAiDM,MAjDN,GAiDM,C,eAhDJ,QAAe,UAAX,UAAM,I,eACV,QAAsB,SAAnB,mBAAe,KAClB,QAAsD,SAAnD,UAAM,QAAG,EAAA8I,cAAe,OAAG,QAAG,EAAAC,gBAAc,IAC/C,QAA2C,SAAxC,iBAAa,WAAQ,EAAAD,cAAY,IAGpC,QAYI,KAXF9I,MAAM,iBACNgJ,KAAK,IACJ,QAAK,aAdd,YAcwB,EAAAC,iBAAiB,UAAD,cAChC,iBAAe,QACf,iBAAe,iB,gBAEf,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBArBrB,QAqBqB,kBAMf,QAUI,KATFjJ,MAAM,cACNgJ,KAAK,IACJ,QAAK,aA9Bd,iBA8BwB,EAAAE,aAAA,EAAAA,eAAA,IAAW,e,gBAE3B,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBAnCrB,QAmCqB,iBAKf,QAYI,KAXFlJ,MAAM,oBACNgJ,KAAK,IACJ,QAAK,aA3Cd,YA2CwB,EAAAC,iBAAiB,SAAD,cAChC,iBAAe,QACf,iBAAe,iB,gBAEf,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBAlDrB,QAkDqB,qB,WAKjB,QAmCM,MA1FV,KAyDM,QAAmF,IAAnF,GAAuB,OAAG,QAAG,EAAAE,qBAAuB,GAAI,OAAG,QAAG,EAAAJ,gBAAc,IAGhE,EAAAK,YAAc,EAAAC,gB,WAA1B,QAeM,MAfN,GAeM,C,eAdJ,QAEM,OAFD3T,GAAG,cAAY,EAClB,QAAiC,QAA3BsK,MAAM,iBAAqB,QAA4B,QAAtBA,MAAM,SAAQ,O,KAGvD,QASM,MATN,GASM,E,SARJ,QAME,SAxEZ,qCAmEqB,EAAU,cACnBA,MAAM,2BACNG,KAAK,OACLG,YAAY,mBACX,QAAK,aAvElB,iBAuE0B,EAAAgJ,aAAA,EAAAA,eAAA,IAAW,a,iBAJhB,EAAAC,eAMX,QAA0E,UAAlEvJ,MAAM,6BAA8B,QAAK,oBAAE,EAAAsJ,aAAA,EAAAA,eAAA,KAAa,WAzE1E,eA8EiB,EAAAF,YAAc,EAAAC,gB,WAAzB,QAWM,MAXN,GAWM,CAVM,EAAS,Y,WAAnB,QAAwD,KAAxD,GAA0C,gB,WAC1C,QAEK,KAFL,GAA+B,iBACjB,QAAG,EAAAA,eAAepP,MAAM,IAAK,YAC3C,KACA,QAIE,OAHCuG,IAAK,EAAAgJ,aAAa,EAAAH,eAAe3T,IAClCsK,MAAM,mBACNU,IAAI,U,OAtFd,KAwFQ,QAAyE,UAAjEV,MAAM,6BAA8B,QAAK,oBAAE,EAAAyJ,YAAA,EAAAA,cAAA,KAAY,SAxFvE,kBA4Fe,EAAS,Y,WAApB,QAeM,MAfN,GAeM,EAdJ,QAaM,MAbN,GAaM,EAZJ,QAGM,MAHN,GAGM,C,eAFJ,QAAmC,KAAhCzJ,MAAM,eAAc,YAAQ,KAC/B,QAA8D,UAAtDA,MAAM,YAAa,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,QAEhD,QAOM,MAPN,GAOM,EANJ,QAAyB,kBAAnB,EAAAD,cAAY,G,eAClB,QAAiC,SAA9B,8BAA0B,KAC7B,QAGM,MAHN,GAGM,EAFJ,QAAsE,UAA9DjI,MAAM,iBAAkB,QAAK,oBAAE,EAAA0J,oBAAA,EAAAA,sBAAA,KAAoB,OAC3D,QAA8D,UAAtD1J,MAAM,iBAAkB,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,gBAvG/D,gB,CAgHA,MAAMyB,GAAe,cAOrB,IACE,KAAAhI,GACE,MAAMiI,GAAU,QAAI,IACdC,GAAkB,QAAI,IACtBR,GAAgB,QAAI,CAAC,GACrBF,GAAuB,QAAI,GAC3BJ,GAAiB,QAAI,GACrBQ,GAAa,QAAI,IACjBO,GAAY,SAAI,GAChBV,GAAa,SAAI,GACjBW,GAAW,SAAI,GACfjB,GAAe,QAAI,GAGnBV,GAAY,SAAI,GAChBH,GAAe,QAAI,IACnB+B,GAAc,QAAI,IAElBhW,GAAS,UACTb,EAAQC,IAER6W,EAAc,KAClB7Q,aAAa8Q,QAAQP,GAAc5T,KAAK0S,MAAM,EAG1CQ,EAAoBrN,IACxBoO,EAAYzW,MAAQqI,EACpBqM,EAAa1U,MAAW,GAAKuV,EAAavV,MAArB,eACrB6U,EAAU7U,OAAQ,CAAI,EAGlB2U,EAAa,KACjBE,EAAU7U,OAAQ,CAAK,EAGnBmW,EAAqBtV,UACC,UAAtB4V,EAAYzW,aACR4W,IACNF,KAC+B,SAAtBD,EAAYzW,cACf6W,IACNH,KAEF/B,GAAY,EAGRmC,EAAoB,KACxBpC,EAAa1U,MAAQ,EAAE,EAGnB4W,EAAc/V,UACd0U,EAAavV,MAAQ,SACjB+W,EAAkC,GAArBxB,EAAavV,aAE5BJ,EAAMmF,kBACZtE,EAAOgB,KAAK,CAAEC,KAAM,YAAa,EAG7BmV,EAAWhW,UACX0U,EAAavV,MAAQ,SACjB+W,EAAkC,GAArBxB,EAAavV,aAE5BJ,EAAMmF,kBACZtE,EAAOgB,KAAK,CAAEC,KAAM,YAAa,EAG7BqV,EAAelW,MAAOiE,IAC1B,UACQ7D,EAAA,EAAMM,KACV,GAAG3B,EAAMO,gCACT,CAAE2E,UACF,CACE3D,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCR,EAAMkF,QAAUA,CAClB,CAAE,MAAOnE,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIgV,EAAc,KAClBC,EAAqB5V,MAAQ,EAC7BuV,EAAavV,MAAQ,EACrBwW,EAASxW,OAAQ,EACjBgW,EAAWhW,MAAQ,GACnB6V,EAAW7V,OAAQ,EACnBuW,EAAUvW,OAAQ,EAGlBgX,IACAlB,EAAc9V,MAAQsW,EAAgBtW,MAAM4V,EAAqB5V,QAGjE,SAAS,KACPiX,EAAkBnB,EAAc9V,MAAMkX,OAAQ,eAAe,GAC7D,EAGEC,EAAetW,UACnB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,0BACjCmV,EAAQrW,MAAQgB,EAASK,KACzB2V,IACAlB,EAAc9V,MAAQsW,EAAgBtW,MAAM4V,EAAqB5V,aAC3D,UACNiX,EAAkBnB,EAAc9V,MAAMkX,OACxC,CAAE,MAAOvW,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIqW,EAAsB,KAC1B,MAAMI,EAAWf,EAAQrW,MAAM+B,MAAK,IAAM,GAAMqP,KAAKiG,WACrDf,EAAgBtW,MAAQoX,EAASnG,MAAM,EAAGuE,EAAexV,MAAM,EAG3D+V,EAAc,KACc,KAA5BC,EAAWhW,MAAMyJ,SACrB8M,EAAUvW,MAAQ8V,EAAc9V,MAAM0G,MAAM4Q,MACzCC,GACCvB,EAAWhW,MAAMyJ,OAAO+N,gBAAkBD,EAAaC,gBAEvDjB,EAAUvW,QACZuV,EAAavV,OAAS,GAExB6V,EAAW7V,OAAQ,EAAI,EAGnBkW,EAAa,KACjBF,EAAWhW,MAAQ,GACnB6V,EAAW7V,OAAQ,EACnBuW,EAAUvW,OAAQ,EAClB4V,EAAqB5V,OAAS,EAC1B4V,EAAqB5V,MAAQwV,EAAexV,OAC9C8V,EAAc9V,MAAQsW,EAAgBtW,MAAM4V,EAAqB5V,QACjE,SAAS,KACPiX,EAAkBnB,EAAc9V,MAAMkX,OAAO,KAG/CV,EAASxW,OAAQ,CACnB,EAGIiW,EAAgB9T,GAAO,oBAAoBA,QAE3C8U,EAAqBQ,IACzB,MAAMC,EAAarD,SAASC,cAAc,gBAC1CoD,EAAWC,YAAc,GACzB,IAAIC,EAAM,EACV,MAAMhL,EAAO,KACPgL,EAAMH,EAAKrS,SACbsS,EAAWC,aAAeF,EAAKG,KAC/BC,WAAWjL,EAAM,KACnB,EAEFA,GAAM,EAOR,OAJA,SAAU,KACRuK,GAAc,IAGT,CACLd,UACAC,kBACAR,gBACAF,uBACAJ,iBACAQ,aACAO,YACAV,aACAW,WACAjB,eACAV,YACAH,eACA+B,cACAf,mBACAf,aACAwB,qBACAW,oBACAF,cACAC,WACAlB,cACAI,cACAG,aACAD,eACAS,cAGJ,GChTI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,ICROjK,MAAM,a,IADb,MAIyBA,MAAM,e,IAJ/B,O,IAwDSA,MAAM,e,IAxDf,MA0D8BA,MAAM,gC,IAKvBA,MAAM,mB,IA/DnB,MA2E6BA,MAAM,qC,IA3EnC,MA4E6BA,MAAM,gB,IA5EnC,MA6EmBA,MAAM,e,GA7EzB,Q,IAAA,MAuF0BA,MAAM,iB,IACrBA,MAAM,iB,IACJA,MAAM,gB,IAINA,MAAM,c,IAGJA,MAAM,iB,2CA/FnB,QAsGM,MAtGN,GAsGM,C,eArGJ,QAAgD,MAA5CA,MAAM,0BAAyB,YAAQ,IAEhC,EAAQ,W,WAAnB,QAiDM,MAjDN,GAiDM,C,eAhDJ,QAAe,UAAX,UAAM,I,eACV,QAAsB,SAAnB,mBAAe,KAClB,QAAsD,SAAnD,UAAM,QAAG,EAAA8I,cAAe,OAAG,QAAG,EAAAC,gBAAc,IAC/C,QAA2C,SAAxC,iBAAa,WAAQ,EAAAD,cAAY,IAGpC,QAYI,KAXF9I,MAAM,iBACNgJ,KAAK,IACJ,QAAK,aAdd,YAcwB,EAAAC,iBAAiB,UAAD,cAChC,iBAAe,QACf,iBAAe,iB,gBAEf,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBArBrB,QAqBqB,kBAMf,QAUI,KATFjJ,MAAM,cACNgJ,KAAK,IACJ,QAAK,aA9Bd,iBA8BwB,EAAAE,aAAA,EAAAA,eAAA,IAAW,e,gBAE3B,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBAnCrB,QAmCqB,iBAKf,QAYI,KAXFlJ,MAAM,oBACNgJ,KAAK,IACJ,QAAK,aA3Cd,YA2CwB,EAAAC,iBAAiB,SAAD,cAChC,iBAAe,QACf,iBAAe,iB,gBAEf,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBAlDrB,QAkDqB,qB,WAKjB,QA8BM,MArFV,KAwDM,QAAmF,IAAnF,GAAuB,OAAG,QAAG,EAAAE,qBAAuB,GAAI,OAAG,QAAG,EAAAJ,gBAAc,GAEhE,EAAAK,YA1DlB,iB,WA0DM,QAeM,MAfN,GAeM,C,eAbJ,QAEM,OAFD1T,GAAG,cAAY,EAClB,QAAiC,QAA3BsK,MAAM,iBAAqB,QAA4B,QAAtBA,MAAM,SAAQ,O,KAEvD,QASM,MATN,GASM,E,SARJ,QAME,SAtEZ,qCAiEqB,EAAU,cACnBA,MAAM,2BACNG,KAAK,OACLG,YAAY,mBACX,QAAK,aArElB,iBAqE0B,EAAAgJ,aAAA,EAAAA,eAAA,IAAW,a,iBAJhB,EAAAC,eAMX,QAA0E,UAAlEvJ,MAAM,6BAA8B,QAAK,oBAAE,EAAAsJ,aAAA,EAAAA,eAAA,KAAa,UAIzD,EAAU,a,WAArB,QASM,MATN,GASM,CARM,EAAS,Y,WAAnB,QAAwD,KAAxD,GAA0C,gB,WAC1C,QAAmF,KAAnF,GAA+B,gBAAY,QAAG,EAAA+B,aAAapR,MAAM,IAAK,WAAQ,KAC9E,QAIE,OAHCuG,IAAK,EAAAgJ,aAAa,EAAA6B,aAAapR,MAAM,IACtC+F,MAAM,mBACNU,IAAI,U,OAjFd,KAmFQ,QAAyE,UAAjEV,MAAM,6BAA8B,QAAK,oBAAE,EAAAyJ,YAAA,EAAAA,cAAA,KAAY,SAnFvE,kBAuFe,EAAS,Y,WAApB,QAeM,MAfN,GAeM,EAdJ,QAaM,MAbN,GAaM,EAZJ,QAGM,MAHN,GAGM,C,eAFJ,QAAmC,KAAhCzJ,MAAM,eAAc,YAAQ,KAC/B,QAA8D,UAAtDA,MAAM,YAAa,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,QAEhD,QAOM,MAPN,GAOM,EANJ,QAAyB,kBAAnB,EAAAD,cAAY,G,eAClB,QAAiC,SAA9B,8BAA0B,KAC7B,QAGM,MAHN,GAGM,EAFJ,QAAsE,UAA9DjI,MAAM,iBAAkB,QAAK,oBAAE,EAAA0J,oBAAA,EAAAA,sBAAA,KAAoB,OAC3D,QAA8D,UAAtD1J,MAAM,iBAAkB,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,gBAlG/D,gB,CA2GA,MAAM,GAAe,kBAOrB,IACE,KAAAvG,GACE,MAAMiI,GAAU,QAAI,IACd0B,GAAiB,QAAI,IACrBD,GAAe,QAAI,CAAC,GACpBlC,GAAuB,QAAI,GAC3BJ,GAAiB,QAAI,GACrBQ,GAAa,QAAI,IACjBO,GAAY,SAAI,GAChBV,GAAa,SAAI,GACjBW,GAAW,SAAI,GACfjB,GAAe,QAAI,GAGnBV,GAAY,SAAI,GAChBH,GAAe,QAAI,IACnB+B,GAAc,QAAI,IAElBhW,GAAS,UACTb,EAAQC,IAER6W,EAAc,KAClB7Q,aAAa8Q,QAAQ,GAAcnU,KAAK0S,MAAM,EAG1CQ,EAAoBrN,IACxBoO,EAAYzW,MAAQqI,EACpBqM,EAAa1U,MAAW,GAAKuV,EAAavV,MAArB,eACrB6U,EAAU7U,OAAQ,CAAI,EAGlB2U,EAAa,KACjBE,EAAU7U,OAAQ,CAAK,EAGnBmW,EAAqBtV,UACC,UAAtB4V,EAAYzW,aACR4W,IACNF,KAC+B,SAAtBD,EAAYzW,cACf6W,IACNH,KAEF/B,GAAY,EAGRmC,EAAoB,KACxBpC,EAAa1U,MAAQ,EAAE,EAGnB4W,EAAc/V,UACd0U,EAAavV,MAAQ,SACjB+W,EAAkC,GAArBxB,EAAavV,aAE5BJ,EAAMmF,kBACZtE,EAAOgB,KAAK,CAAEC,KAAM,YAAa,EAG7BmV,EAAWhW,UACX0U,EAAavV,MAAQ,SACjB+W,EAAkC,GAArBxB,EAAavV,aAE5BJ,EAAMmF,kBACZtE,EAAOgB,KAAK,CAAEC,KAAM,YAAa,EAG7BqV,EAAelW,MAAOiE,IAC1B,UACQ7D,EAAA,EAAMM,KACV,GAAG3B,EAAMO,gCACT,CAAE2E,UACF,CACE3D,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCR,EAAMkF,QAAUA,CAClB,CAAE,MAAOnE,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIgV,EAAc,KAClBC,EAAqB5V,MAAQ,EAC7BuV,EAAavV,MAAQ,EACrBwW,EAASxW,OAAQ,EACjBgW,EAAWhW,MAAQ,GACnB6V,EAAW7V,OAAQ,EACnBuW,EAAUvW,OAAQ,EAClBgX,IACAc,EAAa9X,MAAQ+X,EAAe/X,MAAM4V,EAAqB5V,QAG/D,SAAS,IAAMgY,EAAaF,EAAa9X,MAAMiY,YAAW,EAGtDd,EAAetW,UACnB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,6BACjCmV,EAAQrW,MAAQgB,EAASK,KACzB2V,IACAc,EAAa9X,MAAQ+X,EAAe/X,MAAM4V,EAAqB5V,aACzD,UACNgY,EAAaF,EAAa9X,MAAMiY,UAClC,CAAE,MAAOtX,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIqW,EAAsB,KAC1B,MAAMI,EAAWf,EAAQrW,MAAM+B,MAAK,IAAM,GAAMqP,KAAKiG,WACrDU,EAAe/X,MAAQoX,EAASnG,MAAM,EAAGuE,EAAexV,MAAM,EAG1D+V,EAAc,KACc,KAA5BC,EAAWhW,MAAMyJ,SACrB8M,EAAUvW,MAAQ8X,EAAa9X,MAAM0G,MAAM4Q,MACxCC,GACCvB,EAAWhW,MAAMyJ,OAAO+N,gBAAkBD,EAAaC,gBAEvDjB,EAAUvW,QACZuV,EAAavV,OAAS,GAExB6V,EAAW7V,OAAQ,EAAI,EAGnBkW,EAAa,KACjBF,EAAWhW,MAAQ,GACnB6V,EAAW7V,OAAQ,EACnBuW,EAAUvW,OAAQ,EAClB4V,EAAqB5V,OAAS,EAC1B4V,EAAqB5V,MAAQwV,EAAexV,OAC9C8X,EAAa9X,MAAQ+X,EAAe/X,MAAM4V,EAAqB5V,QAC/D,SAAS,IAAMgY,EAAaF,EAAa9X,MAAMiY,cAE/CzB,EAASxW,OAAQ,CACnB,EAGIiW,EAAgBvP,GAAU,uBAAuBA,QAEjDsR,EAAgBP,IACpB,MAAMC,EAAarD,SAASC,cAAc,gBAC1CoD,EAAWC,YAAc,GACzB,IAAIC,EAAM,EACV,MAAMhL,EAAO,KACPgL,EAAMH,EAAKrS,SACbsS,EAAWC,aAAeF,EAAKG,KAC/BC,WAAWjL,EAAM,KACnB,EAEFA,GAAM,EAOR,OAJA,SAAU,KACRuK,GAAc,IAGT,CACLd,UACA0B,iBACAD,eACAlC,uBACAJ,iBACAQ,aACAO,YACAV,aACAW,WACAjB,eACAV,YACAH,eACA+B,cACAf,mBACAf,aACAwB,qBACAW,oBACAF,cACAC,WACAlB,cACAwB,eACAH,sBACAjB,cACAG,aACAD,eACAvB,eACAgC,cAEJ,GCvSI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,ICROjK,MAAM,a,IADb,MAIyBA,MAAM,e,IAJ/B,O,IAuDSA,MAAM,e,IAvDf,MAyD8BA,MAAM,gC,IAWvBA,MAAM,mB,IApEnB,MAgF6BA,MAAM,qC,IAhFnC,MAiF6BA,MAAM,gB,IAjFnC,MAkFmBA,MAAM,e,GAlFzB,Q,IAAA,MA4F0BA,MAAM,iB,IACrBA,MAAM,iB,IACJA,MAAM,gB,IAINA,MAAM,c,IAGJA,MAAM,iB,2CApGnB,QA2GM,MA3GN,GA2GM,C,eA1GJ,QAAgD,MAA5CA,MAAM,0BAAyB,YAAQ,IAEhC,EAAQ,W,WAAnB,QAgDM,MAhDN,GAgDM,C,eA/CJ,QAAe,UAAX,UAAM,I,eACV,QAAsB,SAAnB,mBAAe,KAClB,QAAsD,SAAnD,UAAM,QAAG,EAAA8I,cAAe,OAAG,QAAG,EAAAC,gBAAc,IAC/C,QAA2C,SAAxC,iBAAa,WAAQ,EAAAD,cAAY,IAGpC,QAYI,KAXF9I,MAAM,iBACNgJ,KAAK,IACJ,QAAK,aAdd,YAcwB,EAAAC,iBAAiB,UAAD,cAChC,iBAAe,QACf,iBAAe,iB,gBAEf,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBArBrB,QAqBqB,kBAKf,QAUI,KATFjJ,MAAM,cACNgJ,KAAK,IACJ,QAAK,aA7Bd,iBA6BwB,EAAAE,aAAA,EAAAA,eAAA,IAAW,e,gBAE3B,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBAlCrB,QAkCqB,iBAKf,QAYI,KAXFlJ,MAAM,oBACNgJ,KAAK,IACJ,QAAK,aA1Cd,YA0CwB,EAAAC,iBAAiB,SAAD,cAChC,iBAAe,QACf,iBAAe,iB,gBAEf,QAAa,sBACb,QAAa,sBACb,QAAa,sBACb,QAAa,sBAjDrB,QAiDqB,qB,WAKjB,QAoCM,MA1FV,KAuDM,QAAmF,IAAnF,GAAuB,OAAG,QAAG,EAAAE,qBAAuB,GAAI,OAAG,QAAG,EAAAJ,gBAAc,GAEhE,EAAAK,YAzDlB,iB,WAyDM,QAqBM,MArBN,GAqBM,C,eA9EZ,uVAoEQ,QASM,MATN,GASM,E,SARJ,QAME,SA3EZ,qCAsEqB,EAAU,cACnBpJ,MAAM,2BACNG,KAAK,OACLG,YAAY,mBACX,QAAK,aA1ElB,iBA0E0B,EAAAgJ,aAAA,EAAAA,eAAA,IAAW,a,iBAJhB,EAAAC,eAMX,QAA0E,UAAlEvJ,MAAM,6BAA8B,QAAK,oBAAE,EAAAsJ,aAAA,EAAAA,eAAA,KAAa,UAIzD,EAAU,a,WAArB,QASM,MATN,GASM,CARM,EAAS,Y,WAAnB,QAAwD,KAAxD,GAA0C,gB,WAC1C,QAAmF,KAAnF,GAA+B,gBAAY,QAAG,EAAA+B,aAAapR,MAAM,IAAK,WAAQ,KAC9E,QAIE,OAHCuG,IAAK,EAAAgJ,aAAa,EAAA6B,aAAapR,MAAM,IACtC+F,MAAM,mBACNU,IAAI,U,OAtFd,KAwFQ,QAAyE,UAAjEV,MAAM,6BAA8B,QAAK,oBAAE,EAAAyJ,YAAA,EAAAA,cAAA,KAAY,SAxFvE,kBA4Fe,EAAS,Y,WAApB,QAeM,MAfN,GAeM,EAdJ,QAaM,MAbN,GAaM,EAZJ,QAGM,MAHN,GAGM,C,eAFJ,QAAmC,KAAhCzJ,MAAM,eAAc,YAAQ,KAC/B,QAA8D,UAAtDA,MAAM,YAAa,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,QAEhD,QAOM,MAPN,GAOM,EANJ,QAAyB,kBAAnB,EAAAD,cAAY,G,eAClB,QAAiC,SAA9B,8BAA0B,KAC7B,QAGM,MAHN,GAGM,EAFJ,QAAsE,UAA9DjI,MAAM,iBAAkB,QAAK,oBAAE,EAAA0J,oBAAA,EAAAA,sBAAA,KAAoB,OAC3D,QAA8D,UAAtD1J,MAAM,iBAAkB,QAAK,oBAAE,EAAAkI,YAAA,EAAAA,cAAA,KAAY,gBAvG/D,gB,CAiHA,MAAM,GAAe,oBAOrB,IACE,KAAAvG,GACE,MAAMiI,GAAU,QAAI,IACd0B,GAAiB,QAAI,IACrBD,GAAe,QAAI,CAAC,GACpBlC,GAAuB,QAAI,GAC3BJ,GAAiB,QAAI,GACrBQ,GAAa,QAAI,IACjBO,GAAY,SAAI,GAChBV,GAAa,SAAI,GACjBW,GAAW,SAAI,GACfjB,GAAe,QAAI,GAGnBV,GAAY,SAAI,GAChBH,GAAe,QAAI,IACnB+B,GAAc,QAAI,IAElBhW,GAAS,UACTb,EAAQC,IAER6W,EAAc,KAClB7Q,aAAa8Q,QAAQ,GAAcnU,KAAK0S,MAAM,EAG1CQ,EAAoBrN,IACxBoO,EAAYzW,MAAQqI,EACpBqM,EAAa1U,MAAW,GAAKuV,EAAavV,MAArB,eACrB6U,EAAU7U,OAAQ,CAAI,EAGlB2U,EAAa,KACjBE,EAAU7U,OAAQ,CAAK,EAGnBmW,EAAqBtV,UACC,UAAtB4V,EAAYzW,aACR4W,IACNF,KAC+B,SAAtBD,EAAYzW,cACf6W,IACNH,KAEF/B,GAAY,EAGRmC,EAAoB,KACxBpC,EAAa1U,MAAQ,EAAE,EAGnB4W,EAAc/V,UACd0U,EAAavV,MAAQ,SACjB+W,EAAkC,GAArBxB,EAAavV,aAE5BJ,EAAMmF,kBACZtE,EAAOgB,KAAK,CAAEC,KAAM,YAAa,EAG7BmV,EAAWhW,UACX0U,EAAavV,MAAQ,SACjB+W,EAAkC,GAArBxB,EAAavV,aAE5BJ,EAAMmF,kBACZtE,EAAOgB,KAAK,CAAEC,KAAM,YAAa,EAG7BqV,EAAelW,MAAOiE,IAC1B,UACQ7D,EAAA,EAAMM,KACV,GAAG3B,EAAMO,gCACT,CAAE2E,UACF,CACE3D,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCR,EAAMkF,QAAUA,CAClB,CAAE,MAAOnE,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIgV,EAAc,KAClBC,EAAqB5V,MAAQ,EAC7BuV,EAAavV,MAAQ,EACrBwW,EAASxW,OAAQ,EACjBgW,EAAWhW,MAAQ,GACnB6V,EAAW7V,OAAQ,EACnBuW,EAAUvW,OAAQ,EAClBgX,IACAc,EAAa9X,MAAQ+X,EAAe/X,MAAM4V,EAAqB5V,QAG/D,SAAS,KACPgY,EAAaF,EAAa9X,MAAMiY,UAAW,cAC3CD,EAAaF,EAAa9X,MAAMkY,oBAAqB,wBAAwB,GAC7E,EAGEf,EAAetW,UACnB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,+BACjCmV,EAAQrW,MAAQgB,EAASK,KACzB2V,IACAc,EAAa9X,MAAQ+X,EAAe/X,MAAM4V,EAAqB5V,aACzD,UACNgY,EAAaF,EAAa9X,MAAMiY,UAAW,cAC3CD,EAAaF,EAAa9X,MAAMkY,oBAAqB,wBACvD,CAAE,MAAOvX,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIqW,EAAsB,KAC1B,MAAMI,EAAWf,EAAQrW,MAAM+B,MAAK,IAAM,GAAMqP,KAAKiG,WACrDU,EAAe/X,MAAQoX,EAASnG,MAAM,EAAGuE,EAAexV,MAAM,EAG1D+V,EAAc,KACc,KAA5BC,EAAWhW,MAAMyJ,SACrB8M,EAAUvW,MAAQ8X,EAAa9X,MAAM0G,MAAM4Q,MACxCC,GACCvB,EAAWhW,MAAMyJ,OAAO+N,gBAAkBD,EAAaC,gBAEvDjB,EAAUvW,QACZuV,EAAavV,OAAS,GAExB6V,EAAW7V,OAAQ,EAAI,EAGnBkW,EAAa,KACjBF,EAAWhW,MAAQ,GACnB6V,EAAW7V,OAAQ,EACnBuW,EAAUvW,OAAQ,EAClB4V,EAAqB5V,OAAS,EAC1B4V,EAAqB5V,MAAQwV,EAAexV,OAC9C8X,EAAa9X,MAAQ+X,EAAe/X,MAAM4V,EAAqB5V,QAC/D,SAAS,KACPgY,EAAaF,EAAa9X,MAAMiY,UAAW,cAC3CD,EAAaF,EAAa9X,MAAMkY,oBAAqB,wBAAwB,KAG/E1B,EAASxW,OAAQ,CACnB,EAGIiW,EAAgBvP,GAAU,yBAAyBA,QAEnDsR,EAAe,CAACP,EAAMU,KAC1B,MAAMT,EAAarD,SAASC,cAAc6D,GAC1CT,EAAWC,YAAc,GACzB,IAAIC,EAAM,EACV,MAAMhL,EAAO,KACPgL,EAAMH,EAAKrS,SACbsS,EAAWC,aAAeF,EAAKG,KAC/BC,WAAWjL,EAAM,KACnB,EAEFA,GAAM,EAOR,OAJA,SAAU,KACRuK,GAAc,IAGT,CACLd,UACA0B,iBACAD,eACAlC,uBACAJ,iBACAQ,aACAO,YACAV,aACAW,WACAjB,eACAV,YACAH,eACA+B,cACAf,mBACAf,aACAwB,qBACAW,oBACAF,cACAC,WACAlB,cACAwB,eACAH,sBACAjB,cACAG,aACAD,eACAvB,eACAgC,cAEJ,GCpTI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,mNCsEA,MAAM3O,EAAO,EAEP4M,EAAa,KACjB5M,EAAK,QAAQ,E,0qFC5ET,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,mSC2FA,MAAMnI,EAAQC,IACRQ,GAAW,SAAS,IAAMT,EAAMS,WAChCwU,GAAY,SAAI,GAGhBuD,GAAkB,QAAI,IAEtBC,EAA2B,KAC/BhY,EAASL,MAAM6P,SAAQ,CAACyI,EAAGzU,KACzBgU,YAAW,KACTO,EAAgBpY,MAAMyB,KAAKoC,EAAM,GACxB,IAARA,EAAY,GACf,EAUEuD,EAAgBC,IACpB,OAAQA,GACN,IAAK,SAAU,OAAO,EACtB,IAAK,SAAU,OAAO,EACtB,IAAK,OAAQ,OAAO,EACpB,IAAK,WAAY,OAAO,EACxB,IAAK,UAAW,OAAO,EACvB,QAAS,OAAO,EAClB,E,OAIF,SAAU,KACHzH,EAAMY,QAITZ,EAAMyD,gBAAgBkC,MAAK,KACzB8S,GAA0B,KAJ5B1S,MAAM,eACN/F,EAAMa,OAAOgB,KAAK,CAAEC,KAAM,cAK5B,I,i8ECvII,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,6PCmDE,MAAM9B,EAAQC,IACRmJ,GAAQ,UACRvI,GAAS,UAETiG,GAAQ,QAAI,IACZP,GAAU,QAAI,IACdiK,GAAY,QAAI,KAEtB,SAAU,KAERnP,EAAA,EAAMC,IAAI,GAAGtB,EAAMO,8BAA8B6I,EAAMrC,OAAOxE,MAAO,CACnEhB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAExCmF,MAAME,IACLiB,EAAM1G,MAAQyF,EAAIpE,KAAKqF,MACvBP,EAAQnG,MAAQyF,EAAIpE,KAAK8E,QACzBrF,QAAQC,IAAI0E,EAAIpE,KAAKsH,MAAMsC,YAC3BmF,EAAUpQ,MAAQyF,EAAIpE,KAAKsH,MAAMsC,cAElCzF,OAAO7D,GAAQb,QAAQC,IAAIY,IAAI,IAIpC,MAAM4W,EAAa,KACjBtX,EAAA,EAAM6I,IAAI,GAAGlK,EAAMO,8BAA8B6I,EAAMrC,OAAOxE,MAAO,CACnEuE,MAAOA,EAAM1G,MACbmG,QAASA,EAAQnG,MACjBuD,OAAQqH,EAAe5K,OACtB,CACDmB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAExCmF,MAAK,KACJI,MAAM,gBAGN/F,EAAMwC,kBAAkB,UACxB3B,EAAOgB,KAAK,CAAEC,KAAM,aAAciF,OAAQ,CAAExE,GAAI6G,EAAMrC,OAAOxE,KAAM,IAEpEqD,OAAO7D,GAAQb,QAAQC,IAAIY,IAAI,EAIhCgJ,GAAc,QAAI,GAGlBO,EAAalL,IACjB2K,EAAY3K,MAAQA,CAAK,EAIrBmL,EAAa,KACjBR,EAAY3K,MAAQ,CAAC,EAEjB4K,GAAiB,QAAI,GAErBQ,EAAgB7H,IACpBqH,EAAe5K,MAAQuD,CAAM,E,goCC7GzB,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,ICPOkJ,MAAM,iB,IACJA,MAAM,iB,IACJA,MAAM,gB,IAINA,MAAM,c,IAOJA,MAAM,iB,2CAbjB,QAmBM,MAnBN,GAmBM,EAlBJ,QAiBM,MAjBN,GAiBM,EAhBJ,QAGM,MAHN,GAGM,C,aAFJ,QAAsC,MAAlCA,MAAM,eAAc,aAAS,KACjC,QAAkE,UAA1DA,MAAM,YAAa,QAAK,eAAEyF,EAAAA,MAAM,WAAU,QAEpD,QAWM,MAXN,GAWM,E,SATJ,QAIE,SAbV,qCAUmB,EAAY,gBACrBzF,MAAM,iBACNM,YAAY,kB,iBAFH,EAAAyL,iBAIX,QAGM,MAHN,GAGM,EAFJ,QAAkE,UAA1D/L,MAAM,iBAAkB,QAAK,oBAAE,EAAA6F,gBAAA,EAAAA,kBAAA,KAAgB,OACvD,QAAkE,UAA1D7F,MAAM,iBAAkB,QAAK,eAAEyF,EAAAA,MAAM,WAAU,a,CAWjE,UACE,IAAA7Q,GACE,MAAO,CACLmX,aAAc,GAElB,EACA1D,QAAS,CACP,oBAAMxC,GACJ,GAAK6C,KAAKqD,aAAa/O,OAIvB,IACE,MAAM7J,EAAQC,KACR,KAAEwB,SAAeJ,EAAA,EAAMM,KAC3B,oDACA,CAAEG,KAAMyT,KAAKqD,cACb,CACErX,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCuF,MAAM,iBACNwP,KAAKjD,MAAM,kBAAmB7Q,GAC9B8T,KAAKjD,MAAM,QACb,CAAE,MAAOvR,GACPG,QAAQH,MAAM,2BAA4BA,GAC1CgF,MAAM,kBACR,MApBEA,MAAM,iBAqBV,IClDE,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,s7BC6JA,MAAMqD,GAAQ,UACRvI,GAAS,UACTb,EAAQC,IAER4Y,EAAe5X,UACnBC,QAAQC,IAAI,yBACZ,IACE,MAAMC,QAAiBC,EAAA,EAAMM,KAC3B,kCAAkChB,EAAKP,MAAMmC,aAC7C,KACA,CACEhB,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAKpCsY,EAAW1Y,MAAQgB,EAASK,KAAKsX,YACjCpY,EAAKP,MAAM4Y,eAAiB5X,EAASK,KAAKwX,gBAC1CtY,EAAKP,MAAM8Y,gBAAkB9X,EAASK,KAAK0X,iBAE3CjY,QAAQC,IAAI,yBAA0BC,EAASK,KACjD,CAAE,MAAOV,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GAGIuM,EAAoBkD,IACxB,MAAMC,EAAU,kCAChB,MAAO,GAAGA,IAAUD,GAAW,EAU3BhJ,EAAgBC,IACpB,OAAQA,GACN,IAAK,SACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,OAAO,EACX,EAII9G,GAAO,QAAI,CACfb,SAAU,GACVuF,WAAY,GACZ6T,gBAAiB,EACjBF,eAAgB,EAChBI,cAAe,EACfC,WAAY,IAERP,GAAa,SAAI,GACjBvG,GAAa,QAAI,IACjB+G,GAA0B,SAAI,GAC9BC,GAA0B,SAAI,GAC9BC,GAAmB,QAAI,MACvBC,GAAuB,QAAI,IAC3B/O,GAAc,QAAI,IAClBC,GAAgB,QAAI,IACpBC,GAAgB,QAAI,MAGpB8O,GAAe,SAAS,IAAM1Z,EAAMW,KAAKb,WAAasJ,EAAMrC,OAAOjH,WAGnE6Z,EAAe1Y,UACnB,IACE,MAAM,KAAEQ,SAAeJ,EAAA,EAAMC,IAC3B,0CAA0C8H,EAAMrC,OAAOjH,YACvD,CACEyB,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAM9BiH,EAAYhG,EAAK4D,YAAcrF,EAAMiF,aAAaxD,EAAKyD,QAE7DvE,EAAKP,MAAQ,CACXmC,GAAId,EAAKc,GACTzC,SAAU2B,EAAK3B,SACfoF,OAAQzD,EAAKyD,OACbG,WAAYoC,EACZyR,gBAAiBzX,EAAK0X,iBACtBH,eAAgBvX,EAAKwX,gBACrBG,cAAe3X,EAAKmY,eACpBP,WAAY5X,EAAKoY,YACjBC,gBAAiBrY,EAAKsY,eAKpBtY,EAAKuY,mBACPR,EAAiBpZ,MAAQ,CACvBmC,GAAId,EAAKuY,kBAAkBjR,MAAMxG,GACjCuE,MAAOrF,EAAKuY,kBAAkBjR,MAAMjC,MACpC0J,UAAWlD,EAAiB7L,EAAKuY,kBAAkBjR,MAAMsC,YACzD4O,OAAQxY,EAAKuY,kBAAkBC,QAEjC/Y,QAAQC,IAAI,eAAgBqY,EAAiBpZ,SAE7CoZ,EAAiBpZ,MAAQ,KACzBc,QAAQC,IAAI,iBAEdD,QAAQC,IAAI,iBAAkBR,EAAKP,OACnCc,QAAQC,IAAI,aAAcqY,EAAiBpZ,OAE3Cc,QAAQC,IAAIR,EAAKP,OACjB0Y,EAAW1Y,MAAQqB,EAAKsX,YACxBxG,EAAWnS,MAAQqB,EAAK8Q,UAE1B,CAAE,MAAOxR,GACPG,QAAQH,MAAM,0BAA2BA,EAC3C,GAIImZ,EAAsB1V,IAC1B3D,EAAOgB,KAAK,eAAe2C,IAAa,EAOpC2V,EAA2B,KAC/Bb,EAAwBlZ,OAAQ,CAAK,EAIjCga,EAAe5H,IACnBD,EAAWnS,MAAMyB,KAAK2Q,EAAS,EAK3B6H,EAA0B,KAC9BnZ,QAAQC,IAAI,aACZD,QAAQC,IAAI,YAAaoY,EAAwBnZ,OACjDmZ,EAAwBnZ,OAAQ,EAChCc,QAAQC,IAAI,YAAaoY,EAAwBnZ,MAAM,EAEnDka,EAA2B,KAC/Bf,EAAwBnZ,OAAQ,EAChCsK,EAAYtK,MAAQ,GACpBuK,EAAcvK,MAAQ,GACtBqZ,EAAqBrZ,MAAQ,EAAE,EAI3ByG,EAAe5F,UACnB,GAAKyJ,EAAYtK,MAAMyJ,OAIvB,IACE,MAAMzI,QAAiBC,EAAA,EAAMC,IAAI,GAAGtB,EAAMO,kCAAmC,CAC3EwG,OAAQ,CAAED,MAAO4D,EAAYtK,MAAMyJ,QACnCtI,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAE3CmK,EAAcvK,MAAQgB,EAASK,IACjC,CAAE,MAAOV,GACPG,QAAQH,MAAM,0BAA2BA,EAC3C,MAXE4J,EAAcvK,MAAQ,EAWxB,EAGIma,EAA0BxR,IAE9B6B,EAAcxK,MAAQ,CACpBmC,GAAIwG,EAAMxG,GACVuE,MAAOiC,EAAMjC,MACb0J,UAAWlD,EAAiBvE,EAAMsC,aAIpCmO,EAAiBpZ,MAAQ,CACvBmC,GAAIwG,EAAMxG,GACVuE,MAAOiC,EAAMjC,MACb0J,UAAWlD,EAAiBvE,EAAMsC,aAGpCnK,QAAQC,IAAI,cAAeyJ,EAAcxK,MAAM,EAI3Coa,EAAqBvZ,UACzB,IAAKuY,EAAiBpZ,QAAUoZ,EAAiBpZ,MAAMmC,KAAOkX,EAAqBrZ,MAAMyJ,OAMvF,OALA9D,MAAM,8BACN7E,QAAQH,MAAM,wBAAyB,CACrCgI,MAAOyQ,EAAiBpZ,MACxB6Z,OAAQR,EAAqBrZ,QAIjC,IACE,MAAMgB,QAAiBC,EAAA,EAAMM,KAC3B,GAAG3B,EAAMO,oCACT,CACEyE,SAAUwU,EAAiBpZ,MAAMmC,GACjC0X,OAAQR,EAAqBrZ,MAAMyJ,QAErC,CAAEtI,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAI7CgZ,EAAiBpZ,MAAQ,CACvBmC,GAAInB,EAASK,KAAKsH,MAAMxG,GACxBuE,MAAO1F,EAASK,KAAKsH,MAAMjC,MAC3B0J,UAAWlD,EAAiBlM,EAASK,KAAKsH,MAAMsC,YAChD4O,OAAQ7Y,EAASK,KAAKwY,QAGxB/Y,QAAQC,IAAI,eAAgBC,EAASK,MAErC6Y,IACAvU,MAAM,kBACR,CAAE,MAAOhF,GACPG,QAAQH,MAAM,oBAAqBA,EAAMK,UAAUK,MAAQV,EAC7D,GAII0Z,EAAqB,KACzBvZ,QAAQC,IAAI,gBACZkZ,IACAZ,EAAqBrZ,MAAQoZ,EAAiBpZ,MAAM6Z,QAAU,EAAE,E,OAGlE,SAAU,KACRN,GAAc,KAIhB,SAAM,IAAMvQ,EAAMrC,OAAOjH,WAAU,CAAC4a,EAAaC,KAC/CzZ,QAAQC,IAAI,2BAA2BwZ,QAAkBD,KACzDf,GAAc,I,wxIC1ZV,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,uXCsGA,MAAMvQ,GAAQ,UACRvI,GAAS,UACT2R,GAAW,QAAI,CAAC,GAChB1E,GAAS,QAAI,IACb9N,EAAQC,IACR2a,GAAoB,SAAI,GACxBlQ,GAAc,QAAI,IAClBC,GAAgB,QAAI,IACpBkQ,GAAgB,SAAI,GACpBpI,GAAkB,QAAI,IAEtBqI,EAAmB,KACvBD,EAAcza,OAAQ,CAAI,EAGtB2a,EAAmB9Z,UACvB,GAAKwR,EAAgBrS,MAAMyJ,OAI3B,IACE,MAAMzI,QAAiBC,EAAA,EAAMqD,MAC3B,GAAG1E,EAAMO,+BAA+BiS,EAASpS,MAAMmC,aACvD,CAAET,KAAM2Q,EAAgBrS,MAAMyJ,QAC9B,CACEtI,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCgS,EAASpS,MAAM0B,KAAOV,EAASK,KAAKK,KACpC+Y,EAAcza,OAAQ,EACtB2F,MAAM,mBACR,CAAE,MAAOhF,GACPG,QAAQH,MAAM,8BAA+BA,GAC7CgF,MAAM,qBACR,MAnBEA,MAAM,oBAmBR,EAGIiV,EAAoB,KACxBvI,EAAgBrS,MAAQoS,EAASpS,MAAM0B,KACvC+Y,EAAcza,OAAQ,CAAK,EAKvB6a,GAAU,SAAS,IAAMjb,EAAMW,MAAM4B,KAAOiQ,EAASpS,OAAO8a,WAG5D5N,EAAoBkD,IACxB,MAAMC,EAAU,kCAChB,MAAO,GAAGA,IAAUD,GAAW,EAI3B5J,EAAuB3F,UAC3B,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAC3B,6CAA6C8H,EAAMrC,OAAOvC,cAC1D,CACEjD,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAKpCU,QAAQC,IAAI,6BAA8BC,EAASK,MACnD+Q,EAASpS,MAAQgB,EAASK,KAC1BqM,EAAO1N,MAAQgB,EAASK,KAAKqM,OAC7B2E,EAAgBrS,MAAQgB,EAASK,KAAKK,IACxC,CAAE,MAAOf,GACPG,QAAQH,MAAM,mCAAoCA,EACpD,GAIIoa,EAAcla,MAAO6D,IACzB,UACQzD,EAAA,EAAMM,KACV,0DACA,CACEoD,YAAaqE,EAAMrC,OAAOvC,WAC1BQ,SAAUF,GAEZ,CACEvD,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCsN,EAAO1N,MAAQ0N,EAAO1N,MAAMiK,QAAQtB,GAAUA,EAAMxG,KAAOuC,IAC3DiB,MAAM,eACR,CAAE,MAAOhF,GACPG,QAAQH,MAAM,wBAAyBA,EACzC,GAIIqa,EAAmBtW,IACvBjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,EAIzDuW,EAAoB,IAAOT,EAAkBxa,OAAQ,EACrDkb,EAAqB,KACzBV,EAAkBxa,OAAQ,EAC1BsK,EAAYtK,MAAQ,GACpBuK,EAAcvK,MAAQ,EAAE,EAIpByG,EAAe5F,UACnB,GAAKyJ,EAAYtK,MAAMyJ,OAKvB,IACE,MAAMzI,QAAiBC,EAAA,EAAMC,IAAI,GAAGtB,EAAMO,kCAAmC,CAC3EwG,OAAQ,CAAED,MAAO4D,EAAYtK,MAAMyJ,QACnCtI,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAGlCmK,EAAcvK,MAAQgB,EAASK,IACjC,CAAE,MAAOV,GACPG,QAAQH,MAAM,0BAA2BA,EAC3C,MAdE4J,EAAcvK,MAAQ,EAcxB,EAIImb,EAAkBta,MAAO8H,IAC7B,MAAMyS,EAAYC,QAAQ,OAAO1S,EAAMjC,0BACnC0U,SACIxU,EAAmB+B,EAC3B,EAII/B,EAAqB/F,MAAO8H,IAChC,UACQ/I,EAAMgH,mBAAmBoC,EAAMrC,OAAOvC,WAAYuE,EAAMxG,UACxDqE,IACN0U,GACF,CAAE,MAAOva,GACPG,QAAQH,MAAM,kCAAmCA,EACnD,GAII4D,EAAiB1D,UACrB,MAAMua,EAAYC,QAAQ,gBAC1B,GAAID,EACF,UACQna,EAAA,EAAMuD,OACV,GAAG5E,EAAMO,+BAA+BiS,EAASpS,MAAMmC,aACvD,CACEhB,QAAS,CACPC,cAAe,SAASxB,EAAMQ,WAIpCuF,MAAM,iBACNlF,EAAOgB,KAAK,YAAY7B,EAAMW,KAAKb,WACrC,CAAE,MAAOiB,GACPG,QAAQH,MAAM,2BAA4BA,GAC1CgF,MAAM,kBACR,CACF,E,OAIF,SAAU9E,UACR,UACQ2F,UACA5G,EAAMmE,kBACNnE,EAAMmF,kBACZjE,QAAQC,IAAI,WAAY8Z,EAAQ7a,OAChCc,QAAQC,IAAI,cAAenB,EAAMW,MACjCO,QAAQC,IAAI,kBAAmBqR,EAASpS,MAG1C,CAAE,MAAOW,GACPG,QAAQH,MAAM,sBAAuBA,EACvC,K,+uFChSI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,M,2ECPE,QAWM,Y,aAVJ,QAAe,UAAX,UAAM,KACV,QAGO,QAHA,SAAM,aAHjB,iBAG2B,EAAA2R,gBAAA,EAAAA,kBAAA,IAAc,e,WACnC,QAA0D,SAJhE,qCAIsB,EAAe,mBAAEvF,YAAY,Y,iBAA7B,EAAAsF,mB,aAChB,QAAqC,UAA7BzF,KAAK,UAAS,UAAM,K,KAE9B,QAIK,a,aAHH,QAEK,WAVX,QAQ6B,EAAAuF,YAAZC,K,WAAX,QAEK,MAF+B1M,IAAK0M,EAASjQ,I,EAChD,QAAiF,GAAnEmZ,GAAE,eAAiBlJ,EAASjQ,M,CATlD,kBASwD,IAAmB,EAT3E,iBAS2DiQ,EAAS1Q,MAAI,MATxE,K,4BAkBA,UACE,IAAAL,GACE,MAAO,CACLgR,gBAAiB,GAErB,EACAkJ,SAAU,CACR,UAAApJ,GACE,OAAOtS,IAAkBsS,UAC3B,GAEF2C,QAAS,CACP,oBAAMxC,GACJ,MAAM1S,EAAQC,UACRD,EAAM0S,eAAe6C,KAAK9C,iBAChC8C,KAAK9C,gBAAkB,EACzB,GAEF,OAAAmJ,GACE3b,IAAkBqT,iBACpB,GCjCI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,M,ICPA,MAWsBzG,MAAM,Q,2CAV1B,QAWM,Y,aAVJ,QAAe,UAAX,UAAM,KACV,QAOO,QAPA,SAAM,aAHjB,iBAG2B,EAAA6F,gBAAA,EAAAA,kBAAA,IAAc,e,WACnC,QAIE,SARR,qCAKiB,EAAY,gBACrBvF,YAAY,gBACZN,MAAM,gB,iBAFG,EAAA+L,gB,aAIX,QAAkE,UAA1D5L,KAAK,SAASH,MAAM,wBAAuB,UAAM,K,IAElD,EAAO,U,WAAhB,QAAgD,IAAhD,IAAgD,QAAd,EAAA7K,SAAO,KAX7C,gB,CAoBA,UACE,KAAAwM,GACE,MAAMoK,GAAe,QAAI,IACnB5W,GAAU,QAAI,IAEd0Q,EAAiBzR,UACrB,IACE,MAAMG,QAAiB,GAAcO,KAAK,6CAA6C,CACnFJ,QAAS,CACPC,cAAe,SAASxB,MAAMQ,UAE/B,CACHsB,KAAM8W,EAAaxY,QAErB4B,EAAQ5B,MAAQ,QAAQgB,EAASK,KAAKK,kBACtC8W,EAAaxY,MAAQ,EACvB,CAAE,MAAOW,GACHA,EAAMK,UAAYL,EAAMK,SAASK,KACnCO,EAAQ5B,MACNW,EAAMK,SAASK,KAAKV,OAAS,kBAE/BiB,EAAQ5B,MAAQ,sBAEpB,GAGF,MAAO,CACLwY,eACA5W,UACA0Q,iBAEJ,GC5CI,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,M,25BCyIA,MAAM1S,EAAQC,IACRY,GAAS,UAGTgb,GAAmB,SAAS,IAAM7b,EAAMS,SAAS4Q,MAAM,EAAG,KAG1DyK,EAAmBC,GAChB,wBAAwBA,IAI3BC,GAAa,QAAI,IACjB1U,GAAY,SAAI,GAChB2U,GAAsB,QAAI,MAC1BC,GAAsB,SAAI,GAE1BC,GAAgB,QAAI,IACpBrL,GAAe,QAAI,CAAEC,QAAS,IAG9BtO,EAAcC,IAClB,MAAMC,EAAO,IAAIC,KAAKF,GACtB,MAAO,GAAGC,EAAKG,iBAAiBH,EAAKM,WAAa,KAAKN,EAAKS,WAAW,EAWnEgK,EAActI,IACdjE,EAAOgB,KAAK,CAAEC,KAAM,cAAeiF,OAAQ,CAAExE,GAAIuC,IAAY,EAG7D0C,EAAgBC,IACpB,OAAQA,GACN,IAAK,SACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,OAAO,EACX,EAII6F,EAAoBkD,IACxB,MAAMC,EAAU,kCAChB,MAAO,GAAGA,IAAUD,GAAW,EAI3B3H,EAAqB/I,IAEzB6H,OAAOmK,SAAS+D,KAAO,YAAY/V,GAAU,EAIzCsc,EAAkBnb,UACtB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAC3B,yDAEF0a,EAAW5b,MAAQgB,EAASK,IAC9B,CAAE,MAAOV,GACPG,QAAQH,MAAM,8BAA+BA,EAC/C,CAAE,QACAuG,EAAUlH,OAAQ,CACpB,GAIIic,EAAqBpb,UACzB,IACE,MAAMG,QAAiBC,EAAA,EAAMC,IAAI,iBACjC6a,EAAc/b,MAAQgB,EAASK,KAAKmO,KAAKC,IAAS,CAChD7K,SAAU6K,EAAKC,OAAO9K,SACtB8B,MAAO+I,EAAKC,OAAOhJ,MACnBuE,WAAYwE,EAAKC,OAAOzE,WACxB1H,OAAQkM,EAAKC,OAAOwM,UAAY,UAElCpb,QAAQC,IAAI,KAAKgb,EAAc/b,MACjC,CAAE,MAAOW,GACPG,QAAQH,MAAM,iCAAkCA,EAClD,GAIIiN,EAAaP,IACjB,MAAM8D,EAAcC,KAAKC,KAAK0K,EAAc/b,MAAMoF,OAAS,GACvDsL,EAAa1Q,MAAMqN,GAAW8D,EAAc,GAC9CT,EAAa1Q,MAAMqN,IACrB,EAGIE,EAAaF,IACbqD,EAAa1Q,MAAMqN,GAAW,GAChCqD,EAAa1Q,MAAMqN,IACrB,EAIII,EAAY,CAACC,EAAQqD,KACzB,MAAMC,EAAS,GACf,IAAK,IAAIvN,EAAI,EAAGA,EAAIiK,EAAOtI,OAAQ3B,GAAKsN,EACtCC,EAAOvP,KAAKiM,EAAOuD,MAAMxN,EAAGA,EAAIsN,IAElC,OAAOC,CAAM,EAITmL,EAA2Btb,UAC/B,GAAK4a,EAAiBzb,MAAM,IAAIN,SAAhC,CAEAoc,EAAoB9b,OAAQ,EAC5B,IACE,MAAMgB,QAAiBC,EAAA,EAAMC,IAC3B,0CAA0Cua,EAAiBzb,MAAM,GAAGN,uBACpE,CACEyB,QAAS,CAAEC,cAAe,SAASxB,EAAMQ,WAG7Cyb,EAAoB7b,MAAQgB,EAASK,IACvC,CAAE,MAAOV,GACPG,QAAQH,MAAM,8BAA+BA,EAC/C,CAAE,QACAmb,EAAoB9b,OAAQ,CAC9B,CAfgD,CAehD,EAIIoc,EAAoBja,IACxB1B,EAAOgB,KAAK,CAAEC,KAAM,aAAciF,OAAQ,CAAExE,OAAO,EAG/Cka,EAA4BjY,IAChCmD,OAAOmK,SAAS+D,KAAO,eAAerR,GAAY,E,OAIpD,SAAUvD,UACHjB,EAAMS,SAAS+E,cACZxF,EAAMyD,sBAER2Y,UACAG,UACAF,GAAoB,IAG5Bnb,QAAQC,IAAI,OAAQ0a,G,sgHC3Sd,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,MCmBMhb,IAAS,QAAa,CAC1B6b,SAAS,cAAiB,aAC1BC,OAAQ,CACN,CACEZ,KAAM,IACNja,KAAM,WACN8a,UAAWC,IAEb,CACEd,KAAM,WACNja,KAAM,cACN8a,UAAWE,IAEb,CACEf,KAAM,oBACNja,KAAM,WACN8a,UAAWG,IAEb,CACEhB,KAAM,eACNja,KAAM,aACN8a,UAAWI,IAEb,CACEjB,KAAM,UACNja,KAAM,aACN8a,UAAWK,IAEb,CACElB,KAAM,UACNja,KAAM,aACN8a,UAAWM,IAEb,CACEnB,KAAM,SACNja,KAAM,YACN8a,UAAWO,GAEb,CACEpB,KAAM,UACNja,KAAM,YACN8a,UAAWQ,IAEb,CACErB,KAAM,2BACNja,KAAM,YACN8a,UAAWS,GACXnV,OAAO,GAET,CACE6T,KAAM,uBACNja,KAAM,aACN8a,UAAWhM,IAEb,CACEmL,KAAM,qBACNja,KAAM,cACN8a,UAAWU,IAEb,CACEvB,KAAM,QACNja,KAAM,WACN8a,UAAWW,IAEb,CACExB,KAAM,iBACNja,KAAM,cACN8a,UAAWY,IAEb,CACEzB,KAAM,qBACNja,KAAM,kBACN8a,UAAWa,IAEb,CACE1B,KAAM,uBACNja,KAAM,oBACN8a,UAAWc,IAEb,CACE3B,KAAM,QACNja,KAAM,WACN8a,UAAWe,IAEb,CACE5B,KAAM,aACNja,KAAM,gBACN8a,UAAWgB,IAEb,CACE7B,KAAM,qBACNja,KAAM,cACN8a,UAAWiB,IAEb,CACE9B,KAAM,gCACNja,KAAM,eACN8a,UAAWkB,IAEb,CACE/B,KAAM,0BACNja,KAAM,iBACN8a,UAAWmB,IACX,CACAhC,KAAM,qBACNja,KAAM,iBACN8a,UAAWoB,OAKjBnd,GAAOod,YAAW,CAACvC,EAAIrL,KACrB,MAAMrQ,EAAQC,IAGRie,EAAkB,CAAC,cAAe,YAAa,WAAY,YAEjE,OAAIA,EAAgB3N,SAASmL,EAAG5Z,QAAU9B,EAAMY,SAC9C+G,OAAO5B,MAAM,eACN,CAAEjE,KAAM,cAIA,eAAZ4Z,EAAG5Z,MAAqC,cAAZ4Z,EAAG5Z,OAAyB9B,EAAMY,aAAnE,GACE+G,OAAO5B,MAAM,kBACN,CAAEjE,KAAM,YACjB,IAGF,Y,OCnJA,MAAMqc,IAAM,QAAUC,GAChB,IAAQ,UAGd,GAAMlL,IAAI,KAEViL,GAAIjL,IAAI,IACRiL,GAAIjL,IAAI,IAERiL,GAAIE,MAAM,O,GCjBNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,E,MCzBxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASzb,EAAI,EAAGA,EAAIkb,EAASvZ,OAAQ3B,IAAK,CAGzC,IAFA,IAAKqb,EAAUC,EAAIC,GAAYL,EAASlb,GACpC0b,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS1Z,OAAQga,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaK,OAAOC,KAAKnB,EAAoBS,GAAGW,OAAO7Z,GAASyY,EAAoBS,EAAElZ,GAAKoZ,EAASM,MAC9IN,EAASU,OAAOJ,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASa,OAAO/b,IAAK,GACrB,IAAIgc,EAAIV,SACET,IAANmB,IAAiBZ,EAASY,EAC/B,CACD,CACA,OAAOZ,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIvb,EAAIkb,EAASvZ,OAAQ3B,EAAI,GAAKkb,EAASlb,EAAI,GAAG,GAAKub,EAAUvb,IAAKkb,EAASlb,GAAKkb,EAASlb,EAAI,GACrGkb,EAASlb,GAAK,CAACqb,EAAUC,EAAIC,EAqBjB,C,WCzBdb,EAAoBuB,EAAI,CAACnB,EAASoB,KACjC,IAAI,IAAIja,KAAOia,EACXxB,EAAoByB,EAAED,EAAYja,KAASyY,EAAoByB,EAAErB,EAAS7Y,IAC5E2Z,OAAOQ,eAAetB,EAAS7Y,EAAK,CAAEoa,YAAY,EAAM5e,IAAKye,EAAWja,IAE1E,C,WCNDyY,EAAoBrO,EAAI,WACvB,GAA0B,kBAAfiQ,WAAyB,OAAOA,WAC3C,IACC,OAAO5K,MAAQ,IAAI6K,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAX1Y,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,WCAxB4W,EAAoByB,EAAI,CAACM,EAAKC,IAAUd,OAAOe,UAAUC,eAAeC,KAAKJ,EAAKC,E,WCClFhC,EAAoBsB,EAAKlB,IACH,qBAAXgC,QAA0BA,OAAOC,aAC1CnB,OAAOQ,eAAetB,EAASgC,OAAOC,YAAa,CAAExgB,MAAO,WAE7Dqf,OAAOQ,eAAetB,EAAS,aAAc,CAAEve,OAAO,GAAO,C,WCL9Dme,EAAoBsC,EAAI,G,WCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaNvC,EAAoBS,EAAEQ,EAAKuB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4Bxf,KACvD,IAGI+c,EAAUuC,GAHT7B,EAAUgC,EAAaC,GAAW1f,EAGhBoC,EAAI,EAC3B,GAAGqb,EAASxH,MAAMnV,GAAgC,IAAxBue,EAAgBve,KAAa,CACtD,IAAIic,KAAY0C,EACZ3C,EAAoByB,EAAEkB,EAAa1C,KACrCD,EAAoBO,EAAEN,GAAY0C,EAAY1C,IAGhD,GAAG2C,EAAS,IAAIlC,EAASkC,EAAQ5C,EAClC,CAEA,IADG0C,GAA4BA,EAA2Bxf,GACrDoC,EAAIqb,EAAS1Z,OAAQ3B,IACzBkd,EAAU7B,EAASrb,GAChB0a,EAAoByB,EAAEc,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOxC,EAAoBS,EAAEC,EAAO,EAGjCmC,EAAqBC,KAAK,yBAA2BA,KAAK,0BAA4B,GAC1FD,EAAmBnR,QAAQ+Q,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBvf,KAAOmf,EAAqBM,KAAK,KAAMF,EAAmBvf,KAAKyf,KAAKF,G,KC7CvF,IAAIG,EAAsBhD,EAAoBS,OAAEN,EAAW,CAAC,MAAM,IAAOH,EAAoB,OAC7FgD,EAAsBhD,EAAoBS,EAAEuC,E","sources":["webpack://vue-front/./src/views/LogInView.vue","webpack://vue-front/./src/views/LogInView.vue?0681","webpack://vue-front/./src/stores/counter.js","webpack://vue-front/./src/App.vue","webpack://vue-front/./src/App.vue?7ccd","webpack://vue-front/./src/components/ArticleListItem.vue","webpack://vue-front/./src/components/ArticleListItem.vue?89c7","webpack://vue-front/./src/components/ArticleList.vue","webpack://vue-front/./src/components/ArticleList.vue?baa7","webpack://vue-front/./src/views/ArticleView.vue","webpack://vue-front/./src/views/ArticleView.vue?ad1b","webpack://vue-front/./src/views/DetailView.vue","webpack://vue-front/./src/views/DetailView.vue?d646","webpack://vue-front/./src/views/CreateView.vue","webpack://vue-front/./src/views/CreateView.vue?ee4c","webpack://vue-front/./src/views/SignUpView.vue","webpack://vue-front/./src/views/SignUpView.vue?125d","webpack://vue-front/./src/views/MovieView.vue","webpack://vue-front/./src/components/GenreMovie.vue","webpack://vue-front/./src/components/GenreMovie.vue?b5a3","webpack://vue-front/./src/views/MovieView.vue?fdef","webpack://vue-front/./src/components/MovieMore.vue","webpack://vue-front/./src/components/MovieMore.vue?d3c9","webpack://vue-front/./src/components/AddToCategoryModal.vue","webpack://vue-front/./src/axios.js","webpack://vue-front/./src/components/AddToCategoryModal.vue?2c4e","webpack://vue-front/./src/components/YoutubeTrailerModal.vue","webpack://vue-front/./src/components/YoutubeTrailerModal.vue?8f48","webpack://vue-front/./src/components/MovieDetail.vue","webpack://vue-front/./src/components/MovieDetail.vue?0e59","webpack://vue-front/./src/views/GameView.vue","webpack://vue-front/./src/views/GameView.vue?3e8c","webpack://vue-front/./src/views/OneLineView.vue","webpack://vue-front/./src/views/OneLineView.vue?c2ab","webpack://vue-front/./src/views/KoreaQuotesView.vue","webpack://vue-front/./src/views/KoreaQuotesView.vue?3ccd","webpack://vue-front/./src/views/ForeignQuotesView.vue","webpack://vue-front/./src/views/ForeignQuotesView.vue?4571","webpack://vue-front/./src/components/RankInfoModal.vue","webpack://vue-front/./src/components/RankInfoModal.vue?7964","webpack://vue-front/./src/views/RankView.vue","webpack://vue-front/./src/views/RankView.vue?66c8","webpack://vue-front/./src/views/EditView.vue","webpack://vue-front/./src/views/EditView.vue?eb6a","webpack://vue-front/./src/components/CreateCategoryModal.vue","webpack://vue-front/./src/components/CreateCategoryModal.vue?763a","webpack://vue-front/./src/views/ProfileView.vue","webpack://vue-front/./src/views/ProfileView.vue?3e49","webpack://vue-front/./src/components/CategoryDetail.vue","webpack://vue-front/./src/components/CategoryDetail.vue?098e","webpack://vue-front/./src/components/CategoryList.vue","webpack://vue-front/./src/components/CategoryList.vue?f6b9","webpack://vue-front/./src/components/CreateCategory.vue","webpack://vue-front/./src/components/CreateCategory.vue?4b4e","webpack://vue-front/./src/views/HomeView.vue","webpack://vue-front/./src/views/HomeView.vue?1da1","webpack://vue-front/./src/router/index.js","webpack://vue-front/./src/main.js","webpack://vue-front/webpack/bootstrap","webpack://vue-front/webpack/runtime/chunk loaded","webpack://vue-front/webpack/runtime/define property getters","webpack://vue-front/webpack/runtime/global","webpack://vue-front/webpack/runtime/hasOwnProperty shorthand","webpack://vue-front/webpack/runtime/make namespace object","webpack://vue-front/webpack/runtime/publicPath","webpack://vue-front/webpack/runtime/jsonp chunk loading","webpack://vue-front/webpack/startup"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <h1 class=\"login-title\">로그인</h1>\r\n      <form @submit.prevent=\"logIn\" class=\"login-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\" class=\"form-label\">이름</label>\r\n          <input type=\"text\" id=\"username\" v-model.trim=\"username\" placeholder=\"사용하실 이름을 적어주세요.\" class=\"form-input\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\" class=\"form-label\">비밀번호</label>\r\n          <input type=\"password\" id=\"password\" v-model.trim=\"password\" placeholder=\"비밀번호를 적어주세요.\" class=\"form-input\">\r\n        </div>\r\n        <div class=\"form-group submit-group\">\r\n          <input type=\"submit\" value=\"Log In\" class=\"submit-button\">\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useCounterStore } from '@/stores/counter'\r\n\r\nconst username = ref(null)\r\nconst password = ref(null)\r\n\r\nconst store = useCounterStore()\r\n\r\nconst logIn = function () {\r\n  const payload = {\r\n    username: username.value,\r\n    password: password.value\r\n  }\r\n  store.logIn(payload)\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 컨테이너 스타일 */\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 80vh; /* 화면 높이에 맞춤 */\r\n  font-family: Arial, sans-serif;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 카드 스타일 */\r\n.login-card {\r\n  background: #fff;\r\n  padding: 2rem;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  width: 400px;\r\n  max-width: 90%;\r\n  height: 450px; /* 높이 축소 */\r\n  text-align: center;\r\n  overflow: hidden; /* 스크롤 방지 */\r\n  display: flex;\r\n  flex-direction: column; /* 내부 요소를 수직 정렬 */\r\n  justify-content: space-between; /* 간격 균형 유지 */\r\n}\r\n\r\n/* 제목 스타일 */\r\n.login-title {\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 2.5rem;\r\n}\r\n\r\n/* 폼 스타일 */\r\n.login-form {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between; /* 버튼과 입력 필드 사이 균형 유지 */\r\n}\r\n\r\n/* 폼 그룹 스타일 */\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* 라벨 스타일 */\r\n.form-label {\r\n  display: block;\r\n  font-weight: bold;\r\n  color: #555;\r\n  margin-bottom: 0.5rem;\r\n  text-align: left;\r\n}\r\n\r\n/* 인풋 스타일 */\r\n.form-input {\r\n  width: 100%;\r\n  padding: 0.7rem;\r\n  border: 1px solid #4b47c857;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 버튼 스타일 */\r\n.submit-group {\r\n  text-align: right; /* 버튼을 우측 정렬 */\r\n}\r\n\r\n.submit-button {\r\n  background: #6c63ff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0.7rem 1.5rem;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background: #4b47c8;\r\n}\r\n</style>\r\n","import script from \"./LogInView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LogInView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LogInView.vue?vue&type=style&index=0&id=70f5c23b&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { ref, computed } from 'vue'\r\nimport { defineStore } from 'pinia'\r\nimport axios from 'axios'\r\nimport { useRouter } from 'vue-router'\r\nimport LogInView from '@/views/LogInView.vue'\r\n\r\nexport const useCounterStore = defineStore('counter', () => {\r\n  const articles = ref([])\r\n  const API_URL = 'http://127.0.0.1:8000'\r\n  const token = ref(null)\r\n  const rankings = ref([]); // 랭킹 데이터를 저장\r\n  const Username = ref(null)  // 사용자 이름 저장 변수 추가\r\n  // const user = ref({ username: '', points: 0 }); // 유저 정보\r\n  const user = ref({});\r\n  const isLogin = computed(() => {\r\n    if (token.value === null) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  })\r\n  const router = useRouter()\r\n  const signUpResponse = ref(null); // 회원가입 성공/실패 응답 데이터 저장\r\n  const error = ref(null); // 에러 메시지 저장\r\n\r\n  // 서버에서 데이터 가져오기\r\n  const fetchArticles = async () => {\r\n    console.log(\"fetchArticles function invoked\"); // 함수 호출 확인\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/v1/communities/`, {\r\n        headers: { Authorization: `Token ${token.value}` },\r\n      })\r\n      console.log(\"Articles with comment count:\", response.data); // comment_count 확인\r\n      articles.value = response.data\r\n      console.log('ppaaaa',articles.value)\r\n    } catch (error) {\r\n      console.error('Error fetching articles:', error)\r\n    }\r\n  }\r\n\r\n  // 회원가입 함수\r\n  const signUp = async (payload) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/accounts/custom-signup/`, payload, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data', // FormData 처리\r\n        },\r\n      });\r\n      signUpResponse.value = response.data; // 회원가입 성공 응답 데이터 저장\r\n      console.log(\"회원가입 성공:\", response.data);\r\n  \r\n      // 회원가입 성공 후 자동으로 로그인 처리\r\n      const loginPayload = {\r\n        username: payload.get(\"username\"), // FormData에서 username 가져오기\r\n        password: payload.get(\"password1\"), // password1 가져오기\r\n      };\r\n      await logIn(loginPayload); // 로그인 처리\r\n  \r\n      // 로그인 성공 후 홈으로 이동\r\n      router.push({ name: \"HomeView\" });\r\n    } catch (err) {\r\n      error.value = err.response?.data || err.message; // 실패 시 에러 저장\r\n      console.error(\"회원가입 실패:\", error.value);\r\n      throw err; // 에러 재발생\r\n    }\r\n  };\r\n  \r\n\r\n  // 클라이언트 정렬 로직\r\n  const sortArticles = (sortOrder) => {\r\n    if (sortOrder === 'popular') {\r\n      articles.value.sort((a, b) => b.like_count - a.like_count) // 좋아요 많은 순\r\n    } else if (sortOrder === 'recent') {\r\n      console.log('a',articles.value)\r\n      articles.value.sort((a, b) => b.id - a.id); // id 내림차순\r\n    }\r\n  }\r\n\r\n  // 정렬된 데이터 가져오기\r\n  const getSortedArticles = async (sortOrder = \"recent\") => {\r\n    // if (!articles.value.length) {\r\n    //   console.log(\"Fetching articles from server...\");\r\n      await fetchArticles();\r\n    // }\r\n    console.log('111',articles.value)\r\n  \r\n    // 정렬만 수행\r\n    sortArticles(sortOrder);\r\n  };\r\n\r\n  // 날짜 포맷팅 함수 추가\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString)\r\n    const year = date.getFullYear()\r\n    const month = String(date.getMonth() + 1).padStart(2, '0')\r\n    const day = String(date.getDate()).padStart(2, '0')\r\n    const hours = String(date.getHours()).padStart(2, '0')\r\n    const minutes = String(date.getMinutes()).padStart(2, '0')\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`\r\n  }\r\n\r\n  // 랭킹 데이터를 가져오는 함수\r\n  const fetchRankings = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/v1/communities/ranking/`, {\r\n        headers: { Authorization: `Token ${token.value}` },\r\n      });\r\n      rankings.value = response.data;\r\n      console.log('Fetching rankings...', rankings.value);\r\n      console.log('Rankings fetched:', response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching rankings:', error);\r\n    }\r\n  };\r\n\r\n  // 별점 표시 함수\r\n  const displayStars = (rating) => {\r\n    const stars = []\r\n    for (let i = 1; i <= 10; i++) {\r\n      stars.push({\r\n        filled: i <= rating, // rating 이하의 별은 노란색으로 채워짐\r\n      })\r\n    }\r\n    return stars\r\n  }\r\n\r\n  const syncArticle = (updatedArticle) => {\r\n    const index = articles.value.findIndex((a) => a.id === updatedArticle.id);\r\n    if (index !== -1) {\r\n      articles.value[index] = { ...articles.value[index], ...updatedArticle };\r\n    }\r\n  };\r\n\r\n  //////////////////////////////////////////////\r\n  const fetchUser = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/accounts/user/`, {\r\n        headers: {\r\n          Authorization: `Token ${token.value}`,\r\n        },\r\n      });\r\n      user.value = { ...response.data, id: response.data.pk }; // 사용자 정보 저장\r\n      Username.value = response.data.username;\r\n      //->개빡치네\r\n      //백엔드에서 사용자 ID를 pk로 보내주는데, 프론트엔드에서는 id로 사용하려고 했기 때문임\r\n      console.log(\"User fetched:\", user.value);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user:\", error);\r\n      user.value = {};\r\n    }\r\n  };\r\n  // axios 요청 공통 헤더 설정 (인터셉터 사용)\r\naxios.defaults.headers.common['Authorization'] = () => `Token ${token.value}`;\r\n\r\n  \r\n  // 카테고리 이름 수정\r\n  const updateCategoryName = async (categoryId, newName) => {\r\n    try {\r\n      const response = await axios.patch(\r\n        `${API_URL}/accounts/categories/${categoryId}/update/`,\r\n        { name: newName },\r\n        {\r\n          headers: {\r\n            Authorization: `Token ${token.value}`,\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Category name updated:\", response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error updating category name:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 카테고리 삭제\r\n  const deleteCategory = async (categoryId) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/accounts/categories/${categoryId}/delete/`, {\r\n        headers: {\r\n          Authorization: `Token ${token.value}`,\r\n        },\r\n      });\r\n      console.log(\"Category deleted successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting category:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 카테고리에서 영화 삭제\r\n  const removeMovieFromCategory = async (categoryId, movieId) => {\r\n    try {\r\n      await axios.post(\r\n        `${API_URL}/accounts/categories/remove-movie/`,\r\n        { category_id: categoryId, movie_id: movieId },\r\n        {\r\n          headers: {\r\n            Authorization: `Token ${token.value}`,\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Movie removed from category successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error removing movie from category:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n  //////////////////////////////////////////////\r\n\r\n  // 랭크 계산 함수\r\n  const getRankTitle = (points) => {\r\n    if (points < 1000) return \"Bronze\";\r\n    if (points < 2000) return \"Silver\";\r\n    if (points < 3000) return \"Gold\";\r\n    if (points < 4000) return \"Platinum\";\r\n    return \"Diamond\";\r\n  };\r\n\r\n  \r\n  const fetchUserPoints = async () => {\r\n    try {\r\n      const response = await axios.get(`http://127.0.0.1:8000/accounts/user/points/`, {\r\n        headers: {\r\n          Authorization: `Token ${token.value}`, // JWT 토큰 추가\r\n        },\r\n      });\r\n      console.log(response.data)\r\n      user.value = {\r\n        ...user.value, // 기존 사용자 데이터 유지\r\n        current_points: response.data.current_points,\r\n        rank_title: getRankTitle(response.data.current_points),\r\n      };\r\n      // fetchRankings 함수에서 데이터를 로깅합니다.\r\n      console.log('Rankings fetched:', response.data);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching user points:', error);\r\n    }\r\n  };\r\n\r\n  // DRF로 전체 게시글 요청을 보내고 응답을 받아 articles에 저장하는 함수\r\n  const getArticles = (forceReload = false) => {\r\n    console.log(\"getArticles function called\");\r\n  \r\n    if (!forceReload && articles.value.length > 0) {\r\n      console.log('qwe',articles.value)\r\n      console.log(\"Articles already loaded, skipping reload\");\r\n      return;\r\n    }\r\n  \r\n    axios({\r\n      method: \"get\",\r\n      url: `${API_URL}/api/v1/communities/`,\r\n      headers: {\r\n        Authorization: `Token ${token.value}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        articles.value = response.data; // 데이터를 Vue의 반응형 상태로 설정\r\n        console.log(\"Updated articles:\", articles.value);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching articles:\", err);\r\n      });\r\n  };\r\n\r\n\r\n  // 회원가입 요청 액션\r\n  // const signUp = function (payload) {\r\n  //   // const username = payload.username\r\n  //   // const password1 = payload.password1\r\n  //   // const password2 = payload.password2\r\n  //   const { username, password1, password2 } = payload\r\n\r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: `${API_URL}/accounts/signup/`,\r\n  //     data: {\r\n  //       username, password1, password2\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       // console.log(res)\r\n  //       // console.log('회원가입 성공')\r\n  //       const password = password1\r\n  //       logIn({ username, password })\r\n  //       // console.log(\"로그인됐나요?:\", isLogin)\r\n  //     })\r\n  //     .then(() => {\r\n  //       fetchUserPoints(); // 로그인 이후 즉시 사용자 포인트 정보를 가져옴\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err)\r\n  //     })\r\n  //   }\r\n\r\n  // // 로그인 요청 액션\r\n  // const logIn = function (payload) {\r\n  //   // const username = payload.username\r\n  //   // const password1 = payload.password\r\n  //   const { username, password } = payload\r\n\r\n  //   axios({\r\n  //     method: 'post',\r\n  //     url: `${API_URL}/accounts/login/`,\r\n  //     data: {\r\n  //       username, password\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       token.value = res.data.key;\r\n  //       // 사용자 정보를 가져오는 추가 요청\r\n  //       axios({\r\n  //         method: 'get',\r\n  //         url: `${API_URL}/accounts/user/`,  // 사용자 정보를 가져오는 엔드포인트\r\n  //         headers: {\r\n  //           Authorization: `Token ${token.value}`\r\n  //         }\r\n  //       })\r\n\r\n  //         .then((userRes) => {\r\n  //           console.log(userRes.data)\r\n  //           Username.value = userRes.data.username  // 사용자 이름 저장\r\n  //           router.push({ name: 'HomeView' })\r\n  //         })\r\n  //         .catch((err) => {\r\n  //           console.log('Error fetching user information:', err)\r\n  //         })\r\n  //       return fetchUserPoints()\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err)\r\n  //     })\r\n  // }\r\n  const logIn = async function (payload) {\r\n    try {\r\n      const { username, password } = payload;\r\n      const res = await axios.post(`${API_URL}/accounts/login/`, {\r\n        username,\r\n        password,\r\n      });\r\n      token.value = res.data.key; // 토큰 저장\r\n  \r\n      await fetchUser(); // 사용자 정보 비동기 로드\r\n      await fetchUserPoints(); // 포인트 정보 업데이트\r\n  \r\n      router.push({ name: \"HomeView\" }); // 홈페이지로 리다이렉트\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      alert(\"로그인에 실패했습니다. 사용자 이름과 비밀번호를 확인해주세요.\");\r\n    }\r\n  };\r\n  \r\n  \r\n  // [추가기능] 로그아웃\r\n  const logOut = function () {\r\n    axios({\r\n      method: 'post',\r\n      url: `${API_URL}/accounts/logout/`,\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        token.value = null\r\n        Username.value = null  // 로그아웃 시 사용자 이름 초기화\r\n        localStorage.removeItem('token')  // 로컬 스토리지에서 토큰 제거\r\n        user.value = { username: '', points: 0 } // 유저 정보 초기화\r\n        router.push({ name: 'ArticleView' }) // 로그아웃 후 리다이렉트\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  // 댓글 작성 및 댓글 목록 요청을 위한 함수 추가\r\n  const getComments = (articleId) => {\r\n    return axios({\r\n      method: 'get',\r\n      url: `${API_URL}/api/v1/communities/${articleId}/comments/`,\r\n      headers: {\r\n        Authorization: `Token ${token.value}`\r\n      }\r\n    })\r\n  }\r\n\r\n  const addComment = (articleId, commentContent) => {\r\n    return axios({\r\n      method: 'post',\r\n      url: `${API_URL}/api/v1/communities/${articleId}/comments/`,\r\n      headers: {\r\n        Authorization: `Token ${token.value}`\r\n      },\r\n      data: { content: commentContent }\r\n    })\r\n  }\r\n\r\n    // 댓글 수정 API 호출\r\n  const updateComment = (articleId, commentId, updatedContent) => {\r\n    return axios({\r\n      method: 'put',\r\n      url: `${API_URL}/api/v1/communities/${articleId}/comments/${commentId}/update/`,\r\n      headers: {\r\n        Authorization: `Token ${token.value}`,\r\n      },\r\n      data: { content: updatedContent },\r\n    });\r\n  };\r\n\r\n  // 댓글 삭제 API 호출\r\n  const deleteComment = (articleId, commentId) => {\r\n    return axios({\r\n      method: 'delete',\r\n      url: `${API_URL}/api/v1/communities/${articleId}/comments/${commentId}/delete/`,\r\n      headers: {\r\n        Authorization: `Token ${token.value}`,\r\n      },\r\n    });\r\n  };\r\n\r\n  const fetchCategoryDetails = async (categoryId) => {\r\n    const response = await axios.get(`${API_URL}/accounts/categories/${categoryId}/`, {\r\n      headers: { Authorization: `Token ${token.value}` },\r\n    });\r\n    return response.data; // { category: { ... }, movies: [ ... ] }\r\n  };\r\n\r\n  const searchMovies = async (title) => {\r\n    const response = await axios.get(`${API_URL}/accounts/movies/search/`, {\r\n      params: { title },\r\n      headers: { Authorization: `Token ${token.value}` },\r\n    });\r\n    return response.data; // 검색된 영화 리스트 반환\r\n  };\r\n\r\n\r\n  const addMovieToCategory = async (categoryId, movieId) => {\r\n    await axios.post(\r\n      `${API_URL}/accounts/categories/add-movie/`,\r\n      { category_id: categoryId, movie_id: movieId },\r\n      { headers: { Authorization: `Token ${token.value}` } }\r\n    );\r\n    alert(\"영화가 카테고리에 추가되었습니다.\");\r\n  };\r\n\r\n  const createArticle = async (articleData) => {\r\n    try {\r\n      console.log('bb',articleData)\r\n      const response = await axios.post(`${API_URL}/api/v1/communities/`, articleData, {\r\n        headers: {\r\n          Authorization: `Token ${token.value}`,\r\n        },\r\n      });\r\n      console.log(\"Article created successfully:\", response.data);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error creating article:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateLikeStatus = async (articleId) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_URL}/api/v1/communities/${articleId}/like/`,\r\n        {}, // POST 요청의 body는 비워둠\r\n        {\r\n          headers: { Authorization: `Token ${token.value}` }, // headers는 config 안에 설정\r\n        }\r\n      );\r\n  \r\n      const updatedArticle = response.data;\r\n  \r\n      // articles 배열에서 해당 article을 업데이트\r\n      const index = articles.value.findIndex((a) => a.id === articleId);\r\n      if (index !== -1) {\r\n        articles.value[index] = { ...articles.value[index], ...updatedArticle };\r\n      }\r\n  \r\n      return updatedArticle;\r\n    } catch (err) {\r\n      console.error(\"좋아요 상태 업데이트 실패:\", err);\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n\r\n  const getArticleDetail = async (articleId) => {\r\n    const response = await axios.get(`${API_URL}/api/v1/communities/${articleId}/`,\r\n      {\r\n        headers: { Authorization: `Token ${token.value}` }, // headers를 올바르게 설정\r\n      }\r\n    );\r\n    console.log('ㅅㅂ', response.data)\r\n    return response.data;\r\n  };\r\n  return { \r\n    articles, \r\n    API_URL, \r\n    addComment, \r\n    getComments, \r\n    getArticles, \r\n    signUp, \r\n    logIn, \r\n    token, \r\n    isLogin, \r\n    logOut, \r\n    Username, \r\n    fetchUserPoints, \r\n    user, \r\n    fetchUser, // 사용자 정보 가져오기\r\n    updateCategoryName, // 카테고리 이름 수정\r\n    deleteCategory, // 카테고리 삭제\r\n    removeMovieFromCategory, // 카테고리에서 영화 삭제\r\n    displayStars, \r\n    fetchRankings, \r\n    rankings, \r\n    updateComment, \r\n    deleteComment,\r\n    formatDate,\r\n    getSortedArticles,\r\n    signUp,\r\n    signUpResponse,\r\n    error,\r\n    getRankTitle,\r\n    fetchCategoryDetails,\r\n    searchMovies,\r\n    addMovieToCategory,\r\n    createArticle,\r\n    updateLikeStatus,\r\n    syncArticle,\r\n    getArticleDetail,\r\n  }\r\n}, { persist: true })","<template>\r\n  <div class=\"background-container\"></div>\r\n  <div class=\"app-wrapper\">\r\n    <header>\r\n      <nav class=\"navbar\">\r\n        <div class=\"container\">\r\n          <img class=\"logoimage\" src=\"/assets/logos/Monster Logo.png\" alt=\"로고이미지\">\r\n          <!-- 네비게이션 링크 -->\r\n          \r\n          <RouterLink :to=\"{ name: 'HomeView' }\" class=\"nav-link\">HOME</RouterLink> |\r\n          <RouterLink :to=\"{ name: 'MovieView' }\" class=\"nav-link\">MOVIE</RouterLink> |\r\n          <RouterLink :to=\"{ name: 'ArticleView' }\" class=\"nav-link\">REVIEW</RouterLink> |\r\n          <RouterLink :to=\"{ name: 'GameView' }\" class=\"nav-link\">GAME</RouterLink> |\r\n          <RouterLink :to=\"{ name: 'RankView' }\" class=\"nav-link\">RANKING</RouterLink> |\r\n\r\n          <RouterLink\r\n            v-if=\"isLogin && user.username\"\r\n            :to=\"{ name: 'ProfileView', params: { username: user.username || '' } }\"\r\n            class=\"nav-link\"\r\n          >\r\n            MY PROFILE\r\n          </RouterLink>\r\n          \r\n          <div v-else>\r\n            <RouterLink :to=\"{ name: 'LogInView' }\" class=\"nav-link\">로그인</RouterLink>\r\n            <RouterLink :to=\"{ name: 'SignUpView' }\" class=\"nav-link\">회원가입</RouterLink>\r\n          </div>\r\n\r\n          <!-- 사용자 정보 -->\r\n          <div class=\"user-info\" v-if=\"!isLoading && user.username\">\r\n            <div v-if=\"user.rank_title\" class=\"rank-display\">\r\n              <img :src=\"getRankImage(user.rank_title)\" :alt=\"user.rank_title\" class=\"rank-icon\" />\r\n            </div> |\r\n            {{ user.username }} | Points: {{ user.current_points }}\r\n          </div>\r\n\r\n          <form @submit.prevent=\"logOut\" v-if=\"isLogin\">\r\n            <input type=\"submit\" value=\"로그아웃\">\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n    <main class=\"content\">\r\n      <!-- 로딩 상태 -->\r\n      <div v-if=\"isLoading\" class=\"loading\">\r\n        <p>Loading...</p>\r\n      </div>\r\n      <!-- 동적 라우터 뷰 -->\r\n      <RouterView v-else />\r\n    </main>\r\n\r\n    <!-- 위로 이동 버튼 -->\r\n    <button v-if=\"showScrollToTop\" class=\"scroll-to-top\" @click=\"scrollToTop\">\r\n      ▲\r\n    </button>\r\n\r\n    <footer class=\"footer\">\r\n      <div class=\"footer-container\">\r\n        <!-- 왼쪽 섹션 -->\r\n        <div class=\"footer-left\">\r\n          <p><strong>MovieMoster</strong> | 팀장 하건수 | <a href=\"mailto:rjs4013@naver.com\">rjs4013@naver.com</a></p>\r\n          <p>팀원 강혜경 | <a href=\"mailto:ghgghg96@naver.com\">ghgghg96@naver.com</a> | 대표전화 010-1234-5678</p>\r\n        </div>\r\n\r\n        <!-- 오른쪽 섹션 -->\r\n        <div class=\"footer-right\">\r\n          <p>Copyright &copy; 2024 by MovieMoster, Inc. All Rights Reserved.</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, watchEffect, onMounted } from \"vue\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\n\r\nconst store = useCounterStore();\r\nconst isLogin = computed(() => store.isLogin);\r\nconst user = computed(() => store.user);\r\n\r\nconst isLoading = ref(true); // 로딩 상태 관리\r\nconst showScrollToTop = ref(false); // 스크롤 버튼 표시 여부\r\n\r\n// 랭크 이미지 불러오기\r\nimport bronzeRank from \"@/assets/BronzeRank.png\";\r\nimport silverRank from \"@/assets/SilverRank.png\";\r\nimport goldRank from \"@/assets/GoldRank.png\";\r\nimport platinumRank from \"@/assets/PlatinumRank.png\";\r\nimport diamondRank from \"@/assets/DiamondRank.png\";\r\n\r\n// 랭크 이미지를 반환하는 함수\r\nconst getRankImage = (rankTitle) => {\r\n  switch (rankTitle) {\r\n    case \"Bronze\":\r\n      return bronzeRank;\r\n    case \"Silver\":\r\n      return silverRank;\r\n    case \"Gold\":\r\n      return goldRank;\r\n    case \"Platinum\":\r\n      return platinumRank;\r\n    case \"Diamond\":\r\n      return diamondRank;\r\n    default:\r\n      return bronzeRank; // 기본값\r\n  }\r\n};\r\n\r\n// 로그아웃 기능\r\nconst logOut = () => {\r\n  store.logOut();\r\n};\r\n\r\n// 상태값이 로드되었는지 감지\r\nwatchEffect(async () => {\r\n  if (store.token) {\r\n    await store.fetchUser(); // 사용자 정보 로드\r\n    await store.fetchUserPoints(); // 사용자 포인트 로드\r\n    isLoading.value = false; // 로드 완료\r\n  } else {\r\n    isLoading.value = false; // 토큰이 없는 경우도 로드 완료로 처리\r\n  }\r\n});\r\n\r\n// 스크롤에 따라 버튼 표시\r\nconst handleScroll = () => {\r\n  showScrollToTop.value = window.scrollY > 300; // 스크롤이 300px 이상일 때 버튼 표시\r\n};\r\n\r\n// 위로 이동\r\nconst scrollToTop = () => {\r\n  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n};\r\n\r\nonMounted(() => {\r\n  window.addEventListener(\"scroll\", handleScroll);\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.scroll-to-top {\r\n  position: fixed;\r\n  bottom: 20px; /* 화면 하단에서 20px */\r\n  right: 20px; /* 화면 우측에서 20px */\r\n  width: 60px; /* 버튼 크기 */\r\n  height: 60px; /* 버튼 크기 */\r\n  background-color: #007bff; /* 파란색 배경 */\r\n  border: none;\r\n  border-radius: 50%; /* 원형 버튼 */\r\n  color: #ffffff; /* 텍스트 흰색 */\r\n  font-size: 20px; /* 텍스트 크기 */\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease-in-out, background-color 0.3s ease;\r\n}\r\n\r\n.scroll-to-top:hover {\r\n  background-color: #0056b3; /* 더 어두운 파란색 */\r\n  transform: scale(1.1); /* 약간 확대 */\r\n}\r\n\r\n.scroll-to-top:active {\r\n  transform: scale(0.9); /* 클릭 시 살짝 축소 */\r\n}\r\n\r\n.a11y-hidden {\r\n    overflow: hidden;\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n}\r\n\r\nform input[type=\"submit\"] {\r\n  background: linear-gradient(135deg, #ff5858, #f09819); /* 그래디언트 색상 */\r\n  border: none; /* 기본 테두리 제거 */\r\n  color: white; /* 텍스트 색상 */\r\n  padding: 10px 20px; /* 여백 설정 */\r\n  font-size: 16px; /* 글씨 크기 */\r\n  font-weight: bold; /* 글씨 굵기 */\r\n  border-radius: 25px; /* 버튼 모서리를 둥글게 */\r\n  cursor: pointer; /* 마우스 커서를 포인터로 변경 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* 그림자 추가 */\r\n  transition: transform 0.2s ease, box-shadow 0.3s ease; /* 애니메이션 */\r\n}\r\n\r\nform input[type=\"submit\"]:hover {\r\n  transform: translateY(-2px); /* 살짝 위로 이동 */\r\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.3); /* 호버 시 더 강한 그림자 */\r\n}\r\n\r\nform input[type=\"submit\"]:active {\r\n  transform: translateY(0); /* 클릭 시 원래 위치로 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* 클릭 시 그림자 감소 */\r\n}\r\n\r\n.logoimage {\r\n  width: 60px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n}\r\n\r\n.nav-link {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\r\n  z-index: 1;\r\n}\r\n\r\n.nav-link::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(135deg, rgba(224, 47, 240, 0.2), rgba(0, 0, 0, 0));\r\n  border-radius: 5px;\r\n  transform: scale(0.8);\r\n  opacity: 0;\r\n  transition: all 0.4s ease-in-out;\r\n  z-index: -1; /* 텍스트 뒤로 가게 설정 */\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #e02ff0; /* 마우스 오버 시 텍스트 색상 */\r\n}\r\n\r\n.nav-link:hover::after {\r\n  transform: scale(1);\r\n  opacity: 1;\r\n  background: linear-gradient(135deg, rgba(224, 47, 240, 0.4), rgba(0, 0, 0, 0));\r\n  box-shadow: 0 0 15px rgba(224, 47, 240, 0.5), 0 0 20px rgba(224, 47, 240, 0.3);\r\n}\r\n\r\n\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=fcc47edc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fcc47edc\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"review-card\">\r\n    <!-- 작성자 정보 -->\r\n    <div class=\"author-section\" @click=\"navigateToReviewDetail(article.id)\">\r\n      <img\r\n        v-if=\"article.user_profile_image\"\r\n        :src=\"`${store.API_URL}${article.user_profile_image}`\"\r\n        alt=\"프로필 이미지\"\r\n        class=\"profile-image\"\r\n        @click.stop=\"navigateToProfile(article.user)\"\r\n      />\r\n      <div class=\"user-info\">\r\n        <p class=\"username\">{{ article.user }}</p>\r\n        <p class=\"created-at\">{{ store.formatDate(article.created_at) }}</p>\r\n        <p class=\"rating\">⭐ {{ article.rating ? article.rating.toFixed(1) : 'N/A' }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 리뷰 내용 -->\r\n    <div class=\"review-content\">\r\n      <p class=\"review-text\">{{ article.content }}</p>\r\n    </div>\r\n\r\n    <!-- 영화 정보 카드 -->\r\n    <div v-if=\"article.movie\" class=\"movie-card\" @click=\"navigateToMovieDetail(article.movie.movie_id)\">\r\n      <img\r\n        v-if=\"article.movie\"\r\n        :src=\"article.movie.poster_url\"\r\n        alt=\"영화 포스터\"\r\n        class=\"poster-image\"\r\n      />\r\n      <div class=\"movie-info\">\r\n        <h4 class=\"movie-title\">{{ article.movie.title }}</h4>\r\n        <div class=\"movie-genres\">\r\n          <span v-for=\"genre in article.movie.genres\" :key=\"genre\" class=\"genre\">\r\n            {{ genre }}\r\n          </span>\r\n        </div>\r\n        <p class=\"movie-overview\">{{ article.movie.description }}</p>\r\n        <p class=\"movie-rating\">⭐ {{ article.movie.vote_avg ? article.movie.vote_avg.toFixed(1) : 'N/A' }}</p>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <!-- 영화 정보가 없는 경우 보여줄 내용 -->\r\n      <p>영화 정보가 없습니다.</p>\r\n    </div>\r\n\r\n\r\n     <!-- 좋아요 기능 -->\r\n     <div class=\"like-container\">\r\n      <button class=\"like-button\" @click=\"toggleLike\">\r\n        <!-- props.article.is_liked 대신 로컬 상태 isLiked 사용 -->\r\n        <span v-if=\"isLiked\" class=\"liked-icon\">❤️</span>\r\n        <span v-else class=\"like-icon\">🤍</span>\r\n      </button>\r\n      <span class=\"like-count\">{{ likeCount }}</span>\r\n\r\n      <div class=\"comment-count\" @click=\"navigateToReviewDetail(article.id)\">\r\n        <button class=\"like-button\">\r\n          <span class=\"comment-icon\">💬</span>\r\n          <span class=\"comment-count-value\">{{ article.comment_count }}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport axios from \"axios\"; // axios 임포트\r\n\r\nconst props = defineProps({ article: { type: Object, required: true } });\r\nconst emit = defineEmits([\"update:article\"]); // 부모에게 상태 전달 이벤트 정의\r\n\r\n\r\nconst store = useCounterStore();\r\nconst router = useRouter();\r\n\r\n// 반응형 데이터\r\nconst article = ref({ ...props.article }); // props.article을 반응형으로 관리\r\n\r\nconst parseGenres = (genres) => {\r\n  try {\r\n    if (typeof genres === 'string') {\r\n      return JSON.parse(genres);\r\n    }\r\n    return genres;  // 이미 배열이라면 그대로 반환\r\n  } catch (e) {\r\n    console.error(\"Failed to parse genres:\", e);\r\n    return [];  // 파싱 실패 시 빈 배열 반환\r\n  }\r\n};\r\n\r\n\r\n// 초기화: props.article.is_liked를 기반으로 isLiked를 설정\r\nconst isLiked = ref(props.article.is_liked ?? false); // nullish coalescing: 없으면 false\r\nconst likeCount = ref(props.article.like_count ?? 0);\r\n\r\n// 좋아요 토글\r\nconst toggleLike = async () => {\r\n  try {\r\n    const updatedArticle = await store.updateLikeStatus(article.value.id);\r\n\r\n    // Local state 업데이트\r\n    article.value.is_liked = updatedArticle.action === \"added\";\r\n    article.value.like_count = updatedArticle.like_count;\r\n    console.log('pp',article.value)\r\n\r\n    // 부모 컴포넌트에 업데이트 알림\r\n    emit(\"update-article\", article.value);\r\n  } catch (err) {\r\n    console.error(\"좋아요 상태 업데이트 실패:\", err);\r\n  }\r\n};\r\n\r\n\r\n// Props 변경 감지\r\nwatch(\r\n  () => props.article,\r\n  (newArticle) => {\r\n    if (newArticle) {\r\n      console.log(\"Updated props.article:\", newArticle);\r\n      isLiked.value = newArticle.is_liked ?? false; // is_liked 반영\r\n      likeCount.value = newArticle.like_count ?? 0; // like_count 반영\r\n      console.log(\"Local state isLiked:\", isLiked.value);\r\n    }\r\n  },\r\n  { immediate: true } // 초기에도 실행\r\n);\r\n\r\n// 디테일 페이지 이동\r\nconst navigateToReviewDetail = (articleId) => {\r\n  router.push({ name: \"DetailView\", params: { id: articleId } });\r\n};\r\n\r\n// 프로필 페이지 이동\r\nconst navigateToProfile = (username) => {\r\n  router.push({ name: \"ProfileView\", params: { username } });\r\n};\r\n\r\n// 영화 디테일 페이지 이동\r\nconst navigateToMovieDetail = (movieId) => {\r\n  router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n};\r\n\r\n// 포스터 URL 생성\r\nconst getFullPosterUrl = (posterUrl) => {\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n  return `${baseUrl}${posterUrl}`;\r\n};\r\n\r\nconsole.log('pppppppppp',article.value.movie)\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 동일한 스타일 유지 */\r\n.review-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  margin-bottom: 20px;\r\n  background-color: #f8f9fa;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n/* 작성자 정보 수평 정렬 */\r\n.author-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px; /* 간격 축소 */\r\n  margin-bottom: 3px; /* 전체 하단 마진 축소 */\r\n  cursor: pointer;\r\n  /* border-bottom: 1px solid #ddd; */\r\n  padding-bottom: 3px;\r\n}\r\n\r\n.profile-image {\r\n  width: 40px; /* 크기 축소 */\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px; /* 유저명, 작성일, 별점 간격 축소 */\r\n}\r\n\r\n.username {\r\n  font-weight: bold;\r\n  font-size: 18px; /* 크기 축소 */\r\n  color: #000; /* 글자색 검정 */\r\n}\r\n\r\n.created-at {\r\n  color: #000;\r\n  font-size: 12px;\r\n}\r\n\r\n.rating {\r\n  font-size: 15px;\r\n  color: #f39c12;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 리뷰 내용 배치 조정 */\r\n.review-content .review-text {\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  line-height: 1.4;\r\n  color: #000; /* 글자색 검정 */\r\n}\r\n\r\n/* 영화 카드: 수평 정렬 */\r\n.movie-card {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  cursor: pointer;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s;\r\n  background-color: #d3d3d3; /* 배경색 회색 */\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n}\r\n.movie-card:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.poster-image {\r\n  width: 80px; /* 크기 조정 */\r\n  height: 120px;\r\n  object-fit: cover;\r\n}\r\n\r\n.movie-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  gap: 5px;\r\n  color: #000; /* 텍스트 검정색 */\r\n}\r\n\r\n.movie-title {\r\n  font-size: 14px; /* 크기 축소 */\r\n  font-weight: bold;\r\n  margin: 0;\r\n  color: #000; /* 텍스트 검정색 */\r\n}\r\n\r\n.movie-genres {\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap; /* 장르가 많을 경우 줄바꿈 */\r\n  color: #000; /* 장르 텍스트 검정 */\r\n}\r\n\r\n.genre {\r\n  background-color: #f1f1f1;\r\n  padding: 2px 5px;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  color: #000; /* 장르 텍스트 검정 */\r\n}\r\n\r\n.movie-overview {\r\n  font-size: 12px;\r\n  color: #000; /* 텍스트 검정색 */\r\n  margin-top: 10px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.movie-rating {\r\n  font-weight: bold;\r\n  color: #f39c12;\r\n}\r\n\r\n/* 좋아요 기능 스타일 */\r\n/* 좋아요 및 댓글 컨테이너 */\r\n.like-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px; /* 좋아요와 댓글 사이 간격 조정 */\r\n  margin-top: 10px; /* 상단 마진 */\r\n  justify-content: flex-start; /* 왼쪽 정렬 */\r\n}\r\n\r\n/* 좋아요 버튼 */\r\n.like-button {\r\n  display: flex;\r\n  align-items: center;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  gap: 22px; /* 아이콘과 숫자 사이 간격 */\r\n  font-size: 14px; /* 숫자 크기 통일 */\r\n  color: #000; /* 검정색 텍스트 */\r\n  transition: color 0.3s ease; /* 색상 변화 애니메이션 추가 */\r\n}\r\n\r\n/* 좋아요 아이콘 */\r\n.like-button:hover .like-icon,\r\n.like-button:hover .liked-icon {\r\n  color: #e74c3c; /* hover 시 빨간색으로 변경 */\r\n}\r\n\r\n.like-button:hover .like-count {\r\n  color: #e74c3c; /* 좋아요 숫자도 hover 시 동일한 색상으로 변경 */\r\n}\r\n\r\n.like-icon,\r\n.liked-icon {\r\n  font-size: 20px; /* 좋아요 아이콘 크기 */\r\n  color: #ff6b6b; /* 좋아요 아이콘 색상 */\r\n}\r\n\r\n/* 좋아요 숫자 */\r\n.like-count {\r\n  font-size: 14px; /* 숫자 크기 */\r\n  color: #000; /* 숫자 색상 */\r\n}\r\n\r\n/* 댓글 버튼 */\r\n.comment-count {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px; /* 아이콘과 숫자 사이 간격 */\r\n  font-size: 14px; /* 숫자 크기 통일 */\r\n  color: #000; /* 검정색 텍스트 */\r\n  transition: color 0.3s ease; /* 색상 변화 애니메이션 추가 */\r\n}\r\n\r\n.comment-count:hover .comment-icon {\r\n  color: #3498db; /* hover 시 파란색으로 변경 */\r\n}\r\n\r\n.comment-count:hover .comment-count-value {\r\n  color: #3498db; /* 댓글 숫자도 hover 시 동일한 색상으로 변경 */\r\n}\r\n\r\n/* 댓글 아이콘 */\r\n.comment-icon {\r\n  font-size: 20px; /* 댓글 아이콘 크기 */\r\n  color: #000; /* 아이콘 색상 */\r\n}\r\n\r\n/* 댓글 숫자 */\r\n.comment-count-value {\r\n  font-size: 14px; /* 숫자 크기 */\r\n  color: #000; /* 숫자 색상 */\r\n}\r\n\r\n</style>\r\n\r\n","import script from \"./ArticleListItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArticleListItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArticleListItem.vue?vue&type=style&index=0&id=0bd4969c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0bd4969c\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- <h3>리뷰 목록</h3> -->\r\n\r\n    <!-- 정렬 버튼 -->\r\n    <div class=\"tabs-container\">\r\n      <button @click=\"setSortOrder('popular')\" :class=\"{ active: sortOrder === 'popular' }\">인기순</button>\r\n      <button @click=\"setSortOrder('recent')\" :class=\"{ active: sortOrder === 'recent' }\">최신순</button>\r\n    </div>\r\n\r\n    <div v-if=\"store.articles.length === 0\">\r\n      <p>등록된 리뷰가 없습니다.</p>\r\n    </div>\r\n\r\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n    <div v-if=\"articles.length > 0\">\r\n      <ArticleListItem\r\n        v-for=\"article in articles\"\r\n        :key=\"article.id\"\r\n        :article=\"article\"\r\n        @update-article=\"updateArticle\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ArticleListItem from '@/components/ArticleListItem.vue'\r\nimport { useCounterStore } from '@/stores/counter'\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nconst searchQuery = ref('')\r\nconst errorMessage = ref('')\r\nconst router = useRouter()\r\n\r\nconst store = useCounterStore()\r\n\r\nconst articles = computed(() => store.articles);\r\nconsole.log('vvv',articles)\r\n\r\nconst sortOrder = ref('recent') // 기본 정렬 기준: 최신순\r\n\r\n// 정렬 버튼 클릭 시 정렬 기준 변경\r\nconst setSortOrder = (order) => {\r\n  sortOrder.value = order\r\n  store.getSortedArticles(order) // 정렬된 데이터 가져오기\r\n}\r\n\r\nconst updateArticle = (updatedArticle) => {\r\n  const index = store.articles.findIndex((article) => article.id === updatedArticle.id);\r\n  if (index !== -1) {\r\n    store.articles[index] = { ...updatedArticle };\r\n    console.log(\"Updated article in parent component:\", store.articles[index]);\r\n  }\r\n};\r\n\r\n\r\n\r\n// 컴포넌트 마운트 시 초기 데이터 로드\r\nonMounted(async () => {\r\n  try {\r\n    // // 데이터가 없거나 강제로 새로 고침이 필요한 경우만 호출\r\n    // if (!store.articles.length) {\r\n      await store.getSortedArticles(sortOrder.value);\r\n    \r\n    console.log('dfdf', articles.value)\r\n  } catch (err) {\r\n    console.error(\"Error loading articles:\", err);\r\n    errorMessage.value = \"게시글을 불러오는 중 오류가 발생했습니다.\";\r\n  }\r\n});\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 탭 스타일링 */\r\n.tabs-container {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 25px; /* 탭 간 간격을 넓혀서 더 명확히 구분 */\r\n  border-bottom: 2px solid #ff9800; /* 탭 아래에 강조선 추가 */\r\n  padding-bottom: 10px; /* 탭과 아래 내용 간격을 넉넉히 */\r\n  margin-bottom: 25px; /* 리뷰 목록과의 간격 추가 */\r\n}\r\n\r\n.tabs-container button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  color: #888888; /* 기본 탭 색상: 회색 */\r\n  transition: color 0.3s, border-bottom 0.3s;\r\n  font-weight: 600;\r\n}\r\n\r\n.tabs-container button.active {\r\n  color: #ffffff; /* 활성화된 탭 색상: 흰색 */\r\n  border-bottom: 3px solid #ffffff; /* 활성화된 탭 하단 강조선 */\r\n}\r\n\r\n/* 에러 메시지 스타일 */\r\n.error-message {\r\n  color: #ff4d4d; /* 빨간색으로 강조 */\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 리뷰가 없을 때 메시지 스타일 */\r\n.empty-message {\r\n  color: #cccccc; /* 조금 더 밝은 회색 */\r\n  font-size: 18px;\r\n  text-align: center; /* 중앙 정렬 */\r\n  margin-top: 30px;\r\n}\r\n</style>","import script from \"./ArticleList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArticleList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArticleList.vue?vue&type=style&index=0&id=779cf79b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-779cf79b\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"review-page-container\">\r\n    <h1 class=\"text-center tracking-in-expand-fwd my-4\">MONSTER'S REVIEWS</h1>\r\n    <!-- 페이지 상단: 리뷰 제목과 설명 -->\r\n    <div class=\"header\">\r\n      <div class=\"title-section\">\r\n        <p>영화에 대한 유저들의 리뷰들을 모아봤어요.</p>\r\n      </div>\r\n      <RouterLink :to=\"{ name: 'CreateView' }\" class=\"create-button\">리뷰 작성하기</RouterLink>\r\n    </div>\r\n    <ArticleList />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport ArticleList from '@/components/ArticleList.vue'\r\nimport { onMounted } from 'vue'\r\nimport { useCounterStore } from '@/stores/counter'\r\nimport { RouterLink } from 'vue-router'\r\n\r\nconst store = useCounterStore()\r\n\r\nonMounted(() => {\r\n  // mount 되기 전에 store에 있는 전체 게시글 요청 함수를 호출\r\n  store.getArticles()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.text-center {\r\n  padding-top: 20px;\r\n  color: #ff9800;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  animation: tracking-in-expand-fwd 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; /* 애니메이션 추가 */\r\n}\r\n@keyframes tracking-in-expand-fwd {\r\n  0% {\r\n    letter-spacing: -0.5em;\r\n    transform: translateZ(-700px);\r\n    opacity: 0;\r\n  }\r\n  40% {\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    transform: translateZ(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.container {\r\n  overflow: hidden; /* 넘치는 콘텐츠 숨김 */\r\n  width: 100%; /* 컨테이너 너비를 화면에 맞춤 */\r\n  padding: 0; /* 기본 패딩 제거 */\r\n}\r\n.review-page-container {\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px; /* 섹션 간 간격 */\r\n  background-color: #1f1f1f; /* 배경색을 어두운 톤으로 설정하여 집중도를 높임 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-bottom: 20px;\r\n  border-bottom: 2px solid #ff9800; /* 탭 컨테이너와의 일관성을 위해 강조선 추가 */\r\n}\r\n\r\n.title-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.header h1 {\r\n  font-size: 28px;\r\n  color: #ffffff; /* 색상을 하얀색으로 변경 */\r\n  font-weight: bold; /* 글씨를 굵게 설정 */\r\n}\r\n\r\n.header p {\r\n  font-size: 16px;\r\n  color: #888888; /* 부드러운 회색으로 설명 추가 */\r\n  margin: 0;\r\n}\r\n\r\n.create-button {\r\n  padding: 10px 16px;\r\n  background-color: #ff9800; /* 버튼 색상을 따뜻한 오렌지로 유지 */\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.create-button:hover {\r\n  background-color: #e68900;\r\n}\r\n</style>\r\n","import script from \"./ArticleView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ArticleView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ArticleView.vue?vue&type=style&index=0&id=7ee6d2b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7ee6d2b0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <button @click=\"goBack\">전체 리뷰로 돌아가기</button>\r\n    <div v-if=\"article\">\r\n      <!-- 제목 -->\r\n      <h2>제목 : {{ article.title }}</h2>\r\n      \r\n      <div class=\"author-container\">\r\n        <div class=\"author\">작성자: {{ article.user }}</div>\r\n        <div class=\"date-info\">\r\n          <span>작성일: 2024-11-26 15:23</span>\r\n          <span>수정일: 2024-11-26 15:27</span>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n      <!-- 게시글 수정 및 삭제 버튼 -->\r\n      <div v-if=\"isAuthor\" class=\"article-actions\">\r\n        <button class=\"edit-article-button\" @click=\"goToEdit\">게시글 수정</button>\r\n        <button class=\"delete-article-button\" @click=\"deleteArticle\">게시글 삭제</button>\r\n      </div>\r\n\r\n      <!-- 리뷰 내용 -->\r\n      <div class=\"content-text\">\r\n        <h6>{{ article.content }}</h6>\r\n      </div>\r\n\r\n      <!-- 영화 정보 카드 -->\r\n      <div class=\"movie-card\" @click=\"navigateToMovieDetail(article.movie.movie_id)\">\r\n        <img\r\n          v-if=\"article.movie.poster_url\"\r\n          :src=\"article.movie.poster_url\"\r\n          alt=\"영화 포스터\"\r\n          class=\"poster-image\"\r\n        />\r\n        <div class=\"movie-info\">\r\n          <h4 class=\"movie-title\">{{ article.movie.title }}</h4>\r\n          <div class=\"movie-genres\">\r\n            <span v-for=\"genre in article.movie.genres\" :key=\"genre\" class=\"genre\">\r\n              {{ genre }}\r\n            </span>\r\n          </div>\r\n          <p class=\"movie-overview\">{{ article.movie.description }}</p>\r\n          <p class=\"movie-rating\">⭐ {{ article.movie.vote_avg ? article.movie.vote_avg.toFixed(1) : 'N/A' }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 별점 -->\r\n      <p class=\"rating-container\">\r\n        <span>별점:</span><div class=\"stars\">\r\n          <div\r\n            v-for=\"(star, index) in store.displayStars(article.rating)\"\r\n            :key=\"index\"\r\n            class=\"star\"\r\n            :class=\"{ filled: star.filled }\"\r\n          ></div>\r\n        </div>\r\n      </p>\r\n\r\n      <!-- 좋아요 및 댓글 섹션 -->\r\n      <div class=\"like-comment-container\">\r\n        <button class=\"like-button\" @click=\"toggleLike\">\r\n          <span v-if=\"article.is_liked\" class=\"liked-icon\">❤️</span>\r\n          <span v-else class=\"like-icon\">🤍</span>\r\n        </button>\r\n        <span class=\"like-count\">{{ article.like_count }}</span>\r\n\r\n        <div class=\"comment-count\">\r\n          <span class=\"comment-icon\">💬</span>\r\n          <span class=\"comment-count-value\">{{ comments.length }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 댓글 섹션 -->\r\n      <div class=\"comment-section\">\r\n      <h3>댓글</h3>\r\n      <div v-if=\"comments && comments.length > 0\">\r\n        <div class=\"comment-card\" v-for=\"comment in comments\" :key=\"comment.id\">\r\n          <div class=\"comment-header\">\r\n            <strong>{{ comment.user }} : </strong>\r\n            <p class=\"comment-content\">{{ comment.content }}</p>\r\n            <div class=\"comment-actions\" v-if=\"comment.user === store.Username\">\r\n              <button class=\"edit-button\" @click=\"editComment(comment)\">수정</button>\r\n              <button class=\"delete-button\" @click=\"removeComment(comment.id)\">삭제</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <p class=\"no-comments\">댓글이 없습니다.</p>\r\n      </div>\r\n\r\n      <!-- 댓글 작성 -->\r\n      <div v-if=\"!editingComment\" class=\"comment-input-container\">\r\n        <textarea v-model=\"newComment\" placeholder=\"댓글을 작성하세요\"></textarea>\r\n        <button class=\"submit-button\" @click=\"submitComment\">댓글 작성</button>\r\n      </div>\r\n\r\n      <!-- 댓글 수정 -->\r\n      <div v-if=\"editingComment\" class=\"comment-edit-container\">\r\n        <textarea v-model=\"updatedCommentContent\"></textarea>\r\n        <button class=\"submit-button\" @click=\"submitUpdatedComment\">수정 완료</button>\r\n        <button class=\"cancel-button\" @click=\"cancelEdit\">취소</button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst store = useCounterStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst article = ref(null); // 게시글 데이터\r\nconst comments = ref([]); // 댓글 목록\r\nconst newComment = ref(\"\"); // 새로운 댓글 내용\r\nconst editingComment = ref(null); // 수정 중인 댓글\r\nconst updatedCommentContent = ref(\"\"); // 수정 중인 댓글 내용\r\nconst isAuthor = ref(false); // 사용자가 작성자인지 여부\r\n\r\nconst toggleLike = async () => {\r\n  try {\r\n    const updatedArticle = await store.updateLikeStatus(article.value.id);\r\n\r\n    // Local state 업데이트\r\n    article.value.is_liked = updatedArticle.action === \"added\";\r\n    article.value.like_count = updatedArticle.like_count;\r\n\r\n    // store의 articles 상태도 업데이트\r\n    const index = store.articles.findIndex((a) => a.id === article.value.id);\r\n    if (index !== -1) {\r\n      store.articles[index] = { ...article.value };\r\n    }\r\n  } catch (err) {\r\n    console.error(\"좋아요 상태 업데이트 실패:\", err);\r\n  }\r\n};\r\n\r\n// 영화 디테일 페이지로 이동\r\nconst navigateToMovieDetail = (movieId) => {\r\n  router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n};\r\n\r\n// 영화 포스터 URL 생성\r\nconst getFullPosterUrl = (posterUrl) => {\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n  return `${baseUrl}${posterUrl}`;\r\n};\r\n\r\n// 게시글 및 댓글 데이터 가져오기\r\nonMounted(() => {\r\n  const articleId = route.params.id;\r\n  fetchArticle(articleId);\r\n  fetchComments(articleId);\r\n  console.log('ooooooooo',article.value)\r\n});\r\n\r\n// 게시글 데이터 불러오기\r\nconst fetchArticle = (articleId) => {\r\n  axios\r\n    .get(`${store.API_URL}/api/v1/communities/${articleId}/`, {\r\n      headers: { Authorization: `Token ${store.token}` },\r\n    })\r\n    .then((response) => {\r\n      article.value = response.data;\r\n      isAuthor.value = response.data.user === store.Username;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"게시글 불러오기 실패:\", error);\r\n    });\r\n};\r\n\r\n// 댓글 목록 불러오기\r\nconst fetchComments = () => {\r\n  axios\r\n    .get(`${store.API_URL}/api/v1/communities/${route.params.id}/comments/list/`, {\r\n      headers: { Authorization: `Token ${store.token}` },\r\n    })\r\n    .then((res) => {\r\n      comments.value = res.data; // 댓글 목록 저장\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"댓글 불러오기 실패:\", err);\r\n    });\r\n};\r\n\r\n// 댓글 작성하기\r\nconst submitComment = () => {\r\n  if (!newComment.value.trim()) {\r\n    return; // 빈 댓글 방지\r\n  }\r\n\r\n  axios\r\n    .post(\r\n      `${store.API_URL}/api/v1/communities/${route.params.id}/comments/`,\r\n      { content: newComment.value },\r\n      { headers: { Authorization: `Token ${store.token}` } }\r\n    )\r\n    .then((res) => {\r\n      const { comment, comment_count } = res.data;\r\n\r\n      comments.value.push(comment);\r\n      article.value.comment_count = comment_count;\r\n\r\n      // store.articles에 최신 comment_count 반영\r\n      const index = store.articles.findIndex((a) => a.id === article.value.id);\r\n      if (index !== -1) {\r\n        store.articles[index].comment_count = comment_count;\r\n      }\r\n\r\n      newComment.value = \"\"; // 입력 필드 초기화\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"댓글 작성 실패:\", err);\r\n    });\r\n};\r\n\r\n// 댓글 수정 시작\r\nconst editComment = (comment) => {\r\n  editingComment.value = comment;\r\n  updatedCommentContent.value = comment.content;\r\n};\r\n\r\n// 댓글 수정 완료\r\nconst submitUpdatedComment = () => {\r\n  if (!updatedCommentContent.value.trim()) return;\r\n  axios\r\n    .put(\r\n      `${store.API_URL}/api/v1/communities/${route.params.id}/comments/${editingComment.value.id}/update/`,\r\n      { content: updatedCommentContent.value },\r\n      {\r\n        headers: { Authorization: `Token ${store.token}` },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      const index = comments.value.findIndex((c) => c.id === editingComment.value.id);\r\n      if (index !== -1) {\r\n        comments.value[index] = response.data;\r\n      }\r\n      editingComment.value = null;\r\n      updatedCommentContent.value = \"\";\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"댓글 수정 실패:\", error);\r\n    });\r\n};\r\n\r\n// 댓글 삭제\r\nconst removeComment = (commentId) => {\r\n  axios\r\n    .delete(\r\n      `${store.API_URL}/api/v1/communities/${route.params.id}/comments/${commentId}/delete/`,\r\n      {\r\n        headers: { Authorization: `Token ${store.token}` },\r\n      }\r\n    )\r\n    .then(() => {\r\n      comments.value = comments.value.filter((comment) => comment.id !== commentId);\r\n\r\n      article.value.comment_count = comments.value.length;\r\n\r\n      // store.articles에도 최신 comment_count 반영\r\n      const index = store.articles.findIndex((a) => a.id === article.value.id);\r\n      if (index !== -1) {\r\n        store.articles[index].comment_count = comments.value.length;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"댓글 삭제 실패:\", error);\r\n    });\r\n};\r\n\r\n// 댓글 수정 취소\r\nconst cancelEdit = () => {\r\n  editingComment.value = null;\r\n  updatedCommentContent.value = \"\";\r\n};\r\n\r\n// 게시글 삭제\r\nconst deleteArticle = () => {\r\n  axios\r\n    .delete(`${store.API_URL}/api/v1/communities/${article.value.id}/delete/`, {\r\n      headers: { Authorization: `Token ${store.token}` },\r\n    })\r\n    .then(() => {\r\n      alert(\"게시글이 삭제되었습니다.\");\r\n      router.push({ name: \"ArticleView\" }); // 전체 리뷰로 이동\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"게시글 삭제 실패:\", error);\r\n    });\r\n};\r\n\r\n// 뒤로가기\r\nconst goBack = () => {\r\n  router.push({ name: \"ArticleView\" });\r\n};\r\n\r\nconst goToEdit = () => {\r\n  router.push({ name: 'EditView', params: { id: article.value.id } });\r\n};\r\n\r\nconsole.log('aa',article)\r\n</script>\r\n\r\n<style scoped>\r\n/* 컨테이너 스타일 - 양쪽 마진 통일 */\r\n.container {\r\n  max-width: 1200px; /* 전체 페이지와 동일한 너비 */\r\n  margin: 0 auto; /* 가운데 정렬 */\r\n  padding: 0 20px; /* 좌우 여백 추가 */\r\n  background-color: #1f1f1f;\r\n}\r\n/* 전체 페이지 스타일 */\r\nbody {\r\n  background-color: #1c1c1c; /* 어두운 배경 */\r\n  color: #fff; /* 기본 텍스트 색상 */\r\n  font-family: 'Arial', sans-serif;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n/* 컨테이너 스타일 */\r\ndiv {\r\n  padding: 7.5px;\r\n}\r\n\r\n/* 뒤로가기 버튼 스타일 */\r\nbutton {\r\n  background-color: #ff9f43; /* 오렌지 색상 */\r\n  color: #fff;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n  margin-top: 20px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #ff6f3c; /* hover 시 더 어두운 오렌지 */\r\n}\r\n\r\n/* 제목 스타일 */\r\nh2 {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  color: #f1c40f; /* 노란색 */\r\n  text-align: center;\r\n}\r\n\r\n/* 작성자 정보 스타일 */\r\np {\r\n  margin-bottom: 1px;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\np span {\r\n  font-weight: bold;\r\n  color: #ff9f43; /* 오렌지 */\r\n}\r\n\r\n/* 영화 카드 스타일 */\r\n.movie-card {\r\n  display: flex;\r\n  gap: 15px;\r\n  background-color: #2c2c2c; /* 어두운 회색 배경 */\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.movie-card:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.poster-image {\r\n  width: 100px;\r\n  height: 150px;\r\n  border-radius: 8px;\r\n  object-fit: cover;\r\n}\r\n\r\n.movie-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  color: #fff;\r\n}\r\n\r\n.movie-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.movie-genres {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n}\r\n\r\n.genre {\r\n  background-color: #ff9f43;\r\n  padding: 2px 8px;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n}\r\n\r\n.movie-overview {\r\n  font-size: 14px;\r\n  color: #bbb;\r\n}\r\n\r\n.movie-rating {\r\n  font-weight: bold;\r\n  color: #f1c40f; /* 노란색 */\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.content-text {\r\n  margin-bottom: 70px;\r\n}\r\n\r\n/* 별점 컨테이너 */\r\n.rating-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0px; /* 별 사이 간격 */\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.stars {\r\n  display: flex;\r\n  gap: 0px;\r\n  margin: -5px\r\n}\r\n\r\n.star {\r\n  display: inline-block; /* 상속된 스타일 방지 */\r\n  width: 5px; /* 원하는 별 크기 */\r\n  height: 5px;\r\n  box-sizing: border-box; /* 크기 계산 오류 방지 */\r\n  background: url(\"@/assets/images/gray-star.png\") no-repeat center;\r\n  background-size:  18px 18px; /* 별 이미지를 강제로 컨테이너 크기에 맞춤 */\r\n}\r\n\r\n.star.filled {\r\n  background: url(\"@/assets/images/yellow-star.png\") no-repeat center;\r\n  background-size: 18px 18px;; /* 별 이미지를 강제로 컨테이너 크기에 맞춤 */\r\n}\r\n\r\n/* 좋아요 및 댓글 섹션 */\r\n.like-comment-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n  justify-content: center;\r\n}\r\n\r\n.like-button {\r\n  display: flex;\r\n  align-items: center;\r\n  border: none;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  margin-bottom : 38px;\r\n}\r\n\r\n.like-icon,\r\n.liked-icon {\r\n  font-size: 23px;\r\n  color: #ff6b6b;\r\n  vertical-align: middle; /* 수직 정렬을 중앙으로 */\r\n  margin-top: 20px; /* 아이콘을 살짝 아래로 내림 */\r\n}\r\n\r\n.like-count {\r\n  font-size: 16px;\r\n  color: #fff;\r\n}\r\n\r\n.comment-count {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.comment-section {\r\n  margin-top: -25px;\r\n}\r\n\r\n.comment-content-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n}\r\n\r\n.comment-card {\r\n  background-color: #2c2c2c;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  max-height: 100px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.comment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.comment-icon {\r\n  font-size: 24px;\r\n  color: #fff;\r\n  margin-right: 25px;\r\n}\r\n\r\n.comment-content {\r\n  font-size: 14px;\r\n  color: #ddd;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  flex-grow: 1;\r\n}\r\n\r\n.comment-count-value {\r\n  font-size: 16px;\r\n  color: #fff;\r\n}\r\n\r\n.rating-container span {\r\n  margin-right: 0px; /* 간격 강제 조정 */\r\n  line-height: 1; /* 텍스트 라인 높이 조정 */\r\n  display: inline-block; /* 텍스트가 중앙에 정렬되도록 설정 */\r\n}\r\n\r\n.no-comments {\r\n  color: #888;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.comment-input-container,\r\n.comment-edit-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 댓글 섹션 스타일 */\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  background-color: #333;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  resize: none;\r\n}\r\n\r\n\r\ntextarea:focus {\r\n  outline: none;\r\n  border-color: #ff9f43;\r\n}\r\n\r\n/* 댓글 목록 */\r\n.comment-list {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #2c2c2c;\r\n  border-radius: 5px;\r\n}\r\n\r\n.comment-list p {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.comment-list strong {\r\n  color: #ff9f43;\r\n}\r\n\r\n/* 댓글 작성 버튼 */\r\n.comment-list button {\r\n  background-color: #ff9f43;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  margin-left: 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.comment-list button:hover {\r\n  background-color: #ff6f3c;\r\n}\r\n\r\n/* 작성일과 수정일 위치 */\r\n.date-container {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-size: 12px;\r\n  color: #bbb;\r\n  margin-bottom: 10px;\r\n  border-bottom: 2px solid #ff9800;\r\n}\r\n\r\n/* 내용 스타일 */\r\n.content-container {\r\n  margin-top: 20px;\r\n  margin-bottom: 30px;\r\n  padding: 15px;\r\n  background-color: #fff; /* 어두운 회색 배경 */\r\n  border-radius: 8px;\r\n  color: #2c2c2c ;\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\ntextarea::placeholder {\r\n  color: #888;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #ff9f43;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #ff7a29;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: #555;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #777;\r\n}\r\n\r\n.edit-button,\r\n.delete-button {\r\n  background-color: transparent;\r\n  color: #ff9f43;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.edit-button:hover,\r\n.delete-button:hover {\r\n  color: #ff7a29;\r\n}\r\n\r\n/* 게시글 수정 및 삭제 버튼 스타일 */\r\n.article-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.edit-article-button,\r\n.delete-article-button {\r\n  background-color: #ff9f43;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.edit-article-button:hover,\r\n.delete-article-button:hover {\r\n  background-color: #ff6f3c;\r\n}\r\n.titlebottom {\r\n  justify-content: space-between;\r\n}\r\n\r\n.author-container {\r\n  display: flex; /* 요소들을 가로로 정렬 */\r\n  justify-content: space-between; /* 양 끝에 요소 배치 */\r\n  align-items: center; /* 세로로 가운데 정렬 */\r\n  width: 100%; /* 컨테이너의 너비를 부모에 맞춤 */\r\n  padding: 0.5rem 0; /* 위아래 여백 */\r\n  border-bottom: 2px solid #ff9800;\r\n}\r\n\r\n.author {\r\n  font-size: 1rem;\r\n  color: #fff;\r\n}\r\n\r\n.date-info {\r\n  display: flex;\r\n  gap: 1rem; /* 작성일과 수정일 사이 간격 */\r\n  font-size: 0.9rem;\r\n  color: #ccc;\r\n}\r\n</style>\r\n","import script from \"./DetailView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DetailView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DetailView.vue?vue&type=style&index=0&id=1d7978c2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1d7978c2\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"review-container\">\r\n    <h1 class=\"title\">리뷰 작성</h1>\r\n\r\n    <button @click=\"goBack\" class=\"cancel-btn\">리뷰 작성 취소</button>\r\n\r\n    <!-- '리뷰 작성할 영화 선택하기' 버튼 -->\r\n    <div class=\"select-movie-btn-container\">\r\n      <button @click=\"openMovieSelectModal\" class=\"select-movie-btn\">리뷰 작성할 영화 선택하기</button>\r\n    </div>\r\n\r\n    <!-- 영화 추가 모달 -->\r\n    <div v-if=\"showMovieModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>영화 검색</h2>\r\n        <input v-model=\"searchQuery\" @input=\"searchMovies\" placeholder=\"영화 제목 입력\" />\r\n        <ul>\r\n          <li v-for=\"movie in searchResults\" :key=\"movie.id\">\r\n            {{ movie.title }}\r\n            <button @click=\"selectMovie(movie)\">추가</button>\r\n          </li>\r\n        </ul>\r\n        <button @click=\"closeMovieModal\" class=\"close-modal-btn\">닫기</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 선택한 영화 포스터 및 타이틀 표시 -->\r\n    <div v-if=\"selectedMovie\" class=\"selected-movie\">\r\n      <h3>선택한 영화: {{ selectedMovie.title }}</h3>\r\n      <img :src=\"selectedMoviePoster\" alt=\"선택된 영화 포스터\" class=\"poster-image\" />\r\n    </div>\r\n\r\n    <!-- 별점 매기기 -->\r\n    <div class=\"stars\">\r\n      <div\r\n        v-for=\"n in 10\"\r\n        :key=\"n\"\r\n        class=\"star\"\r\n        :class=\"{ filled: n <= hoverRating || n <= selectedRating }\"\r\n        @mouseover=\"hoverStar(n)\"\r\n        @mouseleave=\"clearHover\"\r\n        @click=\"selectRating(n)\"\r\n      ></div>\r\n    </div>\r\n    <p class=\"rating-text\">선택한 별점: {{ selectedRating }} / 10</p>\r\n\r\n    <!-- 게시글 작성 폼 -->\r\n    <form @submit.prevent=\"createArticle\" class=\"form-container\">\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          v-model.trim=\"title\"\r\n          class=\"form-input styled-input\"\r\n          placeholder=\"제목을 입력하세요\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          v-model.trim=\"content\"\r\n          class=\"form-textarea styled-textarea\"\r\n          placeholder=\"내용을 입력하세요\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" class=\"submit-btn\">작성</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\n// 상태 정의\r\nconst title = ref(\"\");\r\nconst content = ref(\"\");\r\nconst searchQuery = ref(\"\");\r\nconst searchResults = ref([]);\r\nconst selectedMovie = ref(null); // 선택된 영화 객체\r\nconst selectedMoviePoster = ref(null); // 선택된 영화의 포스터 URL\r\nconst errorMessage = ref(\"\");\r\nconst showMovieModal = ref(false);\r\nconst hoverRating = ref(0);\r\nconst selectedRating = ref(0);\r\n\r\nconst store = useCounterStore();\r\nconst router = useRouter();\r\n\r\nconst goBack = () => {\r\n  router.go(-1);\r\n};\r\n\r\n// 모달 열기/닫기\r\nconst openMovieSelectModal = () => (showMovieModal.value = true);\r\nconst closeMovieModal = () => {\r\n  showMovieModal.value = false;\r\n  searchQuery.value = \"\";\r\n  searchResults.value = [];\r\n};\r\n\r\n// 영화 검색\r\nconst searchMovies = async () => {\r\n  if (!searchQuery.value.trim()) {\r\n    searchResults.value = [];\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await store.searchMovies(searchQuery.value.trim());\r\n    searchResults.value = response;\r\n  } catch (error) {\r\n    console.error(\"Error searching movies:\", error);\r\n    errorMessage.value = \"영화를 검색하는데 실패했습니다.\";\r\n  }\r\n};\r\n\r\n// 영화 선택\r\nconst selectMovie = (movie) => {\r\n  selectedMovie.value = movie; // 선택된 영화 객체 저장\r\n  selectedMoviePoster.value = `https://image.tmdb.org/t/p/w500${movie.poster_url}`; // 포스터 URL 저장\r\n  closeMovieModal();\r\n};\r\n\r\n// 별점 관련 함수\r\nconst hoverStar = (value) => (hoverRating.value = value);\r\nconst clearHover = () => (hoverRating.value = 0);\r\nconst selectRating = (rating) => (selectedRating.value = rating);\r\n\r\n// 게시글 작성\r\nconst isSubmitting = ref(false);\r\n\r\nconst createArticle = async () => {\r\n  if (isSubmitting.value) return; // 이미 요청 중이면 중지\r\n  isSubmitting.value = true;\r\n\r\n  if (!selectedMovie.value) {\r\n    alert(\"리뷰 작성할 영화를 선택해주세요.\");\r\n    isSubmitting.value = false;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const newArticle = await store.createArticle({\r\n      title: title.value,\r\n      content: content.value,\r\n      poster_url: selectedMoviePoster.value,\r\n      rating: selectedRating.value,\r\n      movie: selectedMovie.value.id,\r\n    });\r\n\r\n    // 작성된 리뷰를 프론트엔드의 상태에 추가\r\n    store.articles.unshift(newArticle);  // 최신순으로 추가\r\n    await store.fetchUserPoints(); // 사용자 정보를 다시 가져와 업데이트\r\n    alert(\"리뷰가 성공적으로 작성되었습니다.\");\r\n    router.push({ name: \"ArticleView\" });\r\n  } catch (error) {\r\n    console.error(\"Error creating article:\", error);\r\n    alert(\"리뷰 작성에 실패했습니다.\");\r\n  } finally {\r\n    isSubmitting.value = false; // 요청 완료 후 플래그 초기화\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.review-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #121212;\r\n  color: #fff;\r\n  border-radius: 8px;\r\n}\r\n/* 공통 스타일 */\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n/* 제목 입력 필드 스타일 */\r\n.styled-input {\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  background: #222; /* 어두운 배경 */\r\n  color: #fff;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.styled-input::placeholder {\r\n  color: #888; /* 플레이스홀더 색상 */\r\n  font-weight: normal;\r\n}\r\n\r\n/* 내용 입력 필드 스타일 */\r\n.styled-textarea {\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  background: #222; /* 어두운 배경 */\r\n  color: #fff;\r\n  min-height: 150px; /* 최소 높이 */\r\n  resize: vertical; /* 사용자가 높이 조정 가능 */\r\n  box-sizing: border-box;\r\n}\r\n\r\n.styled-textarea::placeholder {\r\n  color: #888; /* 플레이스홀더 색상 */\r\n  font-weight: normal;\r\n}\r\n\r\n/* 입력 필드 포커스 효과 */\r\n.styled-input:focus,\r\n.styled-textarea:focus {\r\n  outline: none;\r\n  border-color: #ff9800; /* 포커스 시 강조 색상 */\r\n  box-shadow: 0 0 5px rgba(255, 152, 0, 0.7); /* 포커스 시 외곽선 */\r\n}\r\n\r\n/* 작성 버튼 */\r\n.submit-btn {\r\n  background: #ff9800;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background: #e88e00;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.cancel-btn {\r\n  background: #ff4d4d;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.select-movie-btn-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.select-movie-btn {\r\n  background: #ff9800;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.6); /* 어두운 반투명 배경 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* 모달이 항상 위에 보이도록 설정 */\r\n}\r\n\r\n.modal-content {\r\n  background: #2b2b2b; /* 어두운 배경 */\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  color: #fff;\r\n  position: relative; /* 닫기 버튼 배치를 위한 설정 */\r\n  display: flex;\r\n  flex-direction: column; /* 내부 요소를 세로 정렬 */\r\n  gap: 15px; /* 요소 간격 */\r\n}\r\n.modal-content h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  color: #fff;\r\n  text-align: center;\r\n}\r\n\r\n.modal-content input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #555;\r\n  border-radius: 4px;\r\n  background: #1f1f1f; /* 입력 필드 배경 */\r\n  color: #fff;\r\n  font-size: 14px;\r\n}\r\n\r\n.modal-content input::placeholder {\r\n  color: #888;\r\n}\r\n\r\n.modal-content ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-height: 200px; /* 리스트의 최대 높이를 제한 */\r\n  overflow-y: auto; /* 스크롤이 필요한 경우 표시 */\r\n}\r\n\r\n.modal-content ul li {\r\n  display: flex;\r\n  justify-content: space-between; /* 추가 버튼과 영화 제목 간격 유지 */\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #444; /* 리스트 아이템 구분선 */\r\n  font-size: 16px;\r\n}\r\n\r\n.modal-content ul li:last-child {\r\n  border-bottom: none; /* 마지막 아이템의 테두리 제거 */\r\n}\r\n\r\n.modal-content ul li button {\r\n  background: #ff9800; /* 기본 버튼 색상 */\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px; /* 버튼 크기 축소 */\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-content ul li button:hover {\r\n  background: #e88e00; /* 호버 시 약간 어두운 색상 */\r\n}\r\n\r\n.close-modal-btn {\r\n  align-self: flex-end; /* 닫기 버튼을 오른쪽으로 정렬 */\r\n  background: #d32f2f; /* 닫기 버튼 색상 */\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.close-modal-btn:hover {\r\n  background: #b71c1c; /* 닫기 버튼 호버 색상 */\r\n}\r\n.selected-movie {\r\n  text-align: center;\r\n  margin: 20px 0;\r\n}\r\n\r\n.poster-image {\r\n  max-width: 200px;\r\n  height: auto;\r\n  display: block;\r\n  margin: 10px auto;\r\n  border-radius: 8px;\r\n}\r\n\r\n.stars {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.star {\r\n  width: 24px;\r\n  height: 24px;\r\n  background: url(\"@/assets/images/gray-star.png\") no-repeat center;\r\n  background-size: contain;\r\n  cursor: pointer;\r\n}\r\n\r\n.star.filled {\r\n  background: url(\"@/assets/images/yellow-star.png\") no-repeat center;\r\n  background-size: contain;\r\n}\r\n\r\n.rating-text {\r\n  text-align: center;\r\n}\r\n\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-label {\r\n  font-size: 16px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-input,\r\n.form-textarea {\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.submit-btn {\r\n  background: #ff9800;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./CreateView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CreateView.vue?vue&type=style&index=0&id=616fd16f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-616fd16f\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <h1 class=\"login-title\">회원가입</h1>\r\n      <form @submit.prevent=\"signUp\" class=\"login-form\">\r\n        <!-- 프로필 사진 업로드 -->\r\n        <div class=\"form-group profile-container\">\r\n          <div class=\"profile-details\">\r\n            <label for=\"profilePicture\" class=\"form-label\">프로필 사진</label>\r\n            <button type=\"button\" class=\"upload-button\" @click=\"triggerFileInput\">파일 선택</button>\r\n            <input type=\"file\" id=\"profilePicture\" ref=\"fileInput\" @change=\"onFileChange\" class=\"hidden-file-input\">\r\n          </div>\r\n          <div v-if=\"profilePreview\" class=\"form-preview\">\r\n            <img :src=\"profilePreview\" alt=\"Profile Preview\" class=\"profile-preview\" />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 기존 회원가입 필드 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"username\" class=\"form-label\">이름</label>\r\n          <input type=\"text\" id=\"username\" v-model.trim=\"username\" class=\"form-input\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password1\" class=\"form-label\">비밀번호</label>\r\n          <input type=\"password\" id=\"password1\" v-model.trim=\"password1\" class=\"form-input\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password2\" class=\"form-label\">비밀번호 확인</label>\r\n          <input type=\"password\" id=\"password2\" v-model.trim=\"password2\" class=\"form-input\">\r\n        </div>\r\n        <div class=\"form-group submit-group\">\r\n          <input type=\"submit\" value=\"Sign Up\" class=\"submit-button\">\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useCounterStore } from '@/stores/counter';\r\n\r\nconst username = ref('');\r\nconst password1 = ref('');\r\nconst password2 = ref('');\r\nconst profilePicture = ref(null);\r\nconst profilePreview = ref(null);\r\nconst fileInput = ref(null);\r\n\r\nconst store = useCounterStore();\r\n\r\nconst onFileChange = (event) => {\r\n  const file = event.target.files[0];\r\n  if (file) {\r\n    profilePicture.value = file;\r\n    profilePreview.value = URL.createObjectURL(file); // 미리보기 URL 생성\r\n  }\r\n};\r\nconst signUp = async () => {\r\n  const formData = new FormData();\r\n  formData.append('username', username.value);\r\n  formData.append('password1', password1.value);\r\n  formData.append('password2', password2.value);\r\n  if (profilePicture.value) {\r\n    formData.append('profile_picture', profilePicture.value);\r\n  }\r\n\r\n  console.log(\"DEBUG: FormData content:\");\r\n  for (let [key, value] of formData.entries()) {\r\n    console.log(`${key}:`, value);\r\n  }\r\n\r\n  try {\r\n    await store.signUp(formData); // 스토어에서 FormData 처리\r\n    alert('회원가입 성공!');\r\n  } catch (error) {\r\n    console.error('회원가입 실패:', error);\r\n    alert('회원가입 실패!');\r\n  }\r\n}\r\nconst triggerFileInput = () => {\r\n  fileInput.value.click(); // 숨겨진 파일 입력 창 트리거\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 컨테이너 스타일 */\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 80vh;\r\n  font-family: Arial, sans-serif;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 카드 스타일 */\r\n.login-card {\r\n  background: #fff;\r\n  padding: 2rem;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  width: 400px;\r\n  max-width: 90%;\r\n  height: auto;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* 제목 스타일 */\r\n.login-title {\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 2.5rem;\r\n}\r\n\r\n/* 폼 스타일 */\r\n.login-form {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n/* 프로필 컨테이너 스타일 */\r\n.profile-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 10px;\r\n}\r\n\r\n/* 프로필 세부사항 */\r\n.profile-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n/* 라벨 스타일 */\r\n.form-label {\r\n  font-weight: bold;\r\n  color: #555;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n/* 숨겨진 파일 입력 */\r\n.hidden-file-input {\r\n  display: none;\r\n}\r\n\r\n/* 업로드 버튼 스타일 */\r\n.upload-button {\r\n  background-color: #6c63ff;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: #4b47c8;\r\n}\r\n\r\n/* 미리보기 스타일 */\r\n.profile-preview {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n  border: 2px solid #4b47c857;\r\n  margin-right: 65px;\r\n}\r\n\r\n/* 폼 그룹 스타일 */\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* 인풋 스타일 */\r\n.form-input {\r\n  width: 100%;\r\n  padding: 0.7rem;\r\n  border: 1px solid #4b47c857;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 버튼 스타일 */\r\n.submit-group {\r\n  text-align: right;\r\n}\r\n\r\n.submit-button {\r\n  background: #6c63ff;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 0.7rem 1.5rem;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.submit-button:hover {\r\n  background: #4b47c8;\r\n}\r\n</style>\r\n","import script from \"./SignUpView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SignUpView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SignUpView.vue?vue&type=style&index=0&id=200a24f4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-200a24f4\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center tracking-in-expand-fwd my-4\">MOVIE MONSTER</h1>\r\n    <!-- 장르 선택 -->\r\n    <div class=\"genre-search-container\">\r\n    <GenreMovie @genre-selected=\"goToGenre\" />\r\n\r\n    <form @submit.prevent=\"searchMovie\" class=\"search-bar\">\r\n      <input type=\"search\" v-model=\"searchQuery\" pattern=\".*\\S.*\" required placeholder=\" 영화 제목 검색\" />\r\n      <button class=\"search-btn\" type=\"submit\">\r\n        <span>검색</span>\r\n      </button>\r\n    </form>\r\n    </div>\r\n    <p v-if=\"errorMessage\" class=\"text-danger\">{{ errorMessage }}</p>\r\n\r\n    <!-- 검색 결과 -->\r\n    <div v-if=\"searchResults.length > 0\" class=\"search-results\">\r\n      <h4>검색 결과</h4>\r\n      <div class=\"grid-container\">\r\n        <div\r\n          class=\"card\"\r\n          v-for=\"movie in searchResults\"\r\n          :key=\"movie.id\"\r\n          @click=\"goToDetail(movie.id)\"\r\n        >\r\n          <img\r\n            :src=\"getFullPosterUrl(movie.poster_url)\"\r\n            class=\"card-img-top\"\r\n            :alt=\"movie.title\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 검색 결과가 없을 때만 기존 섹션 표시 -->\r\n    <div v-else>\r\n      <!-- <p v-if=\"searchQuery\" class=\"text-center text-muted\">검색 결과가 없습니다.</p> -->\r\n\r\n      <!-- 인기/최신/개봉예정 섹션 -->\r\n      <div v-for=\"section in sections\" :key=\"section.name\" class=\"mt-5\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <h3 class=\"sectionpadd\">{{ section.title }}</h3>\r\n          <button class=\"btn-more\" @click=\"goToMore(section.name)\">\r\n            더보기 <span class=\"arrow\">&gt;</span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- 캐러셀 -->\r\n        <div class=\"carousel-wrapper\">\r\n          <button class=\"carousel-btn prev\" @click=\"prevSlide(section.name)\">\r\n            &lt;\r\n          </button>\r\n          <div class=\"carousel-track-container\">\r\n            <div\r\n              class=\"carousel-track\"\r\n              :style=\"{\r\n                transform: `translateX(-${currentIndex[section.name] * 100}%)`,\r\n              }\"\r\n            >\r\n              <div\r\n                class=\"carousel-slide\"\r\n                v-for=\"(chunk, index) in getChunks(section.movies, 5)\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"card\" v-for=\"movie in chunk\" :key=\"movie.movie_id\"\r\n                @click.stop=\"goToDetail(movie.movie_id)\">\r\n                  <img\r\n                    :src=\"getFullPosterUrl(movie.poster_url)\"\r\n                    class=\"card-img-top\"\r\n                    :alt=\"movie.title\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button class=\"carousel-btn next\" @click=\"nextSlide(section.name)\">\r\n            &gt;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport GenreMovie from \"@/components/GenreMovie.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: { GenreMovie },\r\n  setup() {\r\n    const router = useRouter();\r\n    const searchQuery = ref(\"\");\r\n    const errorMessage = ref(\"\");\r\n    const searchResults = ref([]);\r\n    const defaultPoster = \"http://127.0.0.1:8000/media/default_movies/default-movie.png\";\r\n    const sections = ref([\r\n      { name: \"popular\", title: \"인기영화\", movies: [] },\r\n      { name: \"recent\", title: \"최신영화\", movies: [] },\r\n      { name: \"upcoming\", title: \"개봉예정영화\", movies: [] },\r\n    ]);\r\n\r\n    const currentIndex = ref({\r\n      popular: 0,\r\n      recent: 0,\r\n      upcoming: 0,\r\n    });\r\n\r\n    const fetchMovies = async () => {\r\n      const endpoints = {\r\n        popular: \"/popular.json\",\r\n        recent: \"/recent.json\",\r\n        upcoming: \"/upcoming.json\",\r\n      };\r\n\r\n      for (const section of sections.value) {\r\n        try {\r\n          const response = await axios.get(endpoints[section.name]);\r\n          section.movies = response.data.map((item) => ({\r\n            movie_id: item.fields.movie_id,\r\n            title: item.fields.title,\r\n            poster_url: item.fields.poster_url,\r\n          }));\r\n        } catch (error) {\r\n          console.error(`Error fetching ${section.name}:`, error);\r\n        }\r\n      }\r\n    };\r\n\r\n    const getChunks = (movies, size) => {\r\n      const chunks = [];\r\n      for (let i = 0; i < movies.length; i += size) {\r\n        chunks.push(movies.slice(i, i + size));\r\n      }\r\n      return chunks;\r\n    };\r\n\r\n    const nextSlide = (sectionName) => {\r\n      const totalSlides = Math.ceil(\r\n        sections.value.find((s) => s.name === sectionName).movies.length / 5\r\n      );\r\n      if (currentIndex.value[sectionName] < totalSlides - 1) {\r\n        currentIndex.value[sectionName]++;\r\n      }\r\n    };\r\n\r\n    const prevSlide = (sectionName) => {\r\n      if (currentIndex.value[sectionName] > 0) {\r\n        currentIndex.value[sectionName]--;\r\n      }\r\n    };\r\n\r\n    const getMoviesInOrder = (movies, count) => {\r\n      return movies.slice(0, count);\r\n    };\r\n\r\n    const goToDetail = (movieId) => {\r\n      router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n    };\r\n\r\n    const goToMore = (section) => {\r\n      router.push({ name: \"MovieMore\", params: { section } });\r\n    };\r\n\r\n    const goToGenre = (genre) => {\r\n      if (genre === \"home\") {\r\n        router.push({ name: \"MovieView\" }).then(() => {\r\n          window.location.reload();\r\n        });\r\n      } else {\r\n        router.push({ name: \"GenreMovie\", params: { genre } });\r\n      }\r\n    };\r\n\r\n    const getFullPosterUrl = (posterUrl) =>\r\n      `https://image.tmdb.org/t/p/w500${posterUrl}`;\r\n\r\n    const searchMovie = async () => {\r\n      if (!searchQuery.value.trim()) {\r\n        searchResults.value = [];\r\n        errorMessage.value = \"영화 제목을 입력해 주세요.\";\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const processedQuery = searchQuery.value.replace(/\\s+/g, \"\");\r\n        const response = await axios.get(\r\n          \"http://127.0.0.1:8000/api/v1/movies/search/\",\r\n          {\r\n            params: { title: processedQuery },\r\n          }\r\n        );\r\n\r\n        searchResults.value = response.data.map((movie) => ({\r\n          id: movie.id,\r\n          title: movie.title,\r\n          poster_url: movie.poster_url,\r\n          description: movie.description,\r\n        }));\r\n        errorMessage.value = \"\";\r\n      } catch (error) {\r\n        errorMessage.value =\r\n          error.response?.data?.error || \"영화 검색에 실패했습니다.\";\r\n        searchResults.value = [];\r\n      }\r\n    };\r\n\r\n    onMounted(fetchMovies);\r\n    console.log('ssssssssssssssssss',searchResults)\r\n\r\n    return {\r\n      sections,\r\n      searchQuery,\r\n      errorMessage,\r\n      currentIndex,\r\n      getChunks,\r\n      nextSlide,\r\n      prevSlide,\r\n      goToDetail,\r\n      goToMore,\r\n      goToGenre,\r\n      getFullPosterUrl,\r\n      getMoviesInOrder,\r\n      searchMovie,\r\n      defaultPoster,\r\n      searchResults,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.text-center {\r\n  padding-top: 40px;\r\n  color: #39ffe5;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  animation: tracking-in-expand-fwd 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; /* 애니메이션 추가 */\r\n}\r\n@keyframes tracking-in-expand-fwd {\r\n  0% {\r\n    letter-spacing: -0.5em;\r\n    transform: translateZ(-700px);\r\n    opacity: 0;\r\n  }\r\n  40% {\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    transform: translateZ(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.container {\r\n  overflow: hidden; /* 넘치는 콘텐츠 숨김 */\r\n  width: 100%; /* 컨테이너 너비를 화면에 맞춤 */\r\n  padding: 0; /* 기본 패딩 제거 */\r\n}\r\n\r\n/* 장르 선택과 검색 컨테이너 */\r\n.genre-search-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px; /* 장르와 검색 사이 간격 */\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n.grid-container {\r\n  display: flex; /* Flexbox로 가로 배치 */\r\n  gap: 1rem; /* 카드 간의 간격 */\r\n  width: calc(240px * 5 + 1rem * 4); /* 카드 5개 크기 + 간격 4개 */\r\n  overflow: hidden; /* 넘치는 부분 숨김 */\r\n  flex-wrap: wrap; /* 카드들을 여러 줄로 배치 */\r\n}\r\n\r\n.card {\r\n  flex: 0 0 auto; /* 크기 고정 */\r\n  width: 240px; /* 카드 너비 */\r\n  height: 360px; /* 카드 높이 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  background-color: transparent; /* 카드 배경을 투명하게 설정 */\r\n}\r\n\r\n.card img {\r\n  width: 100%; /* 카드 크기에 맞춰 이미지 크기 */\r\n  height: 100%; /* 고정된 높이 맞춤 */\r\n  object-fit: cover; /* 이미지 비율 유지 */\r\n} \r\n\r\n.card:hover {\r\n  transform: scale(1.05); /* 호버 시 살짝 확대 */\r\n}\r\n\r\n\r\n.btn-more {\r\n  display: inline-flex;\r\n  align-items: center; /* 텍스트와 아이콘 정렬 */\r\n  color: #d9d9d9; /* 평소 텍스트 색상 */\r\n  font-size: 16px; /* 글자 크기 */\r\n  font-weight: 500; /* 적당한 두께 */\r\n  background: none; /* 배경 제거 */\r\n  border: none; /* 버튼 테두리 제거 */\r\n  cursor: pointer; /* 커서를 포인터로 변경 */\r\n  padding: 5px 10px; /* 버튼 안쪽 여백 */\r\n  text-decoration: none; /* 텍스트 장식 제거 */\r\n  transition: color 0.3s ease-in-out;\r\n}\r\n\r\n.btn-more .arrow {\r\n  margin-left: 5px; /* 텍스트와 화살표 간격 */\r\n  font-size: 18px; /* 화살표 크기 */\r\n  color: inherit; /* 부모의 텍스트 색상 상속 */\r\n}\r\n\r\n.carousel-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n\r\n.carousel-track-container {\r\n  overflow: hidden;\r\n  width: 100%;\r\n}\r\n\r\n.carousel-track {\r\n  display: flex;\r\n  transition: transform 0.5s ease-in-out; /* 부드러운 이동 효과 */\r\n  gap: 0; /* 각 슬라이드 사이의 간격 제거 */\r\n}\r\n\r\n.carousel-slide {\r\n  display: flex;\r\n  flex-shrink: 0; /* 크기 축소 방지 */\r\n  width: 100%; /* 슬라이드 하나의 너비를 컨테이너의 100%로 설정 */\r\n  justify-content: space-between; /* 내부 카드 간격 유지 */\r\n}\r\n\r\n.card {\r\n  width: 240px;\r\n  height: 360px;\r\n}\r\n\r\n.carousel-btn {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #39ffe5;\r\n  border: none;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding: 10px 15px;\r\n  z-index: 10;\r\n}\r\n\r\n.carousel-btn.prev {\r\n  left: 0;\r\n}\r\n\r\n.carousel-btn.next {\r\n  right: 0;\r\n}\r\n\r\n* {\r\n\tborder: 0;\r\n\tbox-sizing: border-box;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n:root {\r\n\tfont-size: calc(16px + (24 - 16)*(100vw - 320px)/(1920 - 320));\r\n}\r\nbody, button, input {\r\n\tfont: 1em Hind, sans-serif;\r\n\tline-height: 1.5em;\r\n}\r\nbody, input {\r\n\tcolor: #171717;\r\n}\r\nbody, .search-bar {\r\n\tdisplay: flex;\r\n}\r\nbody {\r\n\tbackground: #f1f1f1;\r\n\theight: 100vh;\r\n}\r\n\r\n\r\n\r\n.search-bar input {\r\n  background: #fff;\r\n  border-radius: 20px 0 0 20px;\r\n  border: 1px solid #ccc;\r\n  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.1);\r\n  padding: 0.75em;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\n.search-bar input:focus {\r\n  outline: none;\r\n  border-color: #3a3a3a;\r\n}\r\n\r\n.search-btn {\r\n  background: #171717;\r\n  border-radius: 0 20px 20px 0;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.search-btn:hover {\r\n  background-color: #3a3a3a;\r\n}\r\n\r\n.search-btn:before,\r\n.search-btn:after {\r\n  content: \"\";\r\n  display: block;\r\n  position: absolute;\r\n  opacity: 1; /* 항상 보이도록 설정 */\r\n  transition: all 0.25s ease;\r\n}\r\n\r\n/* 버튼 손잡이 - 흰색 */\r\n.search-btn:after {\r\n  background: #fff; \r\n  border-radius: 0 0.25em 0.25em 0;\r\n  top: 51%;\r\n  left: 51%;\r\n  width: 0.75em;\r\n  height: 0.25em;\r\n  transform: translate(0.2em, 0) rotate(45deg);\r\n  transform-origin: 0 50%;\r\n}\r\n\r\n.search-btn:after {\r\n  width: 8px;\r\n  height: 2px;\r\n  transform: rotate(45deg);\r\n  top: 18px;\r\n  left: 20px;\r\n}\r\n\r\n.search-btn span {\r\n  display: none; /* 텍스트 숨김 */\r\n}\r\n\r\n/* 호버 시 효과 */\r\n.search-bar input:focus + .search-btn:hover,\r\n.search-bar input:valid + .search-btn:hover {\r\n  background: #3a3a3a;\r\n}\r\n\r\n.search-bar input,\r\n.search-btn, \r\n.search-btn:before, \r\n.search-btn:after {\r\n\ttransition: all 0.25s ease-out;\r\n}\r\n.search-bar input,\r\n.search-btn {\r\n\twidth: 3em;\r\n\theight: 3em;\r\n}\r\n.search-bar input:invalid:not(:focus),\r\n.search-btn {\r\n\tcursor: pointer;\r\n}\r\n.search-bar input:focus,\r\n.search-bar input:valid  {\r\n\twidth: 100%;\r\n}\r\n.search-bar input:focus,\r\n.search-bar input:not(:focus) + .search-btn:focus {\r\n\toutline: transparent;\r\n}\r\n.search-bar {\r\n\tmargin: auto;\r\n\tpadding: 1.5em;\r\n\tjustify-content: flex-end;\r\n\t/*  60em; */\r\n  max-width: none;\r\n  width: 60em;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.search-bar input {\r\n\tbackground: transparent;\r\n\tborder-radius: 1.5em;\r\n\tbox-shadow: 0 0 0 0.4em #39ffe5 inset;\r\n\tpadding: 0.75em;\r\n\ttransform: translate(0.5em,0.5em) scale(0.5);\r\n\ttransform-origin: 100% 0;\r\n\t-webkit-appearance: none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.search-bar input::-webkit-search-decoration {\r\n\t-webkit-appearance: none;\r\n}\r\n.search-bar input:focus,\r\n.search-bar input:valid {\r\n\tbackground: #fff;\r\n\tborder-radius: 0.375em 0 0 0.375em;\r\n\tbox-shadow: 0 0 0 0.1em #d9d9d9 inset;\r\n\ttransform: scale(1);\r\n}\r\n.search-btn {\r\n\tbackground: #39ffe5; /* 흰색 손잡이 */\r\n\tborder-radius: 0 0.75em 0.75em 0 / 0 1.5em 1.5em 0;\r\n\tpadding: 0.75em;\r\n\tposition: relative;\r\n\ttransform: translate(0.25em,0.25em) rotate(45deg) scale(0.25,0.125);\r\n\ttransform-origin: 0 50%;\r\n}\r\n.search-btn:before, \r\n.search-btn:after {\r\n\tcontent: \"\";\r\n\tdisplay: block;\r\n\topacity: 0;\r\n\tposition: absolute;\r\n}\r\n.search-btn:before {\r\n\tborder-radius: 50%;\r\n\tbox-shadow: 0 0 0 0.2em #f1f1f1 inset;\r\n\ttop: 0.75em;\r\n\tleft: 0.75em;\r\n\twidth: 1.2em;\r\n\theight: 1.2em;\r\n}\r\n.search-btn:after {\r\n\tbackground: #f1f1f1;\r\n\tborder-radius: 0 0.25em 0.25em 0;\r\n\ttop: 51%;\r\n\tleft: 51%;\r\n\twidth: 0.75em;\r\n\theight: 0.25em;\r\n\ttransform: translate(0.2em,0) rotate(45deg);\r\n\ttransform-origin: 0 50%;\r\n}\r\n.search-btn span {\r\n\tdisplay: inline-block;\r\n\toverflow: hidden;\r\n\twidth: 1px;\r\n\theight: 1px;\r\n}\r\n\r\n/* Active state */\r\n.search-bar input:focus + .search-btn,\r\n.search-bar input:valid + .search-btn {\r\n\tbackground: #39ffe5af;\r\n\tborder-radius: 0 0.375em 0.375em 0;\r\n\ttransform: scale(1);\r\n}\r\n.search-bar input:focus + .search-btn:before, \r\n.search-bar input:focus + .search-btn:after,\r\n.search-bar input:valid + .search-btn:before, \r\n.search-bar input:valid + .search-btn:after {\r\n\topacity: 1;\r\n}\r\n.search-bar input:focus + .search-btn:hover,\r\n.search-bar input:valid + .search-btn:hover,\r\n.search-bar input:valid:not(:focus) + .search-btn:focus {\r\n\tbackground: #39ffe5d8;\r\n}\r\n.search-bar input:focus + .search-btn:active,\r\n.search-bar input:valid + .search-btn:active {\r\n\ttransform: translateY(1px);\r\n}\r\n\r\n@media screen and (prefers-color-scheme: dark) {\r\n\tbody, input {\r\n\t\tcolor: #f1f1f1;\r\n\t}\r\n\tbody {\r\n\t\tbackground: #171717;\r\n\t}\r\n\t.search-bar input {\r\n\t\tbox-shadow: 0 0 0 0.4em #f1f1f1 inset;\r\n\t}\r\n\t.search-bar input:focus,\r\n\t.search-bar input:valid {\r\n\t\tbackground: #39ffe5;\r\n\t\tbox-shadow: 0 0 0 0.1em #3d3d3d inset;\r\n\t}\r\n\t.search-btn {\r\n\t\tbackground: #f1f1f1;\r\n\t}\r\n}\r\n\r\n.sectionpadd {\r\n  padding-bottom: 10px;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"container\">\r\n    <!-- 장르 선택 섹션 -->\r\n    <div class=\"genre-select-container\">\r\n      <label for=\"genre-select\" class=\"genre-label\">장르</label>\r\n      <select\r\n        id=\"genre-select\"\r\n        class=\"genre-select\"\r\n        v-model=\"genre\"\r\n        @change=\"handleGenreChange\"\r\n      >\r\n        <option value=\"home\">영화 홈</option>\r\n        <option\r\n          v-for=\"genreItem in genres\"\r\n          :key=\"genreItem\"\r\n          :value=\"genreItem\"\r\n        >\r\n          {{ genreTranslations[genreItem] || genreItem }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 필터링된 영화 리스트 -->\r\n    <div v-if=\"genre && filteredMovies.length\" class=\"mt-4\">\r\n      <h2 class=\"genre-title\">\r\n        {{ genre === \"all\" ? \"전체 영화\" : `${genreTranslations[genre] || genre} 영화` }}\r\n      </h2>\r\n      <div class=\"grid-container\">\r\n        <div\r\n          class=\"card\"\r\n          v-for=\"movie in filteredMovies\"\r\n          :key=\"movie.movie_id\"\r\n          @click=\"goToDetail(movie.movie_id)\"\r\n        >\r\n          <img\r\n            :src=\"getFullPosterUrl(movie.poster_url)\"\r\n            class=\"card-img-top\"\r\n            :alt=\"movie.title\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 선택된 장르에 해당하는 영화가 없을 때 -->\r\n    <!-- <div v-else-if=\"genre\" class=\"mt-4 text-center\">\r\n      <h2>해당 장르에 맞는 영화가 없습니다.</h2>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, watch } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n\r\n    const genreTranslations = {\r\n      all: \"전체 영화\",\r\n      Action: \"액션\",\r\n      Thriller: \" 스릴러\",\r\n      Crime: \"범죄\",\r\n      Drama: \"드라마\",\r\n      Fantasy: \"판타지\",\r\n      Romance: \"로맨스\",\r\n      Animation: \"애니메이션\",\r\n      Adventure: \"모험\",\r\n      Family: \"가족\",\r\n      Comedy: \"코미디\",\r\n      History: \"역사\",\r\n      War: \"전쟁\",\r\n      \"Science Fiction\": \"SF\", // 문자열 키로 설정\r\n      Mystery: \"미스테리\",\r\n      Music: \"음악\",\r\n      Horror: \"공포\",\r\n      Western: \"서부\",\r\n      Documentary: \"다큐멘터리\"\r\n      // 필요한 추가 장르를 여기에 추가\r\n    };\r\n\r\n    const genres = ref([]); // 장르 리스트\r\n    const movies = ref([]); // 전체 영화 데이터\r\n    const filteredMovies = ref([]); // 필터링된 영화 리스트\r\n    const genre = ref(route.params.genre || \"home\"); // 현재 장르 (홈일 때 'home')\r\n\r\n    // 영화 데이터 가져오기\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await axios.get(\"/movie_data.json\");\r\n        movies.value = response.data.map((item) => ({\r\n          movie_id: item.fields.movie_id,\r\n          title: item.fields.title,\r\n          poster_url: item.fields.poster_url,\r\n          genres: item.fields.genres,\r\n        }));\r\n\r\n        // 장르 목록 설정\r\n        const genreSet = new Set();\r\n        movies.value.forEach((movie) => {\r\n          movie.genres.forEach((g) => genreSet.add(g));\r\n        });\r\n        genres.value = [\"all\", ...Array.from(genreSet)];\r\n\r\n        filterMovies(); // 초기 필터링\r\n      } catch (error) {\r\n        console.error(\"Error fetching movies:\", error);\r\n      }\r\n    };\r\n\r\n    // 장르에 따라 영화 필터링\r\n    const filterMovies = () => {\r\n      if (!genre.value || genre.value === \"home\") {\r\n        // 홈일 때 빈 배열\r\n        filteredMovies.value = [];\r\n      } else if (genre.value === \"all\") {\r\n        filteredMovies.value = movies.value; // 전체 영화\r\n      } else {\r\n        filteredMovies.value = movies.value.filter((movie) =>\r\n          movie.genres.includes(genre.value)\r\n        );\r\n      }\r\n    };\r\n\r\n    // 장르 변경 처리\r\n    const handleGenreChange = () => {\r\n      if (genre.value === \"home\") {\r\n        router.push({ name: \"MovieView\" });\r\n      } else {\r\n        router.push({ name: \"GenreMovie\", params: { genre: genre.value } });\r\n      }\r\n    };\r\n\r\n    // 영화 상세 페이지로 이동\r\n    const goToDetail = (movieId) => {\r\n      router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n    };\r\n\r\n    // 포스터 URL 생성\r\n    const getFullPosterUrl = (posterUrl) => {\r\n      const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n      return `${baseUrl}${posterUrl}`;\r\n    };\r\n\r\n    // URL 변경 시 필터링 업데이트\r\n    watch(route, (newRoute) => {\r\n      genre.value = newRoute.params.genre || \"home\";\r\n      filterMovies();\r\n    });\r\n\r\n    onMounted(fetchMovies);\r\n\r\n    return {\r\n      genres,\r\n      filteredMovies,\r\n      genre,\r\n      genreTranslations,\r\n      handleGenreChange,\r\n      goToDetail,\r\n      getFullPosterUrl,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin-top: 20px;\r\n  width: 100%; /* 전체 화면 너비 */\r\n  padding: 0; /* 기본 패딩 제거 */\r\n}\r\n\r\n/* 장르 선택 섹션 */\r\n.genre-select-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px; /* 라벨과 셀렉트 간 간격 */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.genre-label {\r\n  font-size: 28px;\r\n  /* font-weight: bold; */\r\n  color: #ffffff; /* 라벨 텍스트 색상 */\r\n}\r\n\r\n.genre-select {\r\n  width: 150px; /* 드롭다운 너비 */\r\n  padding: 8px;\r\n  border: 1px solid #1a1a1a; /* 테두리를 배경과 동일하게 설정 */\r\n  border-radius: 8px; /* 모서리 둥글게 */\r\n  background-color: #2a2a2a; /* 연한 검은색 배경 */\r\n  color: #ffffff; /* 텍스트 색상 */\r\n  font-size: 14px;\r\n  appearance: none; /* 기본 화살표 제거 */\r\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' viewBox='0 0 24 24'%3E%3Cpath fill='%23ffffff' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 10px center;\r\n  background-size: 14px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;\r\n}\r\n\r\n.genre-select:hover {\r\n  background-color: #3a3a3a; /* 드롭다운 호버 시 연한 검은색 */\r\n}\r\n\r\n.genre-select option {\r\n  background-color: #1a1a1a; /* 옵션 배경색 */\r\n  color: #ffffff; /* 옵션 텍스트 색상 */\r\n  border: none; /* 테두리 제거 */\r\n}\r\n\r\n.genre-select option:hover {\r\n  background-color: #3a3a3a;\r\n  color: #ffffff; /* 텍스트 유지 */\r\n}\r\n\r\n.genre-select:focus {\r\n  outline: none; /* 포커스 시 흰색 틀 제거 */\r\n  border-color: #3a3a3a; /* 포커스 테두리를 연한 검은색으로 */\r\n}\r\n\r\n.genre-title {\r\n  text-align: left;\r\n  /* margin-left: 10px; */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.grid-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  row-gap: 2rem; /* 위아래 간격 */\r\n  column-gap: 1.5rem; /* 좌우 간격 */\r\n  justify-content: start;\r\n}\r\n\r\n.card {\r\n  width: 240px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  transition: transform 0.2s ease-in-out;\r\n  background-color: transparent; /* 카드 배경을 투명하게 설정 */\r\n}\r\n\r\n.card:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.card-img-top {\r\n  width: 100%;\r\n  height: 360px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n","import { render } from \"./GenreMovie.vue?vue&type=template&id=4a8cf094&scoped=true\"\nimport script from \"./GenreMovie.vue?vue&type=script&lang=js\"\nexport * from \"./GenreMovie.vue?vue&type=script&lang=js\"\n\nimport \"./GenreMovie.vue?vue&type=style&index=0&id=4a8cf094&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a8cf094\"]])\n\nexport default __exports__","import { render } from \"./MovieView.vue?vue&type=template&id=3cc9ae46&scoped=true\"\nimport script from \"./MovieView.vue?vue&type=script&lang=js\"\nexport * from \"./MovieView.vue?vue&type=script&lang=js\"\n\nimport \"./MovieView.vue?vue&type=style&index=0&id=3cc9ae46&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3cc9ae46\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <!-- 섹션 제목과 뒤로가기 버튼 -->\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h2 class=\"text-center\">{{ sectionTitle }} 영화</h2>\r\n      <button class=\"btn-back\" @click=\"goBack\">\r\n        <span class=\"arrow\">&lt;</span> 뒤로가기\r\n      </button>\r\n      <!-- <button class=\"btn btn-secondary\" @click=\"goBack\">뒤로가기</button> -->\r\n    </div>\r\n\r\n    <!-- 영화 리스트 -->\r\n    <div class=\"grid-container\">\r\n      <div\r\n        class=\"card\"\r\n        v-for=\"movie in movies\"\r\n        :key=\"movie.movie_id\"\r\n        @click=\"goToDetail(movie.movie_id)\"\r\n      >\r\n        <img\r\n          :src=\"getFullPosterUrl(movie.poster_url)\"\r\n          class=\"card-img-top\"\r\n          :alt=\"movie.title\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const section = ref(route.params.section);\r\n    const movies = ref([]);\r\n\r\n    // 영화 데이터 가져오기\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const apiEndpoint =\r\n          section.value === \"popular\"\r\n            ? \"/popular.json\"\r\n            : section.value === \"recent\"\r\n            ? \"/recent.json\"\r\n            : \"/upcoming.json\";\r\n\r\n        const response = await axios.get(apiEndpoint);\r\n        movies.value = response.data.map((item) => ({\r\n          movie_id: item.fields.movie_id,\r\n          title: item.fields.title,\r\n          poster_url: item.fields.poster_url,\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching movies:\", error);\r\n      }\r\n    };\r\n\r\n    // 섹션 제목 계산\r\n    const sectionTitle = computed(() => {\r\n      return section.value === \"popular\"\r\n        ? \"인기\"\r\n        : section.value === \"recent\"\r\n        ? \"최신\"\r\n        : \"개봉예정\";\r\n    });\r\n\r\n    // 영화 디테일 페이지 이동\r\n    const goToDetail = (movieId) => {\r\n      router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n    };\r\n\r\n    // 영화 포스터 URL 생성\r\n    const getFullPosterUrl = (posterUrl) =>\r\n      `https://image.tmdb.org/t/p/w500${posterUrl}`;\r\n\r\n    // 뒤로가기 기능\r\n    const goBack = () => {\r\n      router.go(-1); // 이전 페이지로 이동\r\n    };\r\n\r\n    onMounted(fetchMovies);\r\n\r\n    return {\r\n      sectionTitle,\r\n      movies,\r\n      goToDetail,\r\n      getFullPosterUrl,\r\n      goBack, // 뒤로가기 메서드 반환\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%; /* 전체 화면 너비 */\r\n  padding: 0; /* 기본 패딩 제거 */\r\n  margin-top: 20px;\r\n}\r\n\r\n.grid-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  row-gap: 2rem; /* 위아래 간격 */\r\n  column-gap: 1.5rem; /* 좌우 간격 */\r\n  justify-content: start;\r\n}\r\n\r\n.card {\r\n  width: 240px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  transition: transform 0.2s ease-in-out;\r\n  background-color: transparent; /* 카드 배경을 투명하게 설정 */\r\n}\r\n\r\n.card:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.card-img-top {\r\n  width: 100%;\r\n  height: 360px;\r\n  object-fit: cover;\r\n}\r\n\r\n.btn-back {\r\n  display: inline-flex;\r\n  align-items: center; /* 텍스트와 아이콘 정렬 */\r\n  color: #e5e5e5; /* 기본 텍스트 색상 */\r\n  font-size: 16px; /* 글자 크기 */\r\n  font-weight: 500; /* 텍스트 두께 */\r\n  background: none; /* 배경 제거 */\r\n  border: none; /* 테두리 제거 */\r\n  cursor: pointer; /* 포인터 커서 */\r\n  padding: 5px 10px; /* 여백 */\r\n  text-decoration: none; /* 밑줄 제거 */\r\n  transition: color 0.3s ease-in-out; /* 호버 효과 */\r\n}\r\n\r\n.btn-back .arrow {\r\n  margin-right: 5px; /* 아이콘과 텍스트 간격 */\r\n  font-size: 18px; /* 화살표 크기 */\r\n  color: inherit; /* 부모 색상 상속 */\r\n}\r\n\r\n.btn-back:hover {\r\n  color: #ffffff; /* 호버 시 색상 변경 */\r\n}\r\n</style>\r\n","import { render } from \"./MovieMore.vue?vue&type=template&id=2d3c2b96&scoped=true\"\nimport script from \"./MovieMore.vue?vue&type=script&lang=js\"\nexport * from \"./MovieMore.vue?vue&type=script&lang=js\"\n\nimport \"./MovieMore.vue?vue&type=style&index=0&id=2d3c2b96&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2d3c2b96\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"modal-overlay\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">컬렉션 선택</h5>\r\n        <button class=\"btn-close\" @click=\"$emit('close')\">&times;</button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <!-- 컬렉션 리스트 -->\r\n        <ul class=\"category-list\">\r\n          <li\r\n            v-for=\"category in categories\"\r\n            :key=\"category.id\"\r\n            class=\"category-item\"\r\n          >\r\n            {{ category.name }}\r\n            <button\r\n              class=\"btn btn-add\"\r\n              @click=\"addMovieToCategory(category.id)\"\r\n            >\r\n              추가\r\n            </button>\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- 새 컬렉션 생성 -->\r\n        <div class=\"new-category\">\r\n          <input\r\n            v-model=\"newCategoryName\"\r\n            placeholder=\"새 컬렉션 이름을 입력하세요.\"\r\n            class=\"category-input\"\r\n          />\r\n          <button class=\"btn btn-create\" @click=\"createCategory\">\r\n            컬렉션 생성\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axiosInstance from \"@/axios\";\r\nimport {useCounterStore} from \"@/stores/counter.js\"\r\n\r\nexport default {\r\n  props: {\r\n    movieId: Number, // 영화 ID\r\n  },\r\n  setup(props) {\r\n    const categories = ref([]); // 컬렉션 목록\r\n    const newCategoryName = ref(\"\"); // 새 컬렉션 이름\r\n    const store = useCounterStore()\r\n    // 컬렉션 목록 가져오기\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(\r\n          \"http://127.0.0.1:8000/accounts/categories/\", {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        categories.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n        alert(\"컬렉션을 불러오는 데 실패했습니다.\");\r\n      }\r\n    };\r\n\r\n    // 새 컬렉션 생성\r\n    const createCategory = async () => {\r\n      if (!newCategoryName.value.trim()) {\r\n        alert(\"컬렉션 이름을 입력해주세요.\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axiosInstance.post(\r\n          \"http://127.0.0.1:8000/accounts/categories/create/\",\r\n          { name: newCategoryName.value },\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        categories.value.push(response.data);\r\n        newCategoryName.value = \"\"; // 입력 필드 초기화\r\n        alert(\"컬렉션이 생성되었습니다.\");\r\n      } catch (error) {\r\n        console.error(\"Error creating category:\", error.response || error.message);\r\n        alert(\r\n          \"컬렉션을 생성하는 데 실패했습니다: \" +\r\n            (error.response?.data?.detail || \"알 수 없는 오류\")\r\n        );\r\n      }\r\n    };\r\n\r\n    // 영화를 컬렉션에 추가\r\n    const addMovieToCategory = async (categoryId) => {\r\n      try {\r\n        await axiosInstance.post(\r\n          \"http://127.0.0.1:8000/accounts/categories/add-movie/\",\r\n          {\r\n            category_id: categoryId,\r\n            movie_id: props.movieId,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        alert(\"영화가 컬렉션에 추가되었습니다.\");\r\n      } catch (error) {\r\n        console.error(\"Error adding movie to category:\", error);\r\n        alert(\"영화를 추가하는 데 실패했습니다.\");\r\n      }\r\n    };\r\n\r\n    // 컴포넌트가 마운트되면 컬렉션 목록 가져오기\r\n    onMounted(fetchCategories);\r\n\r\n    return {\r\n      categories,\r\n      newCategoryName,\r\n      fetchCategories,\r\n      createCategory,\r\n      addMovieToCategory,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(1px); /* 배경 흐림 효과 */\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 25px;\r\n  border-radius: 15px;\r\n  width: 400px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4),\r\n              0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n/* 닫기 버튼 */\r\n.btn-close {\r\n  background: none;\r\n  border: none;\r\n  color: #ccc;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n}\r\n.btn-close:hover {\r\n  color: #fff;\r\n}\r\n\r\n/* 컬렉션 리스트 */\r\n.category-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.category-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  margin-bottom: 10px;\r\n  background: #292929;\r\n  border-radius: 8px;\r\n  color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.category-item:hover {\r\n  background: #353535;\r\n  transform: translateY(-2px);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n/* 추가 버튼 */\r\n.btn-add {\r\n  background: #39ffe585;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-add:hover {\r\n  background: #39ffe5c2;\r\n}\r\n\r\n/* 새 컬렉션 생성 섹션 */\r\n.new-category {\r\n  margin-top: 20px;\r\n}\r\n\r\n.category-input {\r\n  /* width: calc(100% - 100px); */\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #444;\r\n  background: #1f1f1f;\r\n  color: white;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-input::placeholder {\r\n  color: #666;\r\n}\r\n\r\n/* 생성 버튼 */\r\n.btn-create {\r\n  background: #39ffe585;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-create:hover {\r\n  background: #39ffe5c2;\r\n}\r\n</style>\r\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://127.0.0.1:8000/api/v1\", // Django API URL\r\n  timeout: 10000, // 요청 시간 초과\r\n  withCredentials: true, // 필요하면 사용 \r\n});\r\n\r\n// 요청 시 Authorization 헤더 추가\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\"); // localStorage에서 토큰 가져오기\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`; // 헤더에 토큰 추가\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default axiosInstance;\r\n","import { render } from \"./AddToCategoryModal.vue?vue&type=template&id=fd1829f4&scoped=true\"\nimport script from \"./AddToCategoryModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddToCategoryModal.vue?vue&type=script&lang=js\"\n\nimport \"./AddToCategoryModal.vue?vue&type=style&index=0&id=fd1829f4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fd1829f4\"]])\n\nexport default __exports__","<template>\r\n  <div\r\n    ref=\"modalRef\"\r\n    class=\"modal fade\"\r\n    id=\"youtubeTrailerModal\"\r\n    tabindex=\"-1\"\r\n    aria-labelledby=\"youtubeTrailerLabel\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content custom-modal-content\">\r\n        <div class=\"modal-header custom-modal-header\">\r\n          <h5 class=\"modal-title custom-modal-title\" id=\"youtubeTrailerLabel\">\r\n            {{ movieTitle }} 공식 예고편\r\n          </h5>\r\n          <!-- 닫기 버튼 -->\r\n          <button\r\n            type=\"button\" \r\n            class=\"btn-close custom-close-btn\"\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            @click=\"stopVideo\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body custom-modal-body\">\r\n          <div v-if=\"isLoading\" class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <iframe\r\n            v-else-if=\"videoData\"\r\n            class=\"trailer-iframe\"\r\n            :src=\"videoData\"\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n          ></iframe>\r\n          <div v-else>\r\n            <p>해당 영화의 예고편을 찾을 수 없습니다.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst props = defineProps({\r\n  movieTitle: String,\r\n});\r\n\r\nconst videoData = ref(\"\");\r\nconst isLoading = ref(false);\r\nconst modalRef = ref(null);\r\nconst youtubeKey = import.meta.env.VITE_YOUTUBE_API_KEY; // API 키\r\n\r\nconst stopVideo = () => {\r\n  videoData.value = \"\"; // 비디오 정지\r\n};\r\n\r\n// 트레일러 로드 함수\r\nconst fetchTrailer = async () => {\r\n  isLoading.value = true;\r\n  try {\r\n    const response = await axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\r\n      params: {\r\n        key: youtubeKey,\r\n        part: \"snippet\",\r\n        type: \"video\",\r\n        q: `${props.movieTitle} 예고편 OR trailer`,\r\n        maxResults: 1,\r\n      },\r\n    });\r\n\r\n    const videoId = response.data.items[0]?.id?.videoId || null;\r\n    if (videoId) {\r\n      videoData.value = `https://www.youtube.com/embed/${videoId}?autoplay=1&mute=1`;\r\n    } else {\r\n      videoData.value = null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"YouTube API 호출 에러:\", error);\r\n    videoData.value = null;\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\n// 포커스 관리\r\nonMounted(() => {\r\n  if (modalRef.value) {\r\n    modalRef.value.addEventListener(\"show.bs.modal\", fetchTrailer);\r\n    modalRef.value.addEventListener(\"hidden.bs.modal\", stopVideo);\r\n  }\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  if (modalRef.value) {\r\n    modalRef.value.removeEventListener(\"show.bs.modal\", fetchTrailer);\r\n    modalRef.value.removeEventListener(\"hidden.bs.modal\", stopVideo);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 모달 창 스타일 */\r\n.custom-modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c); /* 배경색 변경 */\r\n  border-radius: 10px;\r\n  color: white; /* 텍스트 색상 */\r\n  padding: 15px;\r\n}\r\n\r\n.custom-modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n/* 닫기 버튼 스타일 */\r\n.custom-close-btn {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 2rem; /* 닫기 버튼 크기 */\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.custom-close-btn:hover {\r\n  color: #fff; /* 마우스 호버 시 닫기 버튼 색상 */\r\n}\r\n\r\n.custom-modal-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.custom-modal-body {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n/* YouTube 트레일러 화면 크기 조정 */\r\n.trailer-iframe {\r\n  width: 100%;\r\n  height: 550px; /* 기존보다 높이를 증가시킴 */\r\n  display: block;\r\n  border-radius: 8px; /* 화면 모서리를 약간 둥글게 */\r\n  margin: 0 auto;\r\n}\r\n\r\n/* 로딩 스피너 */\r\n.spinner-border {\r\n  margin: 50px auto;\r\n}\r\n\r\n/* 모달 그림자 추가 */\r\n.modal-content {\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);\r\n}\r\n</style>\r\n","import script from \"./YoutubeTrailerModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./YoutubeTrailerModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./YoutubeTrailerModal.vue?vue&type=style&index=0&id=21ea90c9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21ea90c9\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"movie-background\"></div> <!-- 배경포스터 -->\r\n  <div class=\"container movie-detail\">\r\n    <div class=\"row\">\r\n      <!-- 좌측: 포스터 섹션 -->\r\n      <div class=\"col-md-4 text-center\">\r\n        <img\r\n          :src=\"getFullPosterUrl(movie.poster_url)\"\r\n          class=\"img-fluid rounded shadow\"\r\n          :alt=\"movie.title\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 우측: 상세 정보 섹션 -->\r\n      <div class=\"col-md-8\">\r\n        <h1 class=\"mb-3\">{{ movie.title }}</h1>\r\n        <p><strong>개봉일:</strong> {{ movie.release_date }}</p>\r\n        <p><strong>평점:</strong> {{ movie.vote_avg }}</p>\r\n        <p><strong>줄거리:</strong> {{ movie.description }}</p>\r\n        <p><strong>장르:</strong> {{ movie.genres?.join(\", \") }}</p>\r\n        <p><strong>배우:</strong> {{ movie.actors?.join(\", \") }}</p>\r\n        <p><strong>감독:</strong> {{ movie.director }}</p>\r\n        <!-- 컬렉션 추가 버튼 -->\r\n        <div class=\"button-container d-flex align-items-center\">\r\n          <a href=\"#\" @click.prevent=\"showCategoryModal = true\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            컬렉션 추가\r\n          </a>\r\n        \r\n        <button\r\n            type=\"button\"\r\n            class=\"btn youtube-btn\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#youtubeTrailerModal\"\r\n          >\r\n        <img :src=\"youtubeLogo\" alt=\"YouTube\" class=\"youtube-logo\" />\r\n        <!-- YouTube 섹션 -->\r\n        <!-- <div class=\"movie-youtube mt-4 text-center\"> -->\r\n          \r\n            \r\n          </button>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    \r\n    <!-- 컬렉션 추가 모달 -->\r\n    <AddToCategoryModal\r\n      v-if=\"showCategoryModal\"\r\n      :movie-id=\"movie.id\"\r\n      @close=\"showCategoryModal = false\"\r\n    />\r\n    <YoutubeTrailerModal :movieTitle=\"movie.title\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from \"vue\";\r\nimport { useRoute } from \"vue-router\";\r\nimport axios from \"axios\"; \r\nimport AddToCategoryModal from \"@/components/AddToCategoryModal.vue\";\r\nimport youtubeLogo from \"@/assets/youtubeLogo.svg\";\r\nimport YoutubeTrailerModal from \"@/components/YoutubeTrailerModal.vue\";\r\n\r\nconst route = useRoute();\r\n\r\nconst movie = ref({}); // 영화 데이터를 저장할 객체\r\nconst showCategoryModal = ref(false); // 컬렉션 모달 상태\r\n\r\n// TMDB 이미지 URL 생성\r\nconst getFullPosterUrl = (posterUrl) => {\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n  return `${baseUrl}${posterUrl}`;\r\n};\r\n\r\n// 영화 데이터 가져오기\r\nconst fetchMovie = async () => {\r\n  const movieId = route.params.id; // 라우터에서 영화 ID 가져오기\r\n  try {\r\n    const response = await axios.get(\r\n      `http://127.0.0.1:8000/api/v1/movies/${movieId}/`\r\n    );\r\n    movie.value = response.data; // 응답 데이터 저장\r\n\r\n    // 배경 이미지 동적으로 설정\r\n    const backdropUrl = `https://image.tmdb.org/t/p/original${movie.value.backdrop_url}`;\r\n    const backgroundElement = document.querySelector(\".movie-background\");\r\n    if (backgroundElement) {\r\n      backgroundElement.style.backgroundImage = `url('${backdropUrl}')`;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error loading movie:\", error);\r\n  }\r\n};\r\n\r\n// 컴포넌트 마운트 시 영화 데이터 로드\r\nonMounted(fetchMovie);\r\n</script>\r\n\r\n<style scoped>\r\n/* 배경포스터 스타일 */\r\n.movie-background {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-color: #000; /* 배경 이미지가 없을 경우 대비 */\r\n  z-index: -2; /* app.vue의 배경색 위에 표시 */\r\n}\r\n\r\n/* 메인 컨테이너 */\r\n.container {\r\n  margin-top: 40px;\r\n  padding: 20px;\r\n  background-color: rgba(0, 0, 0, 0.842); /* 반투명 검은색 배경 */\r\n  border-radius: 8px;\r\n  color: white;\r\n  max-width: 1200px;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.movie-detail {\r\n  padding: 40px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.row {\r\n  align-items: center;\r\n}\r\n\r\n.img-fluid {\r\n  max-height: 500px; /* 포스터 최대 높이 */\r\n  object-fit: cover;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.col-md-4 {\r\n  margin-bottom: 20px; /* 작은 화면에서 좌측과 우측 간격 */\r\n}\r\n\r\nh1 {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\np {\r\n  font-size: 1rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px; /* 버튼 사이 간격 */\r\n}\r\n\r\n.youtube-logo {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.youtube-btn {\r\n  background: none; /* 버튼 배경 없애기 */\r\n  border: none; /* 버튼 테두리 없애기 */\r\n  margin-top: 20px;\r\n  padding: 0;\r\n  cursor: pointer;\r\n}\r\n\r\n.movie-youtube {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.category-button {\r\n  margin-top: 23px; /* Adjust this value as needed to align with the YouTube logo */\r\n}\r\n\r\n/* 네온 버튼 스타일 */\r\na {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 20px 0; /* 여백 조정 */\r\n  color: #e02ff0;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\na:hover {\r\n  background: #e02ff0;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #e02ff0, 0 0 25px #e02ff0, 0 0 50px #e02ff0,\r\n    0 0 200px #e02ff0;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\na span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\na span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #e02ff0);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #e02ff0);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #e02ff0);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #e02ff0);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./MovieDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MovieDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MovieDetail.vue?vue&type=style&index=0&id=5b84e6ee&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5b84e6ee\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center tracking-in-expand-fwd my-4\">MOVIE MONSTER GAME</h1>\r\n\r\n    <div class=\"game-list\">\r\n      <!-- 한국영화 명대사 -->\r\n      <div\r\n        class=\"game-card\"\r\n        :class=\"{ disabled: isDisabled('KoreaQuotesView') }\"\r\n        @click=\"handleGameClick('KoreaQuotesView', '한국영화 명대사')\"\r\n      >\r\n        <img\r\n          src=\"@/assets/koreansumnail.jpg\"\r\n          alt=\"한국영화 명대사\"\r\n          class=\"thumbnail\"\r\n        />\r\n        <div class=\"badge difficulty-badge\">쉬움</div>\r\n        <div class=\"game-info\">\r\n          <h2>한국영화 명대사</h2>\r\n          <p>느그 서장 남천동 살제?</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 해외영화 명대사 -->\r\n      <div\r\n        class=\"game-card\"\r\n        :class=\"{ disabled: isDisabled('ForeignQuotesView') }\"\r\n        @click=\"handleGameClick('ForeignQuotesView', '해외영화 명대사')\"\r\n      >\r\n        <img\r\n          src=\"@/assets/foreignsumbnail.jpg\"\r\n          alt=\"해외영화 명대사\"\r\n          class=\"thumbnail\"\r\n        />\r\n        <div class=\"badge difficulty-badge medium\">중간</div>\r\n        <div class=\"game-info\">\r\n          <h2>해외영화 명대사</h2>\r\n          <p>Good afternoon, good evening,<br/> and good night!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 이동진의 한줄평 -->\r\n      <div\r\n        class=\"game-card\"\r\n        :class=\"{ disabled: isDisabled('OneLineView') }\"\r\n        @click=\"handleGameClick('OneLineView', '이동진의 한줄평')\"\r\n      >\r\n        <img\r\n          src=\"@/assets/leedongjin.jpg\"\r\n          alt=\"이동진의 한줄평\"\r\n          class=\"thumbnail\"\r\n        />\r\n        <div class=\"badge difficulty-badge hard\">어려움</div>\r\n        <div class=\"game-info\">\r\n          <h2>이동진의 한줄평</h2>\r\n          <p>안녕하세요. 평론계의 아이돌입니다.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 모달 -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n  <div class=\"modal-content\">\r\n    <p>{{ modalMessage }}</p>\r\n    <div class=\"modal-actions\">\r\n      <button class=\"btn-cancel\" @click=\"closeModal\">닫기</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"GameView\",\r\n  data() {\r\n    return {\r\n      cooldownTime: 8 * 60 * 60 * 1000, // 8시간 제한 시간\r\n      // cooldownTime: 2 * 60 * 1000, // 테스트용 시간조절(2분)\r\n      showModal: false,\r\n      modalMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    handleGameClick(gameKey, gameName) {\r\n      const lastPlayed = localStorage.getItem(gameKey);\r\n      const now = Date.now();\r\n\r\n      if (lastPlayed && now - lastPlayed < this.cooldownTime) {\r\n        const remainingTime = this.cooldownTime - (now - lastPlayed);\r\n        const hours = Math.floor(remainingTime / (1000 * 60 * 60));\r\n        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\r\n        this.modalMessage = `${gameName}은(는) ${hours}시간 ${minutes}분 후에 다시 이용할 수 있습니다.`;\r\n        this.showModal = true; // 모달 열기\r\n      } else {\r\n        this.$router.push({ name: gameKey }); // 게임 페이지로 이동\r\n      }\r\n    },\r\n    isDisabled(gameKey) {\r\n      const lastPlayed = localStorage.getItem(gameKey);\r\n      const now = Date.now();\r\n      return lastPlayed && now - lastPlayed < this.cooldownTime;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin-top: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.text-center {\r\n  color: #4caf50;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  animation: tracking-in-expand-fwd 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; /* 애니메이션 추가 */\r\n}\r\n\r\n@keyframes tracking-in-expand-fwd {\r\n  0% {\r\n    letter-spacing: -0.5em;\r\n    transform: translateZ(-700px);\r\n    opacity: 0;\r\n  }\r\n  40% {\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    transform: translateZ(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.game-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* 그리드 레이아웃 */\r\n  gap: 25px;\r\n  width: 100%;\r\n  margin: 10px;\r\n  padding: 20px;\r\n}\r\n\r\n.game-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative; /* 레이블 배치를 위해 */\r\n  text-align: center;\r\n  padding: 15px;\r\n  border-radius: 15px;\r\n  background: linear-gradient(145deg, #ffffff, #e6e6e6);\r\n  transition: all 0.3s ease-in-out;\r\n  animation: fadeIn 0.5s ease-in-out; /* 등장 애니메이션 */\r\n  height: 500px; /* 세로 길이를 기존보다 늘림 */\r\n  border: 2px solid #4caf50; /* 네온 효과 색상 */\r\n  box-shadow: 0 0 10px #4caf50, 0 0 20px #4caf50; /* 네온 효과 추가 */\r\n}\r\n\r\n.game-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 0 15px #4caf50, 0 0 30px #4caf50; /* 호버 시 네온 효과 강화 */\r\n}\r\n\r\n.game-card.disabled {\r\n  background-color: #777777;\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n\r\n.thumbnail {\r\n  width: 100%;\r\n  max-height: 210px;\r\n  margin-top: 50px;\r\n  border-radius: 15px;\r\n  object-fit: cover;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.thumbnail:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.difficulty-badge {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  background: #4caf50;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  font-size: 0.9rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.difficulty-badge.medium {\r\n  background: #ff9800; /* 중간 레이블 색상 */\r\n}\r\n\r\n.difficulty-badge.hard {\r\n  background: #f44336; /* 어려움 레이블 색상 */\r\n}\r\n\r\n.game-info {\r\n  color: #222222;\r\n}\r\n\r\n.game-info h2 {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  margin-top: 50px;\r\n}\r\n\r\n.game-info p {\r\n  margin-top: 20px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(2px);\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  width: 500px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n/* 닫기 버튼 컨테이너 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: center; /* 버튼 중앙 정렬 */\r\n  margin-top: 20px; /* 버튼 상단 여백 */\r\n}\r\n\r\n/* 닫기 버튼 */\r\n.btn-cancel {\r\n  align-items: center;\r\n  background: #c0392b;\r\n  border: none;\r\n  width: 100px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background: #e74c3c;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./GameView.vue?vue&type=template&id=6cbb056f&scoped=true\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=6cbb056f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6cbb056f\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center-title my-4\">이동진의 한줄평</h1>\r\n\r\n    <div v-if=\"gameOver\" class=\"text-center\">\r\n      <h2>게임 종료!</h2>\r\n      <p>모든 문제를 완료하였습니다.</p>\r\n      <p>정답 수: {{ correctCount }} / {{ totalQuestions }}</p>\r\n      <p>획득 가능한 포인트 : {{ 10 * correctCount }}</p>\r\n\r\n      <!-- 포인트 획득하기 버튼 -->\r\n      <a\r\n        class=\"mt-3 add_point\"\r\n        href=\"#\"\r\n        @click.prevent=\"openConfirmModal('claim')\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#confirmModal\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        포인트 획득하기\r\n      </a>\r\n\r\n\r\n      <!-- 게임 재시작 버튼 -->\r\n      <a\r\n        class=\"mt-3 replay\"\r\n        href=\"#\"\r\n        @click.prevent=\"restartGame\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        다시 시작하기\r\n      </a>\r\n\r\n      <!-- 랭크 확인하기 버튼 -->\r\n      <a\r\n        class=\"mt-3 confirm_rank\"\r\n        href=\"#\"\r\n        @click.prevent=\"openConfirmModal('rank')\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#confirmModal\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        랭크 확인하기\r\n      </a>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <!-- 문제 번호 표시 -->\r\n      <p class=\"text-center\">문제 {{ currentQuestionIndex + 1 }} / {{ totalQuestions }}</p>\r\n\r\n      <!-- 랜덤 대사 출력 -->\r\n      <div v-if=\"!showResult && currentReview\" class=\"review-container text-center\">\r\n        <div id=\"typing-box\">\r\n          <span class=\"typing-text\"></span><span class=\"blink\">|</span>\r\n        </div>\r\n        <!-- 정답 입력 -->\r\n        <div class=\"input-container\">\r\n          <input\r\n            v-model=\"userAnswer\"\r\n            class=\"form-control input-field\"\r\n            type=\"text\"\r\n            placeholder=\"정답(영화 제목)을 입력하세요\"\r\n            @keyup.enter=\"checkAnswer\"\r\n          />\r\n          <button class=\"btn btn-success submit-btn\" @click=\"checkAnswer\">></button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 결과 출력 -->\r\n      <div v-if=\"showResult && currentReview\" class=\"result-container text-center mt-4\">\r\n        <h5 v-if=\"isCorrect\" class=\"text-success\">정답입니다! 🎉</h5>\r\n        <h5 v-else class=\"text-danger\">\r\n          틀렸습니다. 정답은 \"{{ currentReview?.title[0] }}\" 입니다. ❌\r\n        </h5>\r\n        <img\r\n          :src=\"getPosterUrl(currentReview?.id)\"\r\n          class=\"img-fluid poster\"\r\n          alt=\"영화 포스터\"\r\n        />\r\n        <button class=\"btn btn-secondary next-btn\" @click=\"nextReview\">></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <p class=\"modal-title\">포인트 획득하기</p>\r\n          <button class=\"btn-close\" @click=\"closeModal\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>{{ modalMessage }}</p>\r\n          <p>포인트를 획득하시면 8시간에 재도전 가능합니다!</p>\r\n          <div class=\"modal-actions\">\r\n            <button class=\"btn btn-create\" @click=\"handleModalConfirm\">확인</button>\r\n            <button class=\"btn btn-cancel\" @click=\"closeModal\">취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst COOLDOWN_KEY = \"OneLineView\"; // 고유 키 설정\r\n\r\nimport { ref, onMounted, nextTick } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const reviews = ref([]);\r\n    const selectedReviews = ref([]);\r\n    const currentReview = ref({});\r\n    const currentQuestionIndex = ref(0);\r\n    const totalQuestions = ref(5);\r\n    const userAnswer = ref(\"\");\r\n    const isCorrect = ref(false);\r\n    const showResult = ref(false);\r\n    const gameOver = ref(false);\r\n    const correctCount = ref(0);\r\n\r\n        // 모달 관련 데이터와 메서드\r\n    const showModal = ref(false); // 모달 표시 여부\r\n    const modalMessage = ref(\"\"); // 모달 메시지\r\n    const modalAction = ref(\"\"); // 모달에서 수행할 액션\r\n\r\n    const router = useRouter();\r\n    const store = useCounterStore();\r\n\r\n    const setCooldown = () => {\r\n      localStorage.setItem(COOLDOWN_KEY, Date.now());\r\n    };\r\n\r\n    const openConfirmModal = (action) => {\r\n      modalAction.value = action;\r\n      modalMessage.value = `${10 * correctCount.value}p를 획득 하시겠어요?`;\r\n      showModal.value = true; // 모달 열기\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false; // 모달 닫기\r\n    };\r\n\r\n    const handleModalConfirm = async () => {\r\n      if (modalAction.value === \"claim\") {\r\n        await claimPoints();\r\n        setCooldown();\r\n      } else if (modalAction.value === \"rank\") {\r\n        await goToRank();\r\n        setCooldown();\r\n      }\r\n      closeModal();\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n      modalMessage.value = \"\";\r\n    };\r\n\r\n    const claimPoints = async () => {\r\n      if (correctCount.value > 0) {\r\n        await updatePoints(correctCount.value * 10);\r\n      }\r\n      await store.fetchUserPoints();\r\n      router.push({ name: \"GameView\" });\r\n    };\r\n\r\n    const goToRank = async () => {\r\n      if (correctCount.value > 0) {\r\n        await updatePoints(correctCount.value * 10);\r\n      }\r\n      await store.fetchUserPoints();\r\n      router.push({ name: \"RankView\" });\r\n    };\r\n\r\n    const updatePoints = async (points) => {\r\n      try {\r\n        await axios.post(\r\n          `${store.API_URL}/accounts/user/points/`,\r\n          { points },\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        store.points += points;\r\n      } catch (error) {\r\n        console.error(\"Error updating points:\", error);\r\n      }\r\n    };\r\n\r\n    const restartGame = () => {\r\n      currentQuestionIndex.value = 0;\r\n      correctCount.value = 0;\r\n      gameOver.value = false;\r\n      userAnswer.value = \"\";\r\n      showResult.value = false;\r\n      isCorrect.value = false;\r\n\r\n      // 문제 초기화\r\n      selectRandomReviews();\r\n      currentReview.value = selectedReviews.value[currentQuestionIndex.value];\r\n\r\n      // 타이핑 효과 초기화\r\n      nextTick(() => {\r\n        startTypingEffect(currentReview.value.review, \".typing-text\");\r\n      });\r\n    };\r\n\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(\"/one_line_review2.json\");\r\n        reviews.value = response.data;\r\n        selectRandomReviews();\r\n        currentReview.value = selectedReviews.value[currentQuestionIndex.value];\r\n        await nextTick();\r\n        startTypingEffect(currentReview.value.review);\r\n      } catch (error) {\r\n        console.error(\"Error loading reviews:\", error);\r\n      }\r\n    };\r\n\r\n    const selectRandomReviews = () => {\r\n      const shuffled = reviews.value.sort(() => 0.5 - Math.random());\r\n      selectedReviews.value = shuffled.slice(0, totalQuestions.value);\r\n    };\r\n\r\n    const checkAnswer = () => {\r\n      if (userAnswer.value.trim() === \"\") return;\r\n      isCorrect.value = currentReview.value.title.some(\r\n        (correctTitle) =>\r\n          userAnswer.value.trim().toLowerCase() === correctTitle.toLowerCase()\r\n      );\r\n      if (isCorrect.value) {\r\n        correctCount.value += 1;\r\n      }\r\n      showResult.value = true;\r\n    };\r\n\r\n    const nextReview = () => {\r\n      userAnswer.value = \"\";\r\n      showResult.value = false;\r\n      isCorrect.value = false;\r\n      currentQuestionIndex.value += 1;\r\n      if (currentQuestionIndex.value < totalQuestions.value) {\r\n        currentReview.value = selectedReviews.value[currentQuestionIndex.value];\r\n        nextTick(() => {\r\n          startTypingEffect(currentReview.value.review);\r\n        });\r\n      } else {\r\n        gameOver.value = true;\r\n      }\r\n    };\r\n\r\n    const getPosterUrl = (id) => `/one_line_poster/${id}.jpg`;\r\n\r\n    const startTypingEffect = (text) => {\r\n      const typingText = document.querySelector(\".typing-text\");\r\n      typingText.textContent = \"\";\r\n      let idx = 0;\r\n      const type = () => {\r\n        if (idx < text.length) {\r\n          typingText.textContent += text[idx++];\r\n          setTimeout(type, 100); // 글자당 100ms\r\n        }\r\n      };\r\n      type();\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchReviews();\r\n    });\r\n\r\n    return {\r\n      reviews,\r\n      selectedReviews,\r\n      currentReview,\r\n      currentQuestionIndex,\r\n      totalQuestions,\r\n      userAnswer,\r\n      isCorrect,\r\n      showResult,\r\n      gameOver,\r\n      correctCount,\r\n      showModal,\r\n      modalMessage,\r\n      modalAction,\r\n      openConfirmModal,\r\n      closeModal,\r\n      handleModalConfirm,\r\n      handleModalCancel,\r\n      claimPoints,\r\n      goToRank,\r\n      restartGame,\r\n      checkAnswer,\r\n      nextReview,\r\n      getPosterUrl,\r\n      setCooldown,\r\n      \r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin-top: 40px;\r\n}\r\n\r\n.poster {\r\n  width: 350px; /* 고정 너비 */\r\n  height: 525px; /* 고정 높이 */\r\n  object-fit: cover; /* 이미지가 고정 크기에 맞게 잘림 */\r\n  border-radius: 10px; /* 모서리 둥글게 */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* 약간의 그림자 추가 */\r\n  margin-top: 15px; /* 위아래 간격 */\r\n  margin-right: 20px;\r\n}\r\n\r\n.input-container {\r\n  display: flex; /* Flexbox로 정렬 */\r\n  justify-content: center; /* 중앙 정렬 */\r\n  align-items: center; /* 수직 정렬 */\r\n  gap: 10px; /* 텍스트 입력란과 버튼 사이 간격 */\r\n}\r\n\r\n.input-field {\r\n  margin-top: 155px;\r\n  width: 350px; /* 입력란의 너비를 줄임 */\r\n  height: 40px; /* 입력란 높이 조정 */\r\n  font-size: 14px; /* 글자 크기 조정 */\r\n}\r\n\r\n.submit-btn {\r\n  margin-top: 155px;\r\n  margin-left: 10px;\r\n  height: 40px; /* 버튼 높이 입력란과 동일하게 설정 */\r\n  font-size: 18px; /* 버튼 글자 크기 조정 */\r\n  padding: 0 15px; /* 좌우 여백 추가 */\r\n}\r\n\r\n.next-btn {\r\n  margin-top: 10px;\r\n  height: 40px; /* 버튼 높이 입력란과 동일하게 설정 */\r\n  font-size: 18px; /* 버튼 글자 크기 조정 */\r\n  padding: 0 15px; /* 좌우 여백 추가 */\r\n}\r\n\r\n.text-center-title {\r\n  color: #4caf50;\r\n  text-align: center;\r\n}\r\n\r\n#typing-box {\r\n  font-size: 1.5rem;\r\n  color: #dddddd;\r\n  /* display: flex; */\r\n  /* justify-content: center; */\r\n  /* align-items: center; */\r\n  margin-top: 120px;\r\n}\r\n\r\n.blink {\r\n  animation: blink 0.5s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n/* 포인트획득하기 버튼: 네온 스타일 */\r\n.add_point {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #4caf50;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.add_point:hover {\r\n  background: #4caf50;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #4caf50, 0 0 25px #4caf50, 0 0 50px #4caf50,\r\n    0 0 200px #4caf50;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.add_point span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.add_point span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #4caf50);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #4caf50);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #4caf50);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #4caf50);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 다시 시작하기 버튼: 네온 스타일 */\r\n.replay {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #f54a4a;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.replay:hover {\r\n  background: #f54a4a;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #f54a4a, 0 0 25px #f54a4a, 0 0 50px #f54a4a,\r\n    0 0 200px #f54a4a;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.replay span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.replay span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #f54a4a);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #f54a4a);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #f54a4a);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #f54a4a);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 랭크 확인하기 버튼: 네온 버튼 스타일 */\r\n.confirm_rank {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #3358ff;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.confirm_rank:hover {\r\n  background: #3358ff;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #3358ff, 0 0 25px #3358ff, 0 0 50px #3358ff,\r\n    0 0 200px #3358ff;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.confirm_rank span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.confirm_rank span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #3358ff);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #3358ff);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #3358ff);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #3358ff);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(2px);\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  width: 500px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n/* 닫기 버튼 */\r\n.btn-close {\r\n  background: none;\r\n  border: none;\r\n  color: #ccc;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n}\r\n.btn-close:hover {\r\n  color: #fff;\r\n}\r\n\r\n/* 모달 본문 */\r\n.modal-body p {\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n  color: #eee;\r\n}\r\n\r\n/* 모달 하단 버튼 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.btn-create {\r\n  background: #3a3a3a;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-create:hover {\r\n  background: #555555;\r\n}\r\n\r\n.btn-cancel {\r\n  background: #c0392b;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-cancel:hover {\r\n  background: #e74c3c;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./OneLineView.vue?vue&type=template&id=26978dfc&scoped=true\"\nimport script from \"./OneLineView.vue?vue&type=script&lang=js\"\nexport * from \"./OneLineView.vue?vue&type=script&lang=js\"\n\nimport \"./OneLineView.vue?vue&type=style&index=0&id=26978dfc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-26978dfc\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center-title my-4\">한국영화 명대사</h1>\r\n\r\n    <div v-if=\"gameOver\" class=\"text-center\">\r\n      <h2>게임 종료!</h2>\r\n      <p>모든 문제를 완료하였습니다.</p>\r\n      <p>정답 수: {{ correctCount }} / {{ totalQuestions }}</p>\r\n      <p>획득 가능한 포인트 : {{ 10 * correctCount }}</p>\r\n\r\n      <!-- 포인트 획득하기 버튼 -->\r\n      <a\r\n        class=\"mt-3 add_point\"\r\n        href=\"#\"\r\n        @click.prevent=\"openConfirmModal('claim')\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#confirmModal\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        포인트 획득하기\r\n      </a>\r\n\r\n\r\n      <!-- 게임 재시작 버튼 -->\r\n      <a\r\n        class=\"mt-3 replay\"\r\n        href=\"#\"\r\n        @click.prevent=\"restartGame\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        다시 시작하기\r\n      </a>\r\n\r\n      <!-- 랭크 확인하기 버튼 -->\r\n      <a\r\n        class=\"mt-3 confirm_rank\"\r\n        href=\"#\"\r\n        @click.prevent=\"openConfirmModal('rank')\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#confirmModal\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        랭크 확인하기\r\n      </a>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <p class=\"text-center\">문제 {{ currentQuestionIndex + 1 }} / {{ totalQuestions }}</p>\r\n\r\n      <div v-if=\"!showResult\" class=\"review-container text-center\">\r\n        <!-- 타이핑 효과 -->\r\n        <div id=\"typing-box\">\r\n          <span class=\"typing-text\"></span><span class=\"blink\">|</span>\r\n        </div>\r\n        <div class=\"input-container\">\r\n          <input\r\n            v-model=\"userAnswer\"\r\n            class=\"form-control input-field\"\r\n            type=\"text\"\r\n            placeholder=\"정답(영화 제목)을 입력하세요\"\r\n            @keyup.enter=\"checkAnswer\"\r\n          />\r\n          <button class=\"btn btn-success submit-btn\" @click=\"checkAnswer\">></button>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"showResult\" class=\"result-container text-center mt-4\">\r\n        <h5 v-if=\"isCorrect\" class=\"text-success\">정답입니다! 🎉</h5>\r\n        <h5 v-else class=\"text-danger\">틀렸습니다. 정답은 \"{{ currentquote.title[0] }}\" 입니다. ❌</h5>\r\n        <img\r\n          :src=\"getPosterUrl(currentquote.title[0])\"\r\n          class=\"img-fluid poster\"\r\n          alt=\"영화 포스터\"\r\n        />\r\n        <button class=\"btn btn-secondary next-btn\" @click=\"nextReview\">></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <p class=\"modal-title\">포인트 획득하기</p>\r\n          <button class=\"btn-close\" @click=\"closeModal\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>{{ modalMessage }}</p>\r\n          <p>포인트를 획득하시면 8시간에 재도전 가능합니다!</p>\r\n          <div class=\"modal-actions\">\r\n            <button class=\"btn btn-create\" @click=\"handleModalConfirm\">확인</button>\r\n            <button class=\"btn btn-cancel\" @click=\"closeModal\">취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst COOLDOWN_KEY = \"KoreaQuotesView\"; // 고유 키 설정\r\n\r\nimport { ref, onMounted, nextTick } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const reviews = ref([]);\r\n    const selectedQuotes = ref([]);\r\n    const currentquote = ref({});\r\n    const currentQuestionIndex = ref(0);\r\n    const totalQuestions = ref(5);\r\n    const userAnswer = ref(\"\");\r\n    const isCorrect = ref(false);\r\n    const showResult = ref(false);\r\n    const gameOver = ref(false);\r\n    const correctCount = ref(0);\r\n\r\n    // 모달 관련 데이터와 메서드\r\n    const showModal = ref(false); // 모달 표시 여부\r\n    const modalMessage = ref(\"\"); // 모달 메시지\r\n    const modalAction = ref(\"\"); // 모달에서 수행할 액션\r\n\r\n    const router = useRouter();\r\n    const store = useCounterStore();\r\n\r\n    const setCooldown = () => {\r\n      localStorage.setItem(COOLDOWN_KEY, Date.now());\r\n    };\r\n\r\n    const openConfirmModal = (action) => {\r\n      modalAction.value = action;\r\n      modalMessage.value = `${10 * correctCount.value}p를 획득 하시겠어요?`;\r\n      showModal.value = true; // 모달 열기\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false; // 모달 닫기\r\n    };\r\n\r\n    const handleModalConfirm = async () => {\r\n      if (modalAction.value === \"claim\") {\r\n        await claimPoints();\r\n        setCooldown();\r\n      } else if (modalAction.value === \"rank\") {\r\n        await goToRank();\r\n        setCooldown();\r\n      }\r\n      closeModal();\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n      modalMessage.value = \"\";\r\n    };\r\n\r\n    const claimPoints = async () => {\r\n      if (correctCount.value > 0) {\r\n        await updatePoints(correctCount.value * 10);\r\n      }\r\n      await store.fetchUserPoints();\r\n      router.push({ name: \"GameView\" });\r\n    };\r\n\r\n    const goToRank = async () => {\r\n      if (correctCount.value > 0) {\r\n        await updatePoints(correctCount.value * 10);\r\n      }\r\n      await store.fetchUserPoints();\r\n      router.push({ name: \"RankView\" });\r\n    };\r\n\r\n    const updatePoints = async (points) => {\r\n      try {\r\n        await axios.post(\r\n          `${store.API_URL}/accounts/user/points/`,\r\n          { points },\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        store.points += points;\r\n      } catch (error) {\r\n        console.error(\"Error updating points:\", error);\r\n      }\r\n    };\r\n\r\n    const restartGame = () => {\r\n      currentQuestionIndex.value = 0;\r\n      correctCount.value = 0;\r\n      gameOver.value = false;\r\n      userAnswer.value = \"\";\r\n      showResult.value = false;\r\n      isCorrect.value = false;\r\n      selectRandomReviews();\r\n      currentquote.value = selectedQuotes.value[currentQuestionIndex.value];\r\n\r\n      // 타이핑 효과를 초기화하고 다시 실행\r\n      nextTick(() => typingEffect(currentquote.value.movietext));\r\n    };\r\n\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(\"/korea_movies_quotes.json\");\r\n        reviews.value = response.data;\r\n        selectRandomReviews();\r\n        currentquote.value = selectedQuotes.value[currentQuestionIndex.value];\r\n        await nextTick();\r\n        typingEffect(currentquote.value.movietext); // 타이핑 효과 시작\r\n      } catch (error) {\r\n        console.error(\"Error loading reviews:\", error);\r\n      }\r\n    };\r\n\r\n    const selectRandomReviews = () => {\r\n      const shuffled = reviews.value.sort(() => 0.5 - Math.random());\r\n      selectedQuotes.value = shuffled.slice(0, totalQuestions.value);\r\n    };\r\n\r\n    const checkAnswer = () => {\r\n      if (userAnswer.value.trim() === \"\") return;\r\n      isCorrect.value = currentquote.value.title.some(\r\n        (correctTitle) =>\r\n          userAnswer.value.trim().toLowerCase() === correctTitle.toLowerCase()\r\n      );\r\n      if (isCorrect.value) {\r\n        correctCount.value += 1;\r\n      }\r\n      showResult.value = true;\r\n    };\r\n\r\n    const nextReview = () => {\r\n      userAnswer.value = \"\";\r\n      showResult.value = false;\r\n      isCorrect.value = false;\r\n      currentQuestionIndex.value += 1;\r\n      if (currentQuestionIndex.value < totalQuestions.value) {\r\n        currentquote.value = selectedQuotes.value[currentQuestionIndex.value];\r\n        nextTick(() => typingEffect(currentquote.value.movietext)); // 다음 문제 타이핑 효과\r\n      } else {\r\n        gameOver.value = true;\r\n      }\r\n    };\r\n\r\n    const getPosterUrl = (title) => `/korea_movie_poster/${title}.jpg`;\r\n\r\n    const typingEffect = (text) => {\r\n      const typingText = document.querySelector(\".typing-text\");\r\n      typingText.textContent = \"\";\r\n      let idx = 0;\r\n      const type = () => {\r\n        if (idx < text.length) {\r\n          typingText.textContent += text[idx++];\r\n          setTimeout(type, 100);\r\n        }\r\n      };\r\n      type();\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchReviews();\r\n    });\r\n\r\n    return {\r\n      reviews,\r\n      selectedQuotes,\r\n      currentquote,\r\n      currentQuestionIndex,\r\n      totalQuestions,\r\n      userAnswer,\r\n      isCorrect,\r\n      showResult,\r\n      gameOver,\r\n      correctCount,\r\n      showModal,\r\n      modalMessage,\r\n      modalAction,\r\n      openConfirmModal,\r\n      closeModal,\r\n      handleModalConfirm,\r\n      handleModalCancel,\r\n      claimPoints,\r\n      goToRank,\r\n      restartGame,\r\n      fetchReviews,\r\n      selectRandomReviews,\r\n      checkAnswer,\r\n      nextReview,\r\n      getPosterUrl,\r\n      modalMessage,\r\n      setCooldown,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container {\r\n  margin-top: 40px;\r\n}\r\n\r\n.poster {\r\n  width: 350px; /* 고정 너비 */\r\n  height: 525px; /* 고정 높이 */\r\n  object-fit: cover; /* 이미지가 고정 크기에 맞게 잘림 */\r\n  border-radius: 10px; /* 모서리 둥글게 */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* 약간의 그림자 추가 */\r\n  margin-top: 15px; /* 위아래 간격 */\r\n  margin-right: 20px;\r\n}\r\n\r\n.input-container {\r\n  display: flex; /* Flexbox로 정렬 */\r\n  justify-content: center; /* 중앙 정렬 */\r\n  align-items: center; /* 수직 정렬 */\r\n  gap: 10px; /* 텍스트 입력란과 버튼 사이 간격 */\r\n}\r\n\r\n.input-field {\r\n  margin-top: 155px;\r\n  width: 350px; /* 입력란의 너비를 줄임 */\r\n  height: 40px; /* 입력란 높이 조정 */\r\n  font-size: 14px; /* 글자 크기 조정 */\r\n}\r\n\r\n.submit-btn {\r\n  margin-top: 155px;\r\n  margin-left: 10px;\r\n  height: 40px; /* 버튼 높이 입력란과 동일하게 설정 */\r\n  font-size: 18px; /* 버튼 글자 크기 조정 */\r\n  padding: 0 15px; /* 좌우 여백 추가 */\r\n}\r\n\r\n.next-btn {\r\n  margin-top: 10px;\r\n  height: 40px; /* 버튼 높이 입력란과 동일하게 설정 */\r\n  font-size: 18px; /* 버튼 글자 크기 조정 */\r\n  padding: 0 15px; /* 좌우 여백 추가 */\r\n}\r\n\r\n\r\n.text-center-title {\r\n  color: #4caf50;\r\n  text-align: center;\r\n}\r\n\r\n#typing-box {\r\n  font-size: 1.5rem;\r\n  color: #dddddd;\r\n  margin-top: 120px;\r\n}\r\n\r\n.blink {\r\n  animation: blink 0.5s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n/* 포인트획득하기 버튼: 네온 스타일 */\r\n.add_point {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #4caf50;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.add_point:hover {\r\n  background: #4caf50;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #4caf50, 0 0 25px #4caf50, 0 0 50px #4caf50,\r\n    0 0 200px #4caf50;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.add_point span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.add_point span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #4caf50);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #4caf50);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #4caf50);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #4caf50);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 다시 시작하기 버튼: 네온 스타일 */\r\n.replay {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #f54a4a;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.replay:hover {\r\n  background: #f54a4a;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #f54a4a, 0 0 25px #f54a4a, 0 0 50px #f54a4a,\r\n    0 0 200px #f54a4a;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.replay span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.replay span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #f54a4a);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #f54a4a);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #f54a4a);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #f54a4a);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 랭크 확인하기 버튼: 네온 버튼 스타일 */\r\n.confirm_rank {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #3358ff;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.confirm_rank:hover {\r\n  background: #3358ff;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #3358ff, 0 0 25px #3358ff, 0 0 50px #3358ff,\r\n    0 0 200px #3358ff;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.confirm_rank span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.confirm_rank span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #3358ff);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #3358ff);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #3358ff);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #3358ff);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(2px);\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  width: 500px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n/* 닫기 버튼 */\r\n.btn-close {\r\n  background: none;\r\n  border: none;\r\n  color: #ccc;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n}\r\n.btn-close:hover {\r\n  color: #fff;\r\n}\r\n\r\n/* 모달 본문 */\r\n.modal-body p {\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n  color: #eee;\r\n}\r\n\r\n/* 모달 하단 버튼 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.btn-create {\r\n  background: #3a3a3a;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-create:hover {\r\n  background: #555555;\r\n}\r\n\r\n.btn-cancel {\r\n  background: #c0392b;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-cancel:hover {\r\n  background: #e74c3c;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./KoreaQuotesView.vue?vue&type=template&id=9299743a&scoped=true\"\nimport script from \"./KoreaQuotesView.vue?vue&type=script&lang=js\"\nexport * from \"./KoreaQuotesView.vue?vue&type=script&lang=js\"\n\nimport \"./KoreaQuotesView.vue?vue&type=style&index=0&id=9299743a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9299743a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center-title my-4\">해외영화 명대사</h1>\r\n\r\n    <div v-if=\"gameOver\" class=\"text-center\">\r\n      <h2>게임 종료!</h2>\r\n      <p>모든 문제를 완료하였습니다.</p>\r\n      <p>정답 수: {{ correctCount }} / {{ totalQuestions }}</p>\r\n      <p>획득 가능한 포인트 : {{ 10 * correctCount }}</p>\r\n\r\n      <!-- 포인트 획득하기 버튼 -->\r\n      <a\r\n        class=\"mt-3 add_point\"\r\n        href=\"#\"\r\n        @click.prevent=\"openConfirmModal('claim')\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#confirmModal\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        포인트 획득하기\r\n      </a>\r\n\r\n      <!-- 게임 재시작 버튼 -->\r\n      <a\r\n        class=\"mt-3 replay\"\r\n        href=\"#\"\r\n        @click.prevent=\"restartGame\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        다시 시작하기\r\n      </a>\r\n\r\n      <!-- 랭크 확인하기 버튼 -->\r\n      <a\r\n        class=\"mt-3 confirm_rank\"\r\n        href=\"#\"\r\n        @click.prevent=\"openConfirmModal('rank')\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#confirmModal\"\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        랭크 확인하기\r\n      </a>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <p class=\"text-center\">문제 {{ currentQuestionIndex + 1 }} / {{ totalQuestions }}</p>\r\n\r\n      <div v-if=\"!showResult\" class=\"review-container text-center\">\r\n        <!-- 타이핑 효과를 보여줄 박스 -->\r\n        <div id=\"typing-box\">\r\n          <div>\r\n            <span class=\"typing-text movietext\"></span><span class=\"blink\">|</span>\r\n          </div>\r\n          <div class=\"mt-3\">\r\n            <span class=\"typing-text translated-movietext\"></span><span class=\"blink\">|</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"input-container\">\r\n          <input\r\n            v-model=\"userAnswer\"\r\n            class=\"form-control input-field\"\r\n            type=\"text\"\r\n            placeholder=\"정답(영화 제목)을 입력하세요\"\r\n            @keyup.enter=\"checkAnswer\"\r\n          />\r\n          <button class=\"btn btn-success submit-btn\" @click=\"checkAnswer\">></button>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"showResult\" class=\"result-container text-center mt-4\">\r\n        <h5 v-if=\"isCorrect\" class=\"text-success\">정답입니다! 🎉</h5>\r\n        <h5 v-else class=\"text-danger\">틀렸습니다. 정답은 \"{{ currentquote.title[1] }}\" 입니다. ❌</h5>\r\n        <img\r\n          :src=\"getPosterUrl(currentquote.title[0])\"\r\n          class=\"img-fluid poster\"\r\n          alt=\"영화 포스터\"\r\n        />\r\n        <button class=\"btn btn-secondary next-btn\" @click=\"nextReview\">></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <p class=\"modal-title\">포인트 획득하기</p>\r\n          <button class=\"btn-close\" @click=\"closeModal\">&times;</button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>{{ modalMessage }}</p>\r\n          <p>포인트를 획득하시면 8시간에 재도전 가능합니다!</p>\r\n          <div class=\"modal-actions\">\r\n            <button class=\"btn btn-create\" @click=\"handleModalConfirm\">확인</button>\r\n            <button class=\"btn btn-cancel\" @click=\"closeModal\">취소</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nconst COOLDOWN_KEY = \"ForeignQuotesView\"; // 고유 키 설정\r\n\r\nimport { ref, onMounted, nextTick } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const reviews = ref([]);\r\n    const selectedQuotes = ref([]);\r\n    const currentquote = ref({});\r\n    const currentQuestionIndex = ref(0);\r\n    const totalQuestions = ref(5);\r\n    const userAnswer = ref(\"\");\r\n    const isCorrect = ref(false);\r\n    const showResult = ref(false);\r\n    const gameOver = ref(false);\r\n    const correctCount = ref(0);\r\n\r\n    // 모달 관련 데이터와 메서드\r\n    const showModal = ref(false); // 모달 표시 여부\r\n    const modalMessage = ref(\"\"); // 모달 메시지\r\n    const modalAction = ref(\"\"); // 모달에서 수행할 액션\r\n\r\n    const router = useRouter();\r\n    const store = useCounterStore();\r\n\r\n    const setCooldown = () => {\r\n      localStorage.setItem(COOLDOWN_KEY, Date.now());\r\n    };\r\n\r\n    const openConfirmModal = (action) => {\r\n      modalAction.value = action;\r\n      modalMessage.value = `${10 * correctCount.value}p를 획득 하시겠어요?`;\r\n      showModal.value = true; // 모달 열기\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false; // 모달 닫기\r\n    };\r\n\r\n    const handleModalConfirm = async () => {\r\n      if (modalAction.value === \"claim\") {\r\n        await claimPoints();\r\n        setCooldown();\r\n      } else if (modalAction.value === \"rank\") {\r\n        await goToRank();\r\n        setCooldown();\r\n      }\r\n      closeModal();\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n      modalMessage.value = \"\";\r\n    };\r\n\r\n    const claimPoints = async () => {\r\n      if (correctCount.value > 0) {\r\n        await updatePoints(correctCount.value * 10);\r\n      }\r\n      await store.fetchUserPoints();\r\n      router.push({ name: \"GameView\" });\r\n    };\r\n\r\n    const goToRank = async () => {\r\n      if (correctCount.value > 0) {\r\n        await updatePoints(correctCount.value * 10);\r\n      }\r\n      await store.fetchUserPoints();\r\n      router.push({ name: \"RankView\" });\r\n    };\r\n\r\n    const updatePoints = async (points) => {\r\n      try {\r\n        await axios.post(\r\n          `${store.API_URL}/accounts/user/points/`,\r\n          { points },\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        store.points += points;\r\n      } catch (error) {\r\n        console.error(\"Error updating points:\", error);\r\n      }\r\n    };\r\n\r\n    const restartGame = () => {\r\n      currentQuestionIndex.value = 0;\r\n      correctCount.value = 0;\r\n      gameOver.value = false;\r\n      userAnswer.value = \"\";\r\n      showResult.value = false;\r\n      isCorrect.value = false;\r\n      selectRandomReviews();\r\n      currentquote.value = selectedQuotes.value[currentQuestionIndex.value];\r\n\r\n      // 타이핑 효과 초기화\r\n      nextTick(() => {\r\n        typingEffect(currentquote.value.movietext, \".movietext\");\r\n        typingEffect(currentquote.value.translatedMovietext, \".translated-movietext\");\r\n      });\r\n    };\r\n\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(\"/foreign_movies_quotes.json\");\r\n        reviews.value = response.data;\r\n        selectRandomReviews();\r\n        currentquote.value = selectedQuotes.value[currentQuestionIndex.value];\r\n        await nextTick();\r\n        typingEffect(currentquote.value.movietext, \".movietext\");\r\n        typingEffect(currentquote.value.translatedMovietext, \".translated-movietext\");\r\n      } catch (error) {\r\n        console.error(\"Error loading reviews:\", error);\r\n      }\r\n    };\r\n\r\n    const selectRandomReviews = () => {\r\n      const shuffled = reviews.value.sort(() => 0.5 - Math.random());\r\n      selectedQuotes.value = shuffled.slice(0, totalQuestions.value);\r\n    };\r\n\r\n    const checkAnswer = () => {\r\n      if (userAnswer.value.trim() === \"\") return;\r\n      isCorrect.value = currentquote.value.title.some(\r\n        (correctTitle) =>\r\n          userAnswer.value.trim().toLowerCase() === correctTitle.toLowerCase()\r\n      );\r\n      if (isCorrect.value) {\r\n        correctCount.value += 1;\r\n      }\r\n      showResult.value = true;\r\n    };\r\n\r\n    const nextReview = () => {\r\n      userAnswer.value = \"\";\r\n      showResult.value = false;\r\n      isCorrect.value = false;\r\n      currentQuestionIndex.value += 1;\r\n      if (currentQuestionIndex.value < totalQuestions.value) {\r\n        currentquote.value = selectedQuotes.value[currentQuestionIndex.value];\r\n        nextTick(() => {\r\n          typingEffect(currentquote.value.movietext, \".movietext\");\r\n          typingEffect(currentquote.value.translatedMovietext, \".translated-movietext\");\r\n        });\r\n      } else {\r\n        gameOver.value = true;\r\n      }\r\n    };\r\n\r\n    const getPosterUrl = (title) => `/foreign_movie_poster/${title}.jpg`;\r\n\r\n    const typingEffect = (text, selector) => {\r\n      const typingText = document.querySelector(selector);\r\n      typingText.textContent = \"\";\r\n      let idx = 0;\r\n      const type = () => {\r\n        if (idx < text.length) {\r\n          typingText.textContent += text[idx++];\r\n          setTimeout(type, 100);\r\n        }\r\n      };\r\n      type();\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchReviews();\r\n    });\r\n\r\n    return {\r\n      reviews,\r\n      selectedQuotes,\r\n      currentquote,\r\n      currentQuestionIndex,\r\n      totalQuestions,\r\n      userAnswer,\r\n      isCorrect,\r\n      showResult,\r\n      gameOver,\r\n      correctCount,\r\n      showModal,\r\n      modalMessage,\r\n      modalAction,\r\n      openConfirmModal,\r\n      closeModal,\r\n      handleModalConfirm,\r\n      handleModalCancel,\r\n      claimPoints,\r\n      goToRank,\r\n      restartGame,\r\n      fetchReviews,\r\n      selectRandomReviews,\r\n      checkAnswer,\r\n      nextReview,\r\n      getPosterUrl,\r\n      modalMessage,\r\n      setCooldown,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin-top: 40px;\r\n}\r\n\r\n.poster {\r\n  width: 350px; /* 고정 너비 */\r\n  height: 525px; /* 고정 높이 */\r\n  object-fit: cover; /* 이미지가 고정 크기에 맞게 잘림 */\r\n  border-radius: 10px; /* 모서리 둥글게 */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* 약간의 그림자 추가 */\r\n  margin-top: 15px; /* 위아래 간격 */\r\n  margin-right: 20px;\r\n}\r\n\r\n.input-container {\r\n  display: flex; /* Flexbox로 정렬 */\r\n  justify-content: center; /* 중앙 정렬 */\r\n  align-items: center; /* 수직 정렬 */\r\n  gap: 10px; /* 텍스트 입력란과 버튼 사이 간격 */\r\n}\r\n\r\n.input-field {\r\n  margin-top: 153px;\r\n  width: 350px; /* 입력란의 너비를 줄임 */\r\n  height: 40px; /* 입력란 높이 조정 */\r\n  font-size: 14px; /* 글자 크기 조정 */\r\n}\r\n\r\n.submit-btn {\r\n  margin-top: 153px;\r\n  margin-left: 10px;\r\n  height: 40px; /* 버튼 높이 입력란과 동일하게 설정 */\r\n  font-size: 18px; /* 버튼 글자 크기 조정 */\r\n  padding: 0 15px; /* 좌우 여백 추가 */\r\n}\r\n\r\n.next-btn {\r\n  margin-top: 10px;\r\n  height: 40px; /* 버튼 높이 입력란과 동일하게 설정 */\r\n  font-size: 18px; /* 버튼 글자 크기 조정 */\r\n  padding: 0 15px; /* 좌우 여백 추가 */\r\n}\r\n\r\n.text-center-title {\r\n  color: #4caf50;\r\n  text-align: center;\r\n}\r\n\r\n#typing-box {\r\n  font-size: 1.5rem;\r\n  color: #dddddd;\r\n  margin-top: 70px;\r\n}\r\n\r\n.blink {\r\n  animation: blink 0.5s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n/* 포인트획득하기 버튼: 네온 스타일 */\r\n.add_point {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #4caf50;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.add_point:hover {\r\n  background: #4caf50;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #4caf50, 0 0 25px #4caf50, 0 0 50px #4caf50,\r\n    0 0 200px #4caf50;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.add_point span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.add_point span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #4caf50);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #4caf50);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #4caf50);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.add_point span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #4caf50);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 다시 시작하기 버튼: 네온 스타일 */\r\n.replay {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #f54a4a;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.replay:hover {\r\n  background: #f54a4a;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #f54a4a, 0 0 25px #f54a4a, 0 0 50px #f54a4a,\r\n    0 0 200px #f54a4a;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.replay span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.replay span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #f54a4a);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #f54a4a);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #f54a4a);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.replay span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #f54a4a);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n/* 랭크 확인하기 버튼: 네온 버튼 스타일 */\r\n.confirm_rank {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #3358ff;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.confirm_rank:hover {\r\n  background: #3358ff;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #3358ff, 0 0 25px #3358ff, 0 0 50px #3358ff,\r\n    0 0 200px #3358ff;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.confirm_rank span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.confirm_rank span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #3358ff);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #3358ff);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #3358ff);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.confirm_rank span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #3358ff);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(2px);\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  width: 500px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n/* 닫기 버튼 */\r\n.btn-close {\r\n  background: none;\r\n  border: none;\r\n  color: #ccc;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n}\r\n.btn-close:hover {\r\n  color: #fff;\r\n}\r\n\r\n/* 모달 본문 */\r\n.modal-body p {\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n  color: #eee;\r\n}\r\n\r\n/* 모달 하단 버튼 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.btn-create {\r\n  background: #3a3a3a;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-create:hover {\r\n  background: #555555;\r\n}\r\n\r\n.btn-cancel {\r\n  background: #c0392b;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-cancel:hover {\r\n  background: #e74c3c;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./ForeignQuotesView.vue?vue&type=template&id=919e938e&scoped=true\"\nimport script from \"./ForeignQuotesView.vue?vue&type=script&lang=js\"\nexport * from \"./ForeignQuotesView.vue?vue&type=script&lang=js\"\n\nimport \"./ForeignQuotesView.vue?vue&type=style&index=0&id=919e938e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-919e938e\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"modal-overlay\" v-if=\"isVisible\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">랭크 시스템 안내</h5>\r\n        <button class=\"btn-close\" @click=\"closeModal\" aria-label=\"Close Modal\">&times;</button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n  <section class=\"faq-section\">\r\n    <h4>Q) 포인트는 무엇인가요?</h4>\r\n    <p>\r\n      포인트는 리뷰 작성과 게임 플레이를 통해 얻을 수 있는 MovieMoster의 보상 시스템입니다.<br/>\r\n      <span class=\"highlight\">리뷰 작성 시 10점, 게임의 정답 1개당 10점씩 포인트가 부여됩니다.</span>\r\n    </p>\r\n  </section>\r\n\r\n  <section class=\"faq-section\">\r\n    <h4>Q) 포인트로 무엇을 할 수 있나요?</h4>\r\n    <p>\r\n      포인트는 누적되어 MovieMoster의 등급 시스템을 통해 등급이 부여됩니다.<br/>\r\n      등급이 높을수록 <span class=\"highlight\">RANK 페이지의 상단에 노출</span>되며, 커뮤니티에서 더 높은 신뢰도를 가지게 됩니다.\r\n    </p>\r\n  </section>\r\n\r\n  <section class=\"faq-section\">\r\n    <h4>Q) 등급과 포인트 기준은 어떻게 되나요?</h4>\r\n    <table class=\"rank-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>등급</th>\r\n          <th>누적 포인트</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr><td>Bronze</td><td>0</td></tr>\r\n        <tr><td>Silver</td><td>1000</td></tr>\r\n        <tr><td>Gold</td><td>2000</td></tr>\r\n        <tr><td>Platinum</td><td>3000</td></tr>\r\n        <tr><td>Diamond</td><td>4000+</td></tr>\r\n      </tbody>\r\n    </table>\r\n    <p>\r\n    포인트를 꾸준히 누적하면 등급이 상승하며, <span class=\"highlight\">리뷰 작성</span>과 <span class=\"highlight\">게임</span>을 통해 포인트를 얻을 수 있습니다.\r\n  </p>\r\n  </section>\r\n\r\n  <section class=\"faq-section\">\r\n    <h4>Q) 게임 제한 시간은 어떻게 동작하나요?</h4>\r\n    <p>\r\n      각 게임은 플레이 후 일정 시간 동안 재시도가 제한됩니다.<br />\r\n      제한 시간 동안 해당 게임은 비활성화 상태로 표시되며, 클릭 시 <span class=\"highlight\">남은 시간 안내</span> 모달창이 나타납니다.<br />\r\n      예) \"이 게임은 3시간 12분 후에 다시 이용할 수 있습니다.\"\r\n    </p>\r\n  </section>\r\n\r\n  <section class=\"faq-section\">\r\n    <h4>Q) 높은 등급의 유저는 어떤 혜택을 받을 수 있나요?</h4>\r\n    <p>\r\n      높은 등급의 유저는 커뮤니티에서 더 두드러진 노출과 인정을 받을 수 있습니다.<br />\r\n      <ul>\r\n        <li><span class=\"highlight\">RANK 상단 노출</span>: 높은 등급 유저가 우선적으로 노출됩니다.</li>\r\n        <li><span class=\"highlight\">컬렉션 추천</span>: 높은 등급 유저의 콘텐츠가 홈 페이지에 우선 표시됩니다.</li>\r\n      </ul>\r\n    </p>\r\n  </section>\r\n</div>\r\n\r\n      <div class=\"modal-actions\">\r\n        <button class=\"btn-cancel\" @click=\"closeModal\">닫기</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits } from \"vue\";\r\n\r\ndefineProps([\"isVisible\"]);\r\nconst emit = defineEmits([\"close\"]);\r\n\r\nconst closeModal = () => {\r\n  emit(\"close\");\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(1px); /* 배경 흐림 효과 */\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 25px;\r\n  border-radius: 15px;\r\n  max-width: 80%;\r\n  width: 800px;\r\n  max-height: 90%;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column; /* 헤더, 본문, 액션 정렬 */\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 모달 본문 스크롤 추가 */\r\n.modal-body {\r\n  font-family: 'Arial', sans-serif;\r\n  font-size: 1rem;\r\n  color: #c7c7c7;\r\n  line-height: 1.5;\r\n  overflow-y: auto; /* 본문 스크롤 가능 */\r\n  max-height: 60vh; /* 본문 최대 높이 설정 */\r\n  padding-right: 15px; /* 스크롤 바 여백 */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.modal-body h4 {\r\n  font-size: 1.0rem;\r\n  color: #c7c7c7;\r\n}\r\n.modal-body p {\r\n  font-size: 0.8rem;\r\n  color: #c7c7c7;\r\n}\r\n\r\n.modal-body table {\r\n  width: 100%; /* 표 너비 줄이기 */\r\n  margin: 20px auto; /* 중앙 정렬 */\r\n  border-collapse: collapse;\r\n}\r\n\r\n.modal-body th,\r\n.modal-body td {\r\n  border: 1px solid #444; /* 테두리 설정 */\r\n  padding: 8px; /* 안쪽 여백 */\r\n  text-align: center; /* 글씨 중앙 정렬 */\r\n  vertical-align: middle; /* 세로 중앙 정렬 */\r\n}\r\n\r\n.modal-body th {\r\n  background-color: #555; /* 헤더 배경색 */\r\n  color: #fff; /* 헤더 글씨색 */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-body td {\r\n  background-color: #444; /* 데이터 셀 배경색 */\r\n  color: #ccc; /* 데이터 셀 글씨색 */\r\n}\r\n\r\n\r\n/* 모달 하단 버튼 고정 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  position: sticky; /* 모달 하단에 고정 */\r\n  bottom: 0;\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  padding-top: 10px;\r\n}\r\n\r\n/* 닫기 버튼 스타일 */\r\n.btn-cancel {\r\n  background: #c0392b;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background: #e74c3c;\r\n}\r\n\r\n.faq-section {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.faq-section h4 {\r\n  font-size: 1.2rem;\r\n  color: #ffffff;\r\n  margin-bottom: 10px;\r\n  text-transform: capitalize;\r\n}\r\n\r\n.faq-section p {\r\n  margin: 0;\r\n}\r\n\r\n.highlight {\r\n  color: #00d1b2; /* 강조 색상 */\r\n  font-weight: bold;\r\n}\r\n\r\n.rank-table {\r\n  width: 100%;\r\n  margin: 10px 0;\r\n  border-collapse: collapse;\r\n  background: #333;\r\n  border: 1px solid #555;\r\n}\r\n\r\n.rank-table th,\r\n.rank-table td {\r\n  padding: 4px 6px; /* 셀 높이 줄이기 */\r\n  text-align: center; /* 텍스트 중앙 정렬 */\r\n  vertical-align: middle;\r\n  height: 30px; /* 각 셀 높이를 일정하게 설정 */\r\n  color: white;\r\n  border: 1px solid #555;\r\n}\r\n\r\n.rank-table th {\r\n  background-color: #333;\r\n}\r\n\r\n.rank-table td {\r\n  background: #444;\r\n  color: #ccc;\r\n}\r\n\r\nul {\r\n  padding-left: 20px;\r\n}\r\n\r\nul li {\r\n  list-style-type: disc;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n\r\n</style>","import script from \"./RankInfoModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RankInfoModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RankInfoModal.vue?vue&type=style&index=0&id=60b6eca0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60b6eca0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"ranking-container\">\r\n    <h1 class=\"text-center tracking-in-expand-fwd my-4\">MOVIE MONSTER RANKING</h1>\r\n    <!-- 랭크 시스템 안내 버튼 -->\r\n    <div class=\"info-container\">\r\n      <a href=\"#\" class=\"rankinfo\" @click=\"showModal = true\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        랭크 시스템 안내\r\n      </a>\r\n    </div>\r\n\r\n\r\n\r\n    <table class=\"ranking-table\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"with-border\">순위</th>\r\n          <th>프로필</th>\r\n          <th>이름</th>\r\n          <th>랭크</th>\r\n          <th>게시물 수</th>\r\n          <th>좋아요 수</th>\r\n          <th>팔로워 수</th>\r\n          <th>추천 영화</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          v-for=\"(user, index) in rankings\"\r\n          :key=\"user.id\"\r\n          :class=\"{ 'text-focus-in': animatedIndexes.includes(index), hidden: !animatedIndexes.includes(index) }\"\r\n        >\r\n          <!-- 순위 -->\r\n          <td class=\"with-border\">\r\n            <div v-if=\"index === 0\">\r\n              <img src=\"@/assets/gold.png\" alt=\"Gold Medal\" class=\"medal-icon\" />\r\n            </div>\r\n            <div v-else-if=\"index === 1\">\r\n              <img src=\"@/assets/silver.png\" alt=\"Silver Medal\" class=\"medal-icon\" />\r\n            </div>\r\n            <div v-else-if=\"index === 2\">\r\n              <img src=\"@/assets/bronze.png\" alt=\"Bronze Medal\" class=\"medal-icon\" />\r\n            </div>\r\n            <div v-else>{{ index + 1 }}</div>\r\n          </td>\r\n          <!-- 프로필 -->\r\n          <td>\r\n            <div class=\"profile-picture\">\r\n              <img :src=\"`http://127.0.0.1:8000${user.profile_picture}`\" alt=\"프로필 사진\" class=\"profile-img\" />\r\n            </div>\r\n          </td>\r\n          <!-- 이름 -->\r\n          <td>\r\n            <RouterLink :to=\"{ name: 'ProfileView', params: { username: user.username } }\">\r\n              {{ user.username }}\r\n            </RouterLink>\r\n          </td>\r\n          <!-- 랭크 -->\r\n          <td>\r\n            <div class=\"rank-display\">\r\n              <img :src=\"getRankImage(user.rank_title)\" :alt=\"user.rank_title\" class=\"rank-icon\" />\r\n              {{ user.points }}\r\n            </div>\r\n          </td>\r\n          <!-- 게시물 수 -->\r\n          <td>{{ user.articles_count }}</td>\r\n          <!-- 좋아요 수 -->\r\n          <td>{{ user.likes_count }}</td>\r\n          <!-- 팔로워 수 -->\r\n          <td>{{ user.followers_count }}</td>\r\n          <!-- 추천 영화 -->\r\n          <td>\r\n            <div v-if=\"user.recommended_movie\">\r\n              <RouterLink :to=\"{ name: 'MovieDetail', params: { id: user.recommended_movie.movie.id } }\">\r\n                {{ user.recommended_movie.movie.title }}\r\n              </RouterLink>\r\n            </div>\r\n            <div v-else>\r\n              <span>X</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- RankInfoModal 컴포넌트 -->\r\n    <RankInfoModal v-if=\"showModal\" :isVisible=\"showModal\" @close=\"showModal = false\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport RankInfoModal from \"@/components/RankInfoModal.vue\";\r\n\r\n// Pinia 상태 관리\r\nconst store = useCounterStore();\r\nconst rankings = computed(() => store.rankings); // 순위를 고정시키기 위한 데이터\r\nconst showModal = ref(false);\r\n\r\n// 애니메이션 상태\r\nconst animatedIndexes = ref([]); // 애니메이션이 적용된 인덱스를 저장\r\n\r\nconst applySequentialAnimation = () => {\r\n  rankings.value.forEach((_, index) => {\r\n    setTimeout(() => {\r\n      animatedIndexes.value.push(index);\r\n    }, index * 300); // 각 행마다 300ms의 지연 추가\r\n  });\r\n};\r\n\r\n// 랭크 이미지를 가져오는 함수\r\nimport bronzeRank from \"@/assets/BronzeRank.png\";\r\nimport silverRank from \"@/assets/SilverRank.png\";\r\nimport goldRank from \"@/assets/GoldRank.png\";\r\nimport platinumRank from \"@/assets/PlatinumRank.png\";\r\nimport diamondRank from \"@/assets/DiamondRank.png\";\r\n\r\nconst getRankImage = (rankTitle) => {\r\n  switch (rankTitle) {\r\n    case \"Bronze\": return bronzeRank;\r\n    case \"Silver\": return silverRank;\r\n    case \"Gold\": return goldRank;\r\n    case \"Platinum\": return platinumRank;\r\n    case \"Diamond\": return diamondRank;\r\n    default: return bronzeRank;\r\n  }\r\n};\r\n\r\n// 컴포넌트 로드 시 실행\r\nonMounted(() => {\r\n  if (!store.isLogin) {\r\n    alert(\"로그인이 필요합니다.\");\r\n    store.router.push({ name: \"LogInView\" });\r\n  } else {\r\n    store.fetchRankings().then(() => {\r\n      applySequentialAnimation(); // 순차적으로 애니메이션 적용\r\n    });\r\n  }\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.text-center {\r\n  color: #4da0ff;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  animation: tracking-in-expand-fwd 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; /* 애니메이션 추가 */\r\n}\r\n\r\n@keyframes tracking-in-expand-fwd {\r\n  0% {\r\n    letter-spacing: -0.5em;\r\n    transform: translateZ(-700px);\r\n    opacity: 0;\r\n  }\r\n  40% {\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    transform: translateZ(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* 랭킹 컨테이너 */\r\n.ranking-container {\r\n  max-width: 1000px; /* 테이블 컨테이너 고정 */\r\n  margin: 40px auto;\r\n  text-align: center;\r\n  color: #f0f8ff; /* 연한 파랑 텍스트 */\r\n  overflow-x: auto; /* 가로 스크롤 활성화 */\r\n  padding-bottom: 10px; /* 스크롤 바와 겹치지 않도록 여백 추가 */\r\n}\r\n\r\n.info-container {\r\n  text-align: right;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.ranking-table {\r\n  width: 1000px; /* 고정된 테이블 너비 */\r\n  border-collapse: separate;\r\n  border-spacing: 0;\r\n  background-color: #1a2a44; /* 테이블 배경색 - 진한 남색 */\r\n  border: 1px solid #4169e1; /* 파랑색 외곽선 */\r\n  table-layout: fixed; /* 고정된 레이아웃 */\r\n}\r\n\r\n.ranking-table th,\r\n.ranking-table td {\r\n  padding: 10px;\r\n  text-align: center;\r\n  background-color: #243653; /* 셀 배경색 - 중간 남색 */\r\n  color: #e6f0ff; /* 텍스트 색상 - 연한 파랑 */\r\n  border-bottom: 1px solid #4169e1; /* 파랑색 하단 경계선 */\r\n  white-space: normal; /* 텍스트 줄바꿈 허용 */\r\n  word-wrap: break-word; /* 긴 단어 줄바꿈 */\r\n  overflow-wrap: break-word; /* 단어가 칸을 넘어가면 줄바꿈 */\r\n  font-size: 0.9rem; /* 폰트 크기 조정 */\r\n}\r\n\r\n.ranking-table th {\r\n  font-weight: bold;\r\n  background-color: #2a4066; /* 헤더 배경 - 더 밝은 남색 */\r\n  color: #f0faff; /* 헤더 텍스트 색상 */\r\n  border-bottom: 1px solid #6090d0; /* 헤더 경계선 */\r\n  font-size: 1rem; /* 헤더 글자 크기 */\r\n}\r\n\r\n.ranking-table th.with-border,\r\n.ranking-table td.with-border {\r\n  border-right: 1px solid #4169e1; /* 세로 구분선 */\r\n}\r\n\r\n.ranking-table tbody tr {\r\n  border-bottom: 1px solid #4169e1; /* 행 경계선 */\r\n}\r\n\r\n/* 테이블 너비 조정 */\r\n.ranking-table th:first-child,\r\n.ranking-table td:first-child {\r\n  width: 5%; /* 순위 */\r\n}\r\n\r\n.ranking-table th:nth-child(2),\r\n.ranking-table td:nth-child(2) {\r\n  width: 10%; /* 프로필 */\r\n}\r\n\r\n.ranking-table th:nth-child(3),\r\n.ranking-table td:nth-child(3) {\r\n  width: 15%; /* 이름 */\r\n}\r\n\r\n.ranking-table th:nth-child(4),\r\n.ranking-table td:nth-child(4) {\r\n  width: 10%; /* 랭크 */\r\n}\r\n\r\n.ranking-table th:nth-child(5),\r\n.ranking-table td:nth-child(5) {\r\n  width: 10%; /* 게시물 수 */\r\n}\r\n\r\n.ranking-table th:nth-child(6),\r\n.ranking-table td:nth-child(6) {\r\n  width: 10%; /* 좋아요 수 */\r\n}\r\n\r\n.ranking-table th:nth-child(7),\r\n.ranking-table td:nth-child(7) {\r\n  width: 10%; /* 팔로워 수 */\r\n}\r\n\r\n.ranking-table th:last-child,\r\n.ranking-table td:last-child {\r\n  width: 20%; /* 추천 영화 */\r\n}\r\n\r\n.medal-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n}\r\n\r\n/* 프로필 이미지 */\r\n.profile-img {\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 0.5px solid #87cefa; /* 연한 파랑 테두리 */\r\n}\r\n\r\n.rank-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: cover;\r\n}\r\n\r\n/* 라우터 링크 스타일 */\r\n.ranking-table a {\r\n  color: #e6f0ff; /* 링크 글자색을 셀과 동일하게 설정 */\r\n  text-decoration: none; /* 밑줄 제거 */\r\n  font-weight: normal;\r\n}\r\n\r\n.ranking-table a:hover {\r\n  color: #87cefa; /* 호버 시 연한 파랑색 */\r\n  text-decoration: underline; /* 호버 시 밑줄 표시 */\r\n}\r\n\r\n/* 애니메이션 */\r\n.text-focus-in {\r\n  animation: text-focus-in 1s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;\r\n}\r\n\r\n@keyframes text-focus-in {\r\n  0% {\r\n    filter: blur(12px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    filter: blur(0px);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* 숨김 */\r\n.hidden {\r\n  opacity: 0;\r\n}\r\n\r\n\r\n/* 네온 버튼 스타일 */\r\n.rankinfo {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 20px 0; /* 여백 조정 */\r\n  color: #4169e1;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  /* margin-right: 20px; */\r\n  margin-top: 40px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.rankinfo:hover {\r\n  background: #4169e1;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #4169e1, 0 0 25px #4169e1, 0 0 50px #4169e1,\r\n    0 0 200px #4169e1;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.rankinfo span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\n.rankinfo span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #4169e1);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n.rankinfo span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #4169e1);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\n.rankinfo span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #4169e1);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\n.rankinfo span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #4169e1);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./RankView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RankView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RankView.vue?vue&type=style&index=0&id=1d247557&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1d247557\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"edit-container\">\r\n    <h1 class=\"title\">게시글 수정</h1>\r\n\r\n    <div v-if=\"posterUrl\" class=\"poster-container\">\r\n      <!-- 영화 제목 -->\r\n      <h3 class=\"poster-title\">선택한 영화: {{ title }}</h3>\r\n      <!-- 영화 포스터 -->\r\n      <img :src=\"posterUrl\" alt=\"영화 포스터\" class=\"poster-image\" />\r\n    </div>\r\n\r\n    <!-- 별점 매기기 -->\r\n    <div class=\"stars\">\r\n      <div\r\n        v-for=\"n in 10\"\r\n        :key=\"n\"\r\n        class=\"star\"\r\n        :class=\"{ filled: n <= hoverRating || n <= selectedRating }\"\r\n        @mouseover=\"hoverStar(n)\"\r\n        @mouseleave=\"clearHover\"\r\n        @click=\"selectRating(n)\"\r\n      ></div>\r\n    </div>\r\n    <p class=\"rating-text\">선택한 별점: {{ selectedRating }} / 10</p>\r\n\r\n    <!-- 게시글 수정 폼 -->\r\n    <form @submit.prevent=\"submitEdit\" class=\"form-container\">\r\n      <div class=\"form-group\">\r\n        <input\r\n          v-model=\"title\"\r\n          id=\"title\"\r\n          type=\"text\"\r\n          class=\"form-input styled-input\"\r\n          placeholder=\"제목을 입력하세요\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          v-model=\"content\"\r\n          id=\"content\"\r\n          class=\"form-textarea styled-textarea\"\r\n          placeholder=\"내용을 입력하세요\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"submit-button\">수정 저장</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue'\r\n  import { useRoute, useRouter } from 'vue-router'\r\n  import { useCounterStore } from '@/stores/counter'\r\n  import axios from 'axios'\r\n  \r\n  const store = useCounterStore()\r\n  const route = useRoute()\r\n  const router = useRouter()\r\n  \r\n  const title = ref('')\r\n  const content = ref('')\r\n  const posterUrl = ref('') // 포스터 URL\r\n  \r\n  onMounted(() => {\r\n    // 기존 게시글 내용 로드\r\n    axios.get(`${store.API_URL}/api/v1/communities/${route.params.id}/`, {\r\n      headers: { Authorization: `Token ${store.token}` }\r\n    })\r\n      .then((res) => {\r\n        title.value = res.data.title\r\n        content.value = res.data.content\r\n        console.log(res.data.movie.poster_url); // 포스터 URL 출력 확인\r\n        posterUrl.value = res.data.movie.poster_url // 포스터 URL 설정\r\n      })\r\n      .catch((err) => console.log(err))\r\n  })\r\n  \r\n  // 수정 데이터 제출\r\n  const submitEdit = () => {\r\n    axios.put(`${store.API_URL}/api/v1/communities/${route.params.id}/`, {\r\n      title: title.value,\r\n      content: content.value,\r\n      rating: selectedRating.value\r\n    }, {\r\n      headers: { Authorization: `Token ${store.token}` }\r\n    })\r\n      .then(() => {\r\n        alert('수정이 완료되었습니다.')\r\n\r\n          // store에 있는 articles 배열 업데이트\r\n        store.getSortedArticles('recent');\r\n        router.push({ name: 'DetailView', params: { id: route.params.id } }) // 수정 후 상세 페이지로 이동\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n  // 별점 관련 함수 ---------------\r\n\r\nconst hoverRating = ref(0); // 마우스 위치에 따라 표시되는 별점\r\n\r\n// 마우스 오버 함수\r\nconst hoverStar = (value) => {\r\n  hoverRating.value = value; // 마우스 위치에 따라 별점 변경\r\n};\r\n\r\n// 마우스 아웃 함수\r\nconst clearHover = () => {\r\n  hoverRating.value = 0; // 마우스가 별에서 떠나면 초기화\r\n};\r\nconst selectedRating = ref(0);\r\n\r\nconst selectRating = (rating) => {\r\n  selectedRating.value = rating; // 선택한 별점 업데이트\r\n};\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .edit-container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background: #121212;\r\n    color: #fff;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .title {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .cancel-btn {\r\n    background: #ff4d4d;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .select-movie-btn-container {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .select-movie-btn {\r\n    background: #ff9800;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .poster-container {\r\n    text-align: center;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  .poster-title {\r\n    margin-bottom: 10px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .poster-image {\r\n    max-width: 200px;\r\n    height: auto;\r\n    display: block;\r\n    margin: 10px auto;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .stars {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .star {\r\n    width: 24px;\r\n    height: 24px;\r\n    background: url(\"@/assets/images/gray-star.png\") no-repeat center;\r\n    background-size: contain;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .star.filled {\r\n    background: url(\"@/assets/images/yellow-star.png\") no-repeat center;\r\n    background-size: contain;\r\n  }\r\n  \r\n  .rating-text {\r\n    text-align: center;\r\n  }\r\n  \r\n  .form-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .styled-input,\r\n  .styled-textarea {\r\n    width: 100%;\r\n    padding: 15px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 6px;\r\n    background: #222;\r\n    color: #fff;\r\n  }\r\n  \r\n  .styled-input::placeholder,\r\n  .styled-textarea::placeholder {\r\n    color: #888;\r\n  }\r\n  \r\n  .styled-input:focus,\r\n  .styled-textarea:focus {\r\n    outline: none;\r\n    border-color: #ff9800;\r\n    box-shadow: 0 0 5px rgba(255, 152, 0, 0.7);\r\n  }\r\n  \r\n  .styled-textarea {\r\n    min-height: 150px;\r\n    resize: vertical;\r\n  }\r\n  \r\n  .submit-button {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    background-color: #ff9800;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    text-align: center;\r\n  }\r\n  \r\n  .submit-button:hover {\r\n    background-color: #e88e00;\r\n  }\r\n  </style>\r\n  ","import script from \"./EditView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditView.vue?vue&type=style&index=0&id=3b05577c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3b05577c\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"modal-overlay\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">새 컬렉션 만들기</h5>\r\n        <button class=\"btn-close\" @click=\"$emit('close')\">&times;</button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <!-- <p>새 컬렉션 이름을 입력하세요:</p> -->\r\n        <input\r\n          v-model=\"categoryName\"\r\n          class=\"category-input\"\r\n          placeholder=\"컬렉션 이름을 입력하세요.\"\r\n        />\r\n        <div class=\"modal-actions\">\r\n          <button class=\"btn btn-create\" @click=\"createCategory\">생성</button>\r\n          <button class=\"btn btn-cancel\" @click=\"$emit('close')\">취소</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categoryName: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async createCategory() {\r\n      if (!this.categoryName.trim()) {\r\n        alert(\"컬렉션 이름을 입력하세요.\");\r\n        return;\r\n      }\r\n      try {\r\n        const store = useCounterStore();\r\n        const { data } = await axios.post(\r\n          `http://127.0.0.1:8000/accounts/categories/create/`,\r\n          { name: this.categoryName },\r\n          {\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }\r\n        );\r\n        alert(\"컬렉션이 생성되었습니다.\");\r\n        this.$emit(\"categoryCreated\", data); // 생성된 컬렉션를 부모 컴포넌트로 전달\r\n        this.$emit(\"close\"); // 모달 닫기\r\n      } catch (error) {\r\n        console.error(\"Error creating category:\", error);\r\n        alert(\"컬렉션 생성에 실패했습니다.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 모달 전체 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(1px); /* 배경 흐림 효과 */\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-content {\r\n  background: linear-gradient(145deg, #1e1e1e, #2c2c2c);\r\n  color: white;\r\n  padding: 25px;\r\n  border-radius: 15px;\r\n  width: 400px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4),\r\n              0 4px 8px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\n/* 모달 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n/* 닫기 버튼 */\r\n.btn-close {\r\n  background: none;\r\n  border: none;\r\n  color: #ccc;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n}\r\n.btn-close:hover {\r\n  color: #fff;\r\n}\r\n\r\n/* 입력 필드 */\r\n.category-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #444;\r\n  background: #1f1f1f;\r\n  color: white;\r\n  margin-bottom: 10px;\r\n}\r\n.category-input::placeholder {\r\n  color: #666;\r\n}\r\n\r\n/* 모달 하단 버튼 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.btn-create {\r\n  background: #3a3a3a;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-create:hover {\r\n  background: #555555;\r\n}\r\n\r\n.btn-cancel {\r\n  background: #c0392b;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n.btn-cancel:hover {\r\n  background: #e74c3c;\r\n}\r\n</style>\r\n","import { render } from \"./CreateCategoryModal.vue?vue&type=template&id=5083d0e0&scoped=true\"\nimport script from \"./CreateCategoryModal.vue?vue&type=script&lang=js\"\nexport * from \"./CreateCategoryModal.vue?vue&type=script&lang=js\"\n\nimport \"./CreateCategoryModal.vue?vue&type=style&index=0&id=5083d0e0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5083d0e0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"text-center tracking-in-expand-fwd my-4\">PROFILE</h1>\r\n    <div class=\"profile-page\">\r\n      <!-- 좌측: 프로필 정보 -->\r\n      <div class=\"profile-info\">\r\n        <div class=\"follow-button-wrapper\">\r\n        <div class=\"profile-header\">\r\n          \r\n          <img :src=\"`http://127.0.0.1:8000${user.profile_picture}`\" class=\"profile-img\" alt=\"프로필 사진\">\r\n          <div class=\"profile-basic\">\r\n            <h1 class=\"profile-title\">{{ user.username }}</h1>\r\n            <div class=\"profile-follow-stats\">\r\n              <p>팔로잉 {{ user.followingsCount }}</p><hr/><hr/>\r\n              <p>팔로워 {{ user.followersCount }}</p>\r\n            </div>\r\n            \r\n          </div>\r\n          </div>\r\n          <button v-if=\"!isOwnProfile\" class=\"follow-button\" @click=\"toggleFollow\">\r\n              {{ isFollowed ? '언팔로우' : '팔로우' }}\r\n            </button>\r\n        </div>\r\n        <div class=\"profile-details\">\r\n          <div class=\"stats-row\">\r\n            <div class=\"stat-box\">\r\n              <img :src=\"getRankImage(user.rank_title)\" alt=\"랭크 이미지\" class=\"rank-icon-small\" />\r\n              <p class=\"stat-num\">{{ user.points }}</p>\r\n            </div>\r\n            <div class=\"stat-box\">\r\n              <h1>📝</h1>\r\n              <p class=\"stat-num-count\">{{ user.articlesCount }}</p>\r\n            </div>\r\n            <div class=\"stat-box\">\r\n              <h1>❤️</h1>\r\n              <p class=\"stat-num\">{{ user.likesCount }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 우측: 추천 영화 -->\r\n      <div class=\"recommended-movie-section\">\r\n        <h2>이거 안보면 진짜 후회해요!</h2>\r\n        <div v-if=\"!recommendedMovie\" class=\"not_yet_recommend\">\r\n          <p>아직 추천하는 영화가 없어요.</p>\r\n          <a v-if=\"isOwnProfile\" class=\"add-movie\" @click=\"openRecommendationModal\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            영화 추천하기\r\n          </a>\r\n        </div>\r\n        <div v-else class=\"yes_recommend\">\r\n          <div class=\"yes-yes-recommend\">\r\n            <img :src=\"recommendedMovie.posterUrl\"  alt=\"추천 영화 포스터\" />\r\n            <a v-if=\"isOwnProfile\" class=\"add-movie-after\" @click=\"editRecommendation\" >\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              영화 수정\r\n            </a>\r\n          </div>\r\n          \r\n          <div class=\"recommend-detail\">\r\n          <h3>{{ recommendedMovie.title }}</h3>\r\n          <p class=\"recommendation-reason\">추천 이유: {{ recommendedMovie.reason }}</p>\r\n        </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 유저의 컬렉션 섹션 -->\r\n    <div class=\"category-section\">\r\n      <div class=\"category-header\">\r\n        <h2>{{ user.username }}의 컬렉션</h2>\r\n        <a v-if=\"isOwnProfile\" class=\"add-category\" @click.prevent=\"showCreateCategoryModal = true\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            새 컬렉션\r\n        </a>\r\n      </div>\r\n      <div v-if=\"categories.length === 0\" class=\"empty-message\">\r\n        <p>아직 컬렉션이 없습니다.</p>\r\n      </div>\r\n\r\n      <div v-else class=\"categories\">\r\n      <div\r\n        v-for=\"category in categories\"\r\n        :key=\"category.id\"\r\n        class=\"category-card\"\r\n        @click=\"goToCategoryDetail(category.id)\"\r\n      >\r\n        <!-- 영화 포스터 또는 디폴트 이미지 -->\r\n        <img :src=\"category.movies.length > 0 ? getFullPosterUrl(category.movies[0].poster_url) : 'http://127.0.0.1:8000/media/default_categories/default-category.png'\" \r\n        alt=\"컬렉션 이미지\" \r\n        class=\"category-poster\">\r\n      <h3>{{ category.name }}</h3>\r\n      <p>영화 개수: {{ category.movies.length }}</p>\r\n    </div>\r\n  </div>\r\n      \r\n  <!-- 새 컬렉션 추가 모달 -->\r\n  <CreateCategoryModal\r\n    v-if=\"showCreateCategoryModal\"\r\n    @close=\"closeCreateCategoryModal\"\r\n    @categoryCreated=\"addCategory\"\r\n  />\r\n    </div>\r\n\r\n    \r\n\r\n    <!-- 추천 영화 모달 -->\r\n    <div v-show=\"showRecommendationModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>추천 영화 선택</h2>\r\n          <input v-model=\"searchQuery\" @input=\"searchMovies\" placeholder=\"영화 제목 입력\" />\r\n          <!-- 영화 검색 결과 -->\r\n          <ul>\r\n            <li v-for=\"movie in searchResults\" :key=\"movie.id\">\r\n              {{ movie.title }}\r\n              <button @click=\"selectRecommendedMovie(movie)\">선택</button>\r\n            </li>\r\n          </ul>\r\n\r\n          <!-- 선택된 영화 포스터 및 정보 -->\r\n          <div v-if=\"selectedMovie\" class=\"selected-movie-preview\">\r\n            <h3>선택된 영화:</h3>\r\n            <img :src=\"selectedMovie.posterUrl\" alt=\"선택된 영화 포스터\" class=\"movie-poster-preview\" />\r\n            <p>{{ selectedMovie.title }}</p>\r\n          </div>\r\n\r\n          <!-- 추천 이유 작성 -->\r\n          <textarea\r\n            v-model=\"recommendationReason\"\r\n            placeholder=\"추천 이유를 작성해주세요\"\r\n            class=\"recommendation-reason\"\r\n          ></textarea>\r\n          <div class=\"modal-actions\">\r\n            <button class=\"save-btn\" @click=\"saveRecommendation\">완료</button>\r\n            <button class=\"close-modal-btn\" @click=\"closeRecommendationModal\">닫기</button>\r\n          </div>\r\n      </div>\r\n      <!-- 컬렉션 추가 모달 -->\r\n    <AddToCategoryModal\r\n      v-if=\"showCategoryModal\"\r\n      :movie-id=\"movie.id\"\r\n      @close=\"showCategoryModal = false\"\r\n    />\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, watch } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useCounterStore } from '@/stores/counter';\r\nimport CreateCategoryModal from \"@/components/CreateCategoryModal.vue\";\r\n\r\n// Vue Router와 Pinia 스토어 사용\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst store = useCounterStore();\r\n\r\nconst toggleFollow = async () => {\r\n  console.log(\"Toggle Follow clicked\"); // 디버깅용\r\n  try {\r\n    const response = await axios.post(\r\n      `http://127.0.0.1:8000/accounts/${user.value.id}/follow/`,\r\n      null,\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${store.token}`,\r\n        },\r\n      }\r\n    );\r\n    // 응답 데이터를 사용하여 상태 업데이트\r\n    isFollowed.value = response.data.is_followed;\r\n    user.value.followersCount = response.data.followers_count;\r\n    user.value.followingsCount = response.data.followings_count;\r\n\r\n    console.log(\"Follow toggle success:\", response.data); // 디버깅용\r\n  } catch (error) {\r\n    console.error(\"Error toggling follow:\", error);\r\n  }\r\n};\r\n\r\nconst getFullPosterUrl = (posterUrl) => {\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\"; // TMDB 이미지 베이스 URL\r\n  return `${baseUrl}${posterUrl}`;\r\n};\r\n\r\n// 랭크 이미지를 가져오는 함수\r\nimport bronzeRank from '@/assets/BronzeRank.png';\r\nimport silverRank from '@/assets/SilverRank.png';\r\nimport goldRank from '@/assets/GoldRank.png';\r\nimport platinumRank from '@/assets/PlatinumRank.png';\r\nimport diamondRank from '@/assets/DiamondRank.png';\r\n\r\nconst getRankImage = (rankTitle) => {\r\n  switch (rankTitle) {\r\n    case \"Bronze\":\r\n      return bronzeRank;\r\n    case \"Silver\":\r\n      return silverRank;\r\n    case \"Gold\":\r\n      return goldRank;\r\n    case \"Platinum\":\r\n      return platinumRank;\r\n    case \"Diamond\":\r\n      return diamondRank;\r\n    default:\r\n      return bronzeRank; // 기본값\r\n  }\r\n};\r\n\r\n// 유저 데이터 상태 관리\r\nconst user = ref({\r\n  username: '',\r\n  rank_title: '',\r\n  followingsCount: 0,\r\n  followersCount: 0,\r\n  articlesCount: 0, // 작성한 게시글 수\r\n  likesCount: 0, // 받은 좋아요 수\r\n});\r\nconst isFollowed = ref(false);\r\nconst categories = ref([]);\r\nconst showCreateCategoryModal = ref(false); // 모달 표시 여부\r\nconst showRecommendationModal = ref(false);\r\nconst recommendedMovie = ref(null); // 추천 영화 상태\r\nconst recommendationReason = ref('');\r\nconst searchQuery = ref('');\r\nconst searchResults = ref([]);\r\nconst selectedMovie = ref(null); // 선택된 영화 상태 추가\r\n\r\n// 현재 프로필이 로그인된 사용자의 것인지 확인\r\nconst isOwnProfile = computed(() => store.user.username === route.params.username);\r\n\r\n// API를 통해 프로필 데이터 가져오기\r\nconst fetchProfile = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `http://127.0.0.1:8000/accounts/profile/${route.params.username}/`, \r\n      {\r\n        headers: {\r\n          Authorization: `Token ${store.token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    // Use store.getRankTitle to calculate the rank_title if not provided\r\n    const rankTitle = data.rank_title || store.getRankTitle(data.points);\r\n\r\n    user.value = {\r\n      id: data.id,\r\n      username: data.username,\r\n      points: data.points,\r\n      rank_title: rankTitle, // Use calculated rank_title\r\n      followingsCount: data.followings_count,\r\n      followersCount: data.followers_count,\r\n      articlesCount: data.articles_count,\r\n      likesCount: data.likes_count,\r\n      profile_picture: data.profile_image,\r\n      // reason: data.recommended_movie.reason, // 추천 이유\r\n    };\r\n\r\n    // 추천 영화 데이터 처리\r\n    if (data.recommended_movie) {\r\n      recommendedMovie.value = {\r\n        id: data.recommended_movie.movie.id,\r\n        title: data.recommended_movie.movie.title,\r\n        posterUrl: getFullPosterUrl(data.recommended_movie.movie.poster_url),\r\n        reason: data.recommended_movie.reason,\r\n      };\r\n      console.log(\"추천 영화 로드 성공:\", recommendedMovie.value);\r\n    } else {\r\n      recommendedMovie.value = null;\r\n      console.log(\"추천 영화 데이터 없음\");\r\n    }\r\n    console.log(\"프로필 데이터 로드 성공:\", user.value);\r\n    console.log(\"추천 영화 데이터:\", recommendedMovie.value);\r\n\r\n    console.log(user.value);\r\n    isFollowed.value = data.is_followed;\r\n    categories.value = data.categories;\r\n    // recommendedMovie.value = data.recommended_movie || null; // 추천 영화 데이터\r\n  } catch (error) {\r\n    console.error('Error fetching profile:', error);\r\n  }\r\n};\r\n\r\n// 컬렉션 상세 페이지로 이동\r\nconst goToCategoryDetail = (categoryId) => {\r\n  router.push(`/categories/${categoryId}`);\r\n};\r\n\r\n// 새 컬렉션 모달 열기/닫기\r\nconst openCreateCategoryModal = () => {\r\n  showCreateCategoryModal.value = true;\r\n};\r\nconst closeCreateCategoryModal = () => {\r\n  showCreateCategoryModal.value = false;\r\n};\r\n\r\n// 새 컬렉션 목록에 추가\r\nconst addCategory = (category) => {\r\n  categories.value.push(category);\r\n};\r\n\r\n// 추천 영화 모달 열기/닫기\r\n// const openRecommendationModal = () => (showRecommendationModal.value = true);\r\nconst openRecommendationModal = () => {\r\n  console.log(\"추천 수정 클릭됨\");\r\n  console.log(\"모달 상태 이전:\", showRecommendationModal.value);\r\n  showRecommendationModal.value = true; // 모달을 열기 위해 값 변경\r\n  console.log(\"모달 상태 이후:\", showRecommendationModal.value);\r\n};\r\nconst closeRecommendationModal = () => {\r\n  showRecommendationModal.value = false;\r\n  searchQuery.value = '';\r\n  searchResults.value = [];\r\n  recommendationReason.value = '';\r\n};\r\n\r\n// 영화 검색\r\nconst searchMovies = async () => {\r\n  if (!searchQuery.value.trim()) {\r\n    searchResults.value = [];\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.get(`${store.API_URL}/accounts/movies/search/`, {\r\n      params: { title: searchQuery.value.trim() },\r\n      headers: { Authorization: `Token ${store.token}` },\r\n    });\r\n    searchResults.value = response.data;\r\n  } catch (error) {\r\n    console.error('Error searching movies:', error);\r\n  }\r\n};\r\n\r\nconst selectRecommendedMovie = (movie) => {\r\n  // 선택된 영화 데이터를 업데이트\r\n  selectedMovie.value = {\r\n    id: movie.id,\r\n    title: movie.title,\r\n    posterUrl: getFullPosterUrl(movie.poster_url), // 포스터 URL 생성\r\n  };\r\n\r\n  // 추천 영화 데이터에도 반영 (저장을 위해 필요)\r\n  recommendedMovie.value = {\r\n    id: movie.id,\r\n    title: movie.title,\r\n    posterUrl: getFullPosterUrl(movie.poster_url),\r\n  };\r\n\r\n  console.log(\"선택된 영화 데이터:\", selectedMovie.value); // 디버깅용\r\n};\r\n\r\n// 추천 영화 저장\r\nconst saveRecommendation = async () => {\r\n  if (!recommendedMovie.value || !recommendedMovie.value.id || !recommendationReason.value.trim()) {\r\n    alert(\"영화와 추천 이유를 모두 입력해주세요.\");\r\n    console.error(\"추천 영화 저장 실패 - 데이터 확인:\", {\r\n      movie: recommendedMovie.value,\r\n      reason: recommendationReason.value,\r\n    });\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\r\n      `${store.API_URL}/accounts/recommend-movie/`,\r\n      {\r\n        movie_id: recommendedMovie.value.id,\r\n        reason: recommendationReason.value.trim(),\r\n      },\r\n      { headers: { Authorization: `Token ${store.token}` } }\r\n    );\r\n\r\n    // 서버 응답을 추천 영화 데이터로 반영\r\n    recommendedMovie.value = {\r\n      id: response.data.movie.id,\r\n      title: response.data.movie.title,\r\n      posterUrl: getFullPosterUrl(response.data.movie.poster_url),\r\n      reason: response.data.reason,\r\n    };\r\n\r\n    console.log(\"추천 영화 저장 성공:\", response.data);\r\n\r\n    closeRecommendationModal();\r\n    alert(\"추천 영화가 저장되었습니다!\");\r\n  } catch (error) {\r\n    console.error(\"추천 영화 저장 중 오류 발생:\", error.response?.data || error);\r\n  }\r\n};\r\n\r\n// 추천 영화 수정\r\nconst editRecommendation = () => {\r\n  console.log(\"추천 수정 버튼 클릭됨\"); // 디버깅용 로그\r\n  openRecommendationModal();\r\n  recommendationReason.value = recommendedMovie.value.reason || '';\r\n};\r\n\r\nonMounted(() => {\r\n  fetchProfile();\r\n});\r\n\r\n// 라우트 변경을 감지하고 새 데이터를 로드\r\nwatch(() => route.params.username, (newUsername, oldUsername) => {\r\n  console.log(`Route username changed: ${oldUsername} -> ${newUsername}`);\r\n  fetchProfile();\r\n});\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n\r\n\r\n\r\n.container {\r\n  margin-top: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.text-center {\r\n  color: #e02ff0;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  animation: tracking-in-expand-fwd 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) both; /* 애니메이션 추가 */\r\n}\r\n\r\n@keyframes tracking-in-expand-fwd {\r\n  0% {\r\n    letter-spacing: -0.5em;\r\n    transform: translateZ(-700px);\r\n    opacity: 0;\r\n  }\r\n  40% {\r\n    opacity: 0.6;\r\n  }\r\n  100% {\r\n    transform: translateZ(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n\r\n/* 전체 페이지 스타일 */\r\n.profile-page {\r\n  width: 80%; /* 전체 컨테이너 너비를 80%로 설정 */\r\n  max-width: 1200px; /* 최대 고정 너비 설정 */\r\n  margin: 0 auto; /* 중앙 정렬 */\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr; /* 좌측 1, 우측 2 비율 */\r\n  gap: 20px;\r\n  padding: 20px;\r\n  /* background-color: #e02ff017; */\r\n  color: #f5f5f5;\r\n  border-radius: 10px;\r\n}\r\n\r\n\r\n/* 프로필 정보 (좌측 섹션) */\r\n.profile-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 425px;\r\n  padding: 30px;\r\n  background-color: #e02ff01c;\r\n  border-radius: 10px;\r\n  margin: 20px;\r\n  position: relative; /* 하단 고정을 위해 부모 요소 위치 기준 설정 */\r\n  gap: 20px;\r\n  \r\n}\r\n\r\n.profile-details {\r\n  position: absolute; /* 부모 요소의 하단에 고정 */\r\n  bottom: 0; /* 아래쪽 여백 제거 */\r\n  left: 0;\r\n  right: 0; /* 좌우로 꽉 차게 */\r\n  padding: 0px 20px; /* 내부 여백 */\r\n  margin-top: auto; /* 프로필 헤더와 버튼 사이 고정된 거리 확보 */\r\n  border-top: 1px solid #e02ff06b; /* 상단에 경계선 추가 */\r\n  /* padding-top: 15px; */\r\n}\r\n\r\n.profile-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 30px;\r\n  justify-content: center; /* 중앙 정렬 */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-header img {\r\n  display: flex;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 1.2px solid #e02ff0;\r\n}\r\n\r\n\r\n.profile-basic {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n}\r\n\r\n.profile-title {\r\n  /* align-items: center; */\r\n  font-size: 2.5rem;\r\n  color: white;\r\n  margin-bottom: 5px;\r\n  /* font-weight: bold; */\r\n}\r\n\r\n.profile-follow-stats {\r\n  display: flex;\r\n  gap: 20px;\r\n  font-size: 1rem;\r\n  color: #f5f5f5;\r\n  justify-content: space-between; /* 왼쪽 정렬 */\r\n}\r\n\r\n.follow-button-wrapper {\r\n  margin-top: 20px; /* 팔로잉/팔로워와 버튼 간격 */\r\n  text-align: right; /* 버튼을 중앙 정렬 */\r\n}\r\n\r\n\r\n.follow-button {\r\n  margin-top: -10px;\r\n  margin-bottom: 20px;\r\n  padding: 8px;\r\n  width: 50%; /* 버튼 길이를 프로필 스탯에 맞춤 */\r\n  background-color: #3897f0;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  border-radius: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.follow-button:hover {\r\n  background-color: #217ac0;\r\n}\r\n\r\n\r\n/* 랭크 이미지 */\r\n.rank-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n/* 랭크 이미지 및 유저 이름 */\r\n.username-section {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.rank-icon-small {\r\n  width: 58px;\r\n  height: 58px;\r\n}\r\n\r\n.rank-stats {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n\r\n/* 포인트, 게시글, 좋아요 수 */\r\n.stats-row {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  /* margin-top: 20px; */\r\n  /* background-color: #e02ff02c; */\r\n  padding: 10px 0;\r\n  text-align: center;\r\n  /* border: 1px solid #e02ff06b; */\r\n  /* border-top: 1px solid #e02ff06b; */\r\n  color: white;\r\n  font-size: 2rem;\r\n}\r\n\r\n.stat-box {\r\n  /* background-color: #282b3b; */\r\n  padding: 10px 20px;\r\n  margin-top: 0px;\r\n  /* border-radius: 10px; */\r\n  text-align: center;\r\n  color: white;\r\n  font-size: 1rem;\r\n}\r\n.stat-num {\r\n  padding-top: 20px;\r\n}\r\n.stat-num-count {\r\n  padding-top: 20px;\r\n  padding-right: 5px;\r\n}\r\n/* 추천 영화 섹션 */\r\n.not_yet_recommend {\r\n  text-align: center;\r\n  padding-top: 15%;\r\n  flex-direction: column;\r\n  display: flex;\r\n}\r\n\r\n.yes_recommend {\r\n  display: flex;\r\n  flex-direction: row; /* 가로 정렬 */\r\n  align-items: center; /* 세로 중앙 정렬 */\r\n  justify-content: space-between; /* 양 끝 정렬 */\r\n  gap: 20px; /* 간격 추가 */\r\n  width: 100%; /* 부모 요소 너비 */\r\n}\r\n\r\n\r\n.yes_recommend img {\r\n  width: 150px; /* 이미지 크기 고정 */\r\n  height: auto;\r\n  object-fit: cover; /* 이미지 비율 유지 */\r\n  border-radius: 10px;\r\n  border: 2px solid #e02ff0; /* 테두리 */\r\n}\r\n\r\n.recommend-detail {\r\n  display: flex;\r\n  flex-direction: column; /* 세로 정렬 */\r\n  justify-content: center;\r\n  text-align: left;\r\n}\r\n\r\n.recommend-detail h3 {\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.recommend-detail p {\r\n  display: block; /* 블록 레벨 요소 */\r\n  font-size: 1rem; /* 글씨 크기 */\r\n  color: #ffffff; /* 하얀색 텍스트 */\r\n  margin-top: 5px; /* 제목과의 간격 */\r\n  text-align: left; /* 왼쪽 정렬 */\r\n  background: none; /* 박스 배경 제거 */\r\n  border: none; /* 경계선 제거 */\r\n  padding: 0; /* 내부 여백 제거 */\r\n}\r\n\r\n.yes_yes_recommend {\r\n  flex-direction: column;\r\n}\r\n\r\n.add-movie {\r\n  \r\n  bottom: 20px; /* 하단 여백 */\r\n  left: 20px; /* 좌측 여백 */\r\n}\r\n.recommended-movie-section {\r\n  position: relative;\r\n  display: flex;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px;\r\n  background-color: #e02ff01c;\r\n  border-radius: 10px;\r\n  height: 425px;\r\n  margin: 20px;\r\n  \r\n  gap: 20px;\r\n}\r\n\r\n.recommended-movie-section > div {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px; /* 포스터와 텍스트 간 간격 */\r\n}\r\n\r\n.recommended-movie-section img {\r\n  width: 150px;\r\n  height: 225px;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #e02ff0;\r\n}\r\n\r\n.recommended-movie-section h3 {\r\n  font-size: 1rem;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n\r\n.recommendation-reason {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 7; /* 최대 3줄까지만 보이게 설정 */\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-align: left; /* 추천 이유 왼쪽 정렬 */\r\n  /* text-overflow: ellipsis; */\r\n  /* white-space: normal; */\r\n  font-size: 0.9rem; /* 글자 크기 조정 */\r\n  line-height: 1.4; /* 줄 간격 조정 */\r\n  color: #aaa; /* 텍스트 색상 */\r\n  margin: 5px 0;\r\n\r\n  width: 100%; /* 텍스트박스 전체 너비 */\r\n  height: 150px; /* 높이 지정 */\r\n  /* margin-top: 10px; */\r\n  padding: 10px;\r\n  /* font-size: 1rem; */\r\n  /* border: 1px solid #ddd; */\r\n  border-radius: 5px;\r\n  resize: none;\r\n}\r\n\r\n.recommended-movie-section h2 {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 15px;\r\n  color: #f5f5f5;\r\n}\r\n\r\n.recommended-movie-section p {\r\n  font-size: 0.9rem;\r\n  color: #aaa;\r\n  margin: 5px 0;\r\n}\r\n\r\n\r\n\r\n\r\n/* 컬렉션 섹션 */\r\n.category-section {\r\n  width: 950px;\r\n  text-align: left; /* 전체 섹션 텍스트 왼쪽 정렬 */\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  \r\n}\r\n.category-header h2 {\r\n  font-size: 2.2rem;\r\n  /* font-weight: bold; */\r\n  /* color: #333; */\r\n}\r\n\r\n.empty-message {\r\n  text-align: left;\r\n  font-size: 1rem;\r\n  color: #999;\r\n  padding: 0 0 20px 0;\r\n}\r\n\r\n.categories {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  \r\n}\r\n\r\n.category-card {\r\n  width: calc(25% - 20px);\r\n  border: 1px solid #e02ff0;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.category-card:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.category-poster {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.category-card h3 {\r\n  font-size: 18px;\r\n  margin: 10px;\r\n}\r\n\r\n.category-card p {\r\n  font-size: 14px;\r\n  margin: 0 10px 10px;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: #2b2b2b; /* 어두운 배경 */\r\n  z-index: 9999;\r\n  width: 80%;\r\n  max-width: 500px; /* 모달 최대 너비 */\r\n  max-height: 80%;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4), 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  color: #fff; /* 흰색 텍스트 */\r\n  \r\n}\r\n\r\n.modal-content {\r\n  background-color: #1e1e1e; /* 어두운 배경 */\r\n  color: #ffffff; /* 흰색 텍스트 */\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.modal-content h2 {\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  color: #ffffff;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.modal-content input {\r\n  background-color: #333333; /* 입력 필드 배경 */\r\n  color: #ffffff; /* 흰색 텍스트 */\r\n  border: 1px solid #555555; /* 필드 경계선 */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n.modal-content input::placeholder {\r\n  color: #bbbbbb; /* 플레이스홀더 색상 */\r\n}\r\n\r\n.modal-content ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-height: 200px; /* 리스트의 최대 높이를 제한 */\r\n  overflow-y: auto; /* 스크롤이 필요한 경우 표시 */\r\n}\r\n\r\n.modal-content ul li {\r\n  background-color: #2a2a2a; /* 리스트 아이템 배경 */\r\n  color: #ffffff; /* 텍스트를 흰색으로 변경 */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content ul li:last-child {\r\n  border-bottom: none; /* 마지막 아이템의 테두리 제거 */\r\n}\r\n\r\n.modal-content ul li button {\r\n  background-color: #e02ff0; /* 버튼 배경색 */\r\n  color: #ffffff; /* 버튼 텍스트 색상 */\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-content ul li button:hover {\r\n  background-color: #ff3ff3; /* 호버 시 더 밝은 색상 */\r\n}\r\n\r\ntextarea.recommendation-reason {\r\n  background-color: #333333; /* 텍스트박스 배경 */\r\n  color: #ffffff; /* 흰색 텍스트 */\r\n  border: 1px solid #555555; /* 경계선 */\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.selected-movie-preview {\r\n  display: flex;\r\n  flex-direction: column; /* 수직 정렬 */\r\n  align-items: center; /* 중앙 정렬 */\r\n  gap: 10px; /* 간격 추가 */\r\n  margin-top: 20px;\r\n}\r\n\r\n.selected-movie-preview h3 {\r\n  font-size: 1.2rem;\r\n  color: #ffffff;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.selected-movie-preview img {\r\n  width: 150px; /* 포스터 크기 조정 */\r\n  height: 225px;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.selected-movie-preview p {\r\n  font-size: 1rem;\r\n  color: #bbbbbb;\r\n}\r\n\r\n.recommendation-reason {\r\n  width: 100%;\r\n  height: 80px; /* 텍스트박스 높이 */\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid #444;\r\n  border-radius: 4px;\r\n  background: #1f1f1f;\r\n  color: #fff;\r\n  resize: none;\r\n}\r\n\r\n.save-btn,\r\n.close-modal-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #e02ff0; /* 완료 버튼 색상 */\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #ff3ff2ad; /* 호버 효과 */\r\n}\r\n\r\n.close-modal-btn {\r\n  background-color: #505050; /* 닫기 버튼 색상 */\r\n}\r\n\r\n.close-modal-btn:hover {\r\n  background-color: #505050a8; /* 호버 효과 */\r\n}\r\n\r\n/* 버튼 부모 요소: flexbox를 사용해 우측 정렬 및 한 줄 배치 */\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end; /* 버튼을 우측 정렬 */\r\n  gap: 10px; /* 버튼 간 간격 */\r\n  margin-top: 20px; /* 상단 여백 */\r\n}\r\n\r\n\r\n\r\n\r\n.hidden {\r\n  display: none; /* 숨김 */\r\n}\r\n\r\n/* 네온 버튼 스타일 */\r\na {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #e02ff0;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\na:hover {\r\n  background: #e02ff0;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #e02ff0, 0 0 25px #e02ff0, 0 0 50px #e02ff0,\r\n    0 0 200px #e02ff0;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\na span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\na span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #e02ff0);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #e02ff0);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #e02ff0);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #e02ff0);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ProfileView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfileView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProfileView.vue?vue&type=style&index=0&id=b4fc1d72&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b4fc1d72\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"category-container\">\r\n    <div class=\"category-header\">\r\n      <h1 class=\"collection-title\">{{category.name}} Collection</h1>\r\n    </div>\r\n    <div class=\"top-menu\">\r\n      <div v-if=\"isOwner\" class=\"edit-group\">\r\n        <a v-if=\"!isEditingName\" class=\"add-movie-after\" @click=\"startEditingName\" >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            이름 수정\r\n        </a>\r\n        <!-- <button @click=\"startEditingName\" v-if=\"!isEditingName\" class=\"edit-btn\">이름 수정</button> -->\r\n        <input\r\n        v-if=\"isEditingName\"\r\n        v-model=\"newCategoryName\"\r\n        type=\"text\"\r\n        class=\"edit-category-input\"\r\n        placeholder=\"새 컬렉션 이름 입력\"\r\n        />\r\n        <a v-if=\"isEditingName\" class=\"add-movie-after\" @click=\"saveCategoryName\" >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            저장\r\n        </a>\r\n        <a v-if=\"isEditingName\" class=\"add-movie-after\" @click=\"cancelEditingName\" >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            취소\r\n        </a>\r\n        <a class=\"add-movie-after\" @click=\"openAddMovieModal\" >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            이 컬렉션에 영화 추가\r\n        </a>\r\n        <a class=\"add-movie-after\" @click=\"deleteCategory\" >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            컬렉션 삭제\r\n        </a>\r\n        <!-- <button v-if=\"isEditingName\" @click=\"saveCategoryName\" class=\"save-btn\">저장</button> -->\r\n        <!-- <button v-if=\"isEditingName\" @click=\"cancelEditingName\" class=\"cancel-btn\">취소</button> -->\r\n        <!-- <button @click=\"openAddMovieModal\" class=\"add-movie-btn\">이 컬렉션에 영화 추가</button> -->\r\n        <!-- <button @click=\"deleteCategory\" class=\"delete-category-btn\">컬렉션 삭제</button> -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 영화 추가 모달 -->\r\n    <div v-if=\"showAddMovieModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>영화 검색</h2>\r\n        <input v-model=\"searchQuery\" @input=\"searchMovies\" placeholder=\"영화 제목 입력\" />\r\n        <ul>\r\n          <li v-for=\"movie in searchResults\" :key=\"movie.id\">\r\n            {{ movie.title }}\r\n            <button @click=\"confirmAddMovie(movie)\">추가</button>\r\n          </li>\r\n        </ul>\r\n        <button @click=\"closeAddMovieModal\" class=\"close-modal-btn\">닫기</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"movies.length === 0\" class=\"plz-pass\">\r\n      <p>이 컬렉션에 추가된 영화가 없습니다.</p>\r\n    </div>\r\n\r\n    <div v-else class=\"movie-list\">\r\n      <div\r\n        v-for=\"movie in movies\"\r\n        :key=\"movie.id\"\r\n        class=\"movie-card\"\r\n        @click=\"goToMovieDetail(movie.id)\"\r\n      >\r\n        <!-- 영화 포스터 -->\r\n        <div class=\"image-container\">\r\n          <img \r\n            :src=\"movie.poster_url ? getFullPosterUrl(movie.poster_url) : 'http://127.0.0.1:8000/media/default_movies/default-movie.png'\" \r\n            alt=\"영화 포스터\" \r\n            class=\"movie-poster\" \r\n          />\r\n        </div>\r\n        <!-- 영화 정보 -->\r\n        <h3>{{ movie.title }}</h3>\r\n        <p>개봉일: {{ movie.release_date }}</p>\r\n        <button \r\n          v-if=\"isOwner\" \r\n          @click.stop=\"removeMovie(movie.id)\" \r\n          class=\"remove-movie-btn\"\r\n        >삭제</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport axios from \"axios\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst category = ref({}); // 컬렉션 데이터\r\nconst movies = ref([]); // 영화 데이터\r\nconst store = useCounterStore();\r\nconst showAddMovieModal = ref(false);\r\nconst searchQuery = ref(\"\"); // 영화 검색어\r\nconst searchResults = ref([]); // 검색 결과\r\nconst isEditingName = ref(false); // 이름 수정 상태\r\nconst newCategoryName = ref(\"\"); // 새로운 컬렉션 이름\r\n\r\nconst startEditingName = () => {\r\n  isEditingName.value = true;\r\n};\r\n\r\nconst saveCategoryName = async () => {\r\n  if (!newCategoryName.value.trim()) {\r\n    alert(\"새 컬렉션 이름을 입력해주세요.\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.patch(\r\n      `${store.API_URL}/accounts/categories/${category.value.id}/update/`,\r\n      { name: newCategoryName.value.trim() },\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${store.token}`,\r\n        },\r\n      }\r\n    );\r\n    category.value.name = response.data.name;\r\n    isEditingName.value = false; // 저장 후 수정 모드 종료\r\n    alert(\"컬렉션 이름이 수정되었습니다.\");\r\n  } catch (error) {\r\n    console.error(\"Error saving category name:\", error);\r\n    alert(\"컬렉션 이름 저장에 실패했습니다.\");\r\n  }\r\n};\r\n\r\nconst cancelEditingName = () => {\r\n  newCategoryName.value = category.value.name; // 기존 이름 복원\r\n  isEditingName.value = false; // 수정 모드 종료\r\n};\r\n\r\n\r\n// 현재 로그인한 유저와 컬렉션 소유자 비교\r\nconst isOwner = computed(() => store.user?.id === category.value?.owner_id); // owner_id는 백엔드에서 반환\r\n\r\n// 포스터 URL을 처리하는 함수\r\nconst getFullPosterUrl = (posterUrl) => {\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\"; // TMDB 이미지 베이스 URL\r\n  return `${baseUrl}${posterUrl}`;\r\n};\r\n\r\n// 컬렉션 상세 데이터 가져오기\r\nconst fetchCategoryDetails = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://127.0.0.1:8000/accounts/categories/${route.params.categoryId}/`,\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${store.token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"Category Details Response:\", response.data); // 응답 데이터 로깅\r\n    category.value = response.data;\r\n    movies.value = response.data.movies; // 영화 데이터 설정\r\n    newCategoryName.value = response.data.name; // 기존 이름 설정\r\n  } catch (error) {\r\n    console.error(\"Error fetching category details:\", error);\r\n  }\r\n};\r\n\r\n// 영화 삭제 함수\r\nconst removeMovie = async (movieId) => {\r\n  try {\r\n    await axios.post(\r\n      `http://127.0.0.1:8000/accounts/categories/remove-movie/`,\r\n      {\r\n        category_id: route.params.categoryId,\r\n        movie_id: movieId,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Token ${store.token}`,\r\n        },\r\n      }\r\n    );\r\n    movies.value = movies.value.filter((movie) => movie.id !== movieId);\r\n    alert(\"영화가 삭제되었습니다.\");\r\n  } catch (error) {\r\n    console.error(\"Error removing movie:\", error);\r\n  }\r\n};\r\n\r\n// 영화 디테일 페이지로 이동\r\nconst goToMovieDetail = (movieId) => {\r\n  router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n};\r\n\r\n// 영화 추가 모달 열기/닫기\r\nconst openAddMovieModal = () => (showAddMovieModal.value = true);\r\nconst closeAddMovieModal = () => {\r\n  showAddMovieModal.value = false;\r\n  searchQuery.value = \"\";\r\n  searchResults.value = [];\r\n};\r\n\r\n// 영화 검색\r\nconst searchMovies = async () => {\r\n  if (!searchQuery.value.trim()) {\r\n    searchResults.value = [];\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get(`${store.API_URL}/accounts/movies/search/`, {\r\n      params: { title: searchQuery.value.trim() },\r\n      headers: {\r\n        Authorization: `Token ${store.token}`,\r\n      },\r\n    });\r\n    searchResults.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Error searching movies:\", error);\r\n  }\r\n};\r\n\r\n// 영화 추가 확인 및 추가\r\nconst confirmAddMovie = async (movie) => {\r\n  const confirmed = confirm(`영화 \"${movie.title}\"를 컬렉션에 추가하시겠습니까?`);\r\n  if (confirmed) {\r\n    await addMovieToCategory(movie);\r\n  }\r\n};\r\n\r\n// 영화 추가\r\nconst addMovieToCategory = async (movie) => {\r\n  try {\r\n    await store.addMovieToCategory(route.params.categoryId, movie.id);\r\n    await fetchCategoryDetails(); // 컬렉션 데이터 갱신\r\n    closeAddMovieModal();\r\n  } catch (error) {\r\n    console.error(\"Error adding movie to category:\", error);\r\n  }\r\n};\r\n\r\n// **컬렉션 삭제 함수**\r\nconst deleteCategory = async () => {\r\n  const confirmed = confirm(\"진짜 삭제하시겠습니까?\");\r\n  if (confirmed) {\r\n    try {\r\n      await axios.delete(\r\n        `${store.API_URL}/accounts/categories/${category.value.id}/delete/`,\r\n        {\r\n          headers: {\r\n            Authorization: `Token ${store.token}`,\r\n          },\r\n        }\r\n      );\r\n      alert(\"컬렉션이 삭제되었습니다.\");\r\n      router.push(`/profile/${store.user.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error deleting category:\", error);\r\n      alert(\"컬렉션 삭제에 실패했습니다.\");\r\n    }\r\n  }\r\n};\r\n\r\n// 컴포넌트 마운트 시 데이터 로드\r\nonMounted(async () => {\r\n  try {\r\n    await fetchCategoryDetails();\r\n    await store.fetchUser()\r\n    await store.fetchUserPoints(); // 사용자 포인트 정보 가져오기\r\n    console.log(\"isOwner:\", isOwner.value);\r\n    console.log(\"store.user:\", store.user);\r\n    console.log(\"category.value:\", category.value);\r\n\r\n\r\n  } catch (error) {\r\n    console.error(\"Error in onMounted:\", error);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n\r\n/* 컬렉션 페이지 전체 레이아웃에 패딩 추가 */\r\n.category-container {\r\n  padding: 0 230px; /* 양쪽에 40px 패딩 추가 */\r\n}\r\n\r\n/* 왼쪽 상단으로 이동 및 스타일 수정 */\r\n.category-header {\r\n  position: relative; /* 상대 위치 지정 */\r\n  top: 50px; /* 상단에서 50px 아래로 */\r\n  left: 50px; /* 왼쪽에서 50px 오른쪽으로 */\r\n}\r\n\r\n.collection-title {\r\n  font-size: 2.5rem; /* 글씨 크기 키움 */\r\n  font-weight: bold; /* 두꺼운 글씨 */\r\n  color: #e02ff0; /* 네온 핑크와 일치하는 색상 */\r\n  text-shadow: 0 0 2px #e02ff0, 0 0 4px #e02ff0, 0 0 6px #e02ff0;\r\n  font-family: 'Arial', sans-serif; /* 깔끔하고 현대적인 글씨체 */\r\n  animation: neon-flicker 2s infinite; /* 깜빡이는 애니메이션 */\r\n}\r\n\r\n/* 깜빡이는 네온 효과 애니메이션 */\r\n@keyframes neon-flicker {\r\n  0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {\r\n    text-shadow: 0 0 2px #e02ff0, 0 0 4px #e02ff0, 0 0 6px #e02ff0;\r\n    opacity: 1;\r\n  }\r\n  20%, 24%, 55% {\r\n    text-shadow: 0 0 1px #e02ff0, 0 0 2px #e02ff0, 0 0 3px #e02ff0;\r\n    opacity: 0.8;\r\n  }\r\n  22% {\r\n    text-shadow: 0 0 4px #ff00ff, 0 0 8px #ff00ff, 0 0 12px #ff00ff;\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n\r\n\r\n/* 상단 메뉴 스타일 */\r\n.top-menu {\r\n  display: flex;\r\n  justify-content: flex-end; /* 오른쪽 정렬 */\r\n  gap: 10px; /* 버튼 간 간격 */\r\n  padding: 10px 20px; /* 상단 여백 */\r\n  position: relative;\r\n  top: 10px; /* 페이지 상단에서 떨어진 거리 */\r\n  right: 0;\r\n  padding-right: 38px;\r\n}\r\n\r\n.edit-group {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px; /* 요소 간격 */\r\n}\r\n\r\n.inline-group {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px; /* 텍스트 박스와 버튼 간 간격 */\r\n}\r\n\r\n.category-title {\r\n  text-align: center; /* 중앙 정렬 */\r\n  margin-top: 60px; /* 상단 메뉴와의 간격 */\r\n  font-size: 24px;\r\n  color: #fff; /* 텍스트 색상 */\r\n}\r\n\r\n/* 모달 스타일 */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.6); /* 어두운 반투명 배경 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* 모달이 항상 위에 보이도록 설정 */\r\n}\r\n\r\n.modal-content {\r\n  background: #2b2b2b; /* 어두운 배경 */\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  color: #fff;\r\n  position: relative; /* 닫기 버튼 배치를 위한 설정 */\r\n  display: flex;\r\n  flex-direction: column; /* 내부 요소를 세로 정렬 */\r\n  gap: 15px; /* 요소 간격 */\r\n}\r\n\r\n.modal-content h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  color: #fff;\r\n  text-align: center;\r\n}\r\n\r\n.modal-content input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #555;\r\n  border-radius: 4px;\r\n  background: #1f1f1f; /* 입력 필드 배경 */\r\n  color: #fff;\r\n  font-size: 14px;\r\n}\r\n\r\n.modal-content input::placeholder {\r\n  color: #888;\r\n}\r\n\r\n.modal-content ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  max-height: 200px; /* 리스트의 최대 높이를 제한 */\r\n  overflow-y: auto; /* 스크롤이 필요한 경우 표시 */\r\n}\r\n\r\n.modal-content ul li {\r\n  display: flex;\r\n  justify-content: space-between; /* 추가 버튼과 영화 제목 간격 유지 */\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #444; /* 리스트 아이템 구분선 */\r\n  font-size: 16px;\r\n}\r\n\r\n.modal-content ul li:last-child {\r\n  border-bottom: none; /* 마지막 아이템의 테두리 제거 */\r\n}\r\n\r\n.modal-content ul li button {\r\n  background: #e02ff0; /* 기본 버튼 색상 */\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px; /* 버튼 크기 축소 */\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-content ul li button:hover {\r\n  background: #e02ff0; /* 호버 시 약간 어두운 색상 */\r\n}\r\n\r\n.close-modal-btn {\r\n  align-self: flex-end; /* 닫기 버튼을 오른쪽으로 정렬 */\r\n  background: #d32f2f; /* 닫기 버튼 색상 */\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.close-modal-btn:hover {\r\n  background: #b71c1c; /* 닫기 버튼 호버 색상 */\r\n}\r\n/* 영화 리스트 */\r\n.movie-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px; /* 카드 간 간격 */\r\n  justify-content: center; /* 카드들을 가운데 정렬 */\r\n  padding: 20px 0; /* 리스트 위아래 여백 추가 */\r\n}\r\n\r\n\r\n.movie-card {\r\n  border: 2px solid #e02ff0; /* 네온 테두리 */\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  background-color: rgba(15, 15, 15, 0.9); /* 반투명 어두운 배경 */\r\n  width: 250px; /* 카드 크기 */\r\n  box-shadow: 0 0 15px rgba(224, 47, 240, 0.6); /* 네온 효과 */\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  text-align: center; /* 텍스트 가운데 정렬 */\r\n  position: relative; /* 삭제 버튼을 정렬하기 위해 필요 */\r\n}\r\n\r\n.movie-card:hover {\r\n  transform: scale(1.05); /* 호버 시 확대 */\r\n  box-shadow: 0 0 30px rgba(224, 47, 240, 0.9); /* 네온 효과 강화 */\r\n}\r\n\r\n.movie-card h3 {\r\n  margin: 10px 0 5px; /* 제목 간격 */\r\n  font-size: 1.2em;\r\n  color: #fff; /* 흰색 텍스트 */\r\n  font-weight: bold;\r\n}\r\n\r\n.movie-card p {\r\n  font-size: 0.9em;\r\n  color: #aaa; /* 부드러운 텍스트 색상 */\r\n  margin-bottom: 20px; /* 제목과 개봉일 간 간격 */\r\n}\r\n\r\n.image-container {\r\n  width: 100%;\r\n  height: 300px;\r\n  overflow: hidden;\r\n  border-radius: 10px; /* 카드와 동일한 둥근 모서리 */\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.movie-poster {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 포스터가 카드에 맞게 조정 */\r\n  border-radius: 10px; /* 이미지 둥근 모서리 */\r\n}\r\n\r\n.remove-movie-btn {\r\n  position: absolute; /* 버튼을 카드 내에서 절대 위치 */\r\n  bottom: 5px; /* 카드 하단에서 15px 위로 배치 */\r\n  right: 5px; /* 카드 오른쪽에서 15px 안쪽으로 배치 */\r\n  background: #e02ff0;\r\n  color: #050801;\r\n  border: none;\r\n  padding: 8px 12px;\r\n  border-radius: 5px;\r\n  font-size: 0.8em;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.remove-movie-btn:hover {\r\n  background: rgba(224, 47, 240, 0.8);\r\n  color: white;\r\n}\r\n\r\n\r\n/* 기존 네온 버튼 스타일과 통일된 텍스트 박스 스타일 */\r\n.edit-category-input {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 10px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n  color: #e02ff0;\r\n  background: transparent;\r\n  border: 2px solid #e02ff0;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 0px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.edit-category-input:focus,\r\n.edit-category-input:hover {\r\n  background: #e02ff0;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #e02ff0, 0 0 25px #e02ff0, 0 0 50px #e02ff0,\r\n    0 0 200px #e02ff0;\r\n}\r\n\r\n.edit-category-input::placeholder {\r\n  color: #e02ff0;\r\n  opacity: 0.7;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.edit-category-input::placeholder {\r\n  color: #e02ff0;\r\n  opacity: 0.7;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n/* 네온 버튼 스타일 */\r\na {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 15px 20px;\r\n  font-size: 14px; /* 텍스트 크기 조정 */\r\n    margin: 50px 0; /* 여백 조정 */\r\n  color: #e02ff0;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 1px;\r\n  overflow: hidden;\r\n  margin-right: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\na:hover {\r\n  background: #e02ff0;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #e02ff0, 0 0 25px #e02ff0, 0 0 50px #e02ff0,\r\n    0 0 200px #e02ff0;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\na span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n\r\na span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #e02ff0);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% {\r\n    left: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    left: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(2) {\r\n  top: -100%;\r\n  right: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, transparent, #e02ff0);\r\n  animation: animate2 1s linear infinite;\r\n  animation-delay: 0.25s;\r\n}\r\n\r\n@keyframes animate2 {\r\n  0% {\r\n    top: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    top: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(3) {\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(270deg, transparent, #e02ff0);\r\n  animation: animate3 1s linear infinite;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n@keyframes animate3 {\r\n  0% {\r\n    right: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    right: 100%;\r\n  }\r\n}\r\n\r\na span:nth-child(4) {\r\n  bottom: -100%;\r\n  left: 0;\r\n  width: 2px;\r\n  height: 100%;\r\n  background: linear-gradient(360deg, transparent, #e02ff0);\r\n  animation: animate4 1s linear infinite;\r\n  animation-delay: 0.75s;\r\n}\r\n\r\n@keyframes animate4 {\r\n  0% {\r\n    bottom: -100%;\r\n  }\r\n  50%,\r\n  100% {\r\n    bottom: 100%;\r\n  }\r\n}\r\n\r\n.plz-pass {\r\n  padding-top: 100px;\r\n  padding-left: 50px;\r\n}\r\n</style>\r\n","import script from \"./CategoryDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CategoryDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CategoryDetail.vue?vue&type=style&index=0&id=53d1873a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-53d1873a\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <h2>컬렉션 관리</h2>\r\n    <form @submit.prevent=\"createCategory\">\r\n      <input v-model=\"newCategoryName\" placeholder=\"새 컬렉션 이름\" />\r\n      <button type=\"submit\">컬렉션 생성</button>\r\n    </form>\r\n    <ul>\r\n      <li v-for=\"category in categories\" :key=\"category.id\">\r\n        <router-link :to=\"`/categories/${category.id}`\">{{ category.name }}</router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useCounterStore } from '@/stores/counter';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newCategoryName: '',\r\n    };\r\n  },\r\n  computed: {\r\n    categories() {\r\n      return useCounterStore().categories;\r\n    },\r\n  },\r\n  methods: {\r\n    async createCategory() {\r\n      const store = useCounterStore();\r\n      await store.createCategory(this.newCategoryName);\r\n      this.newCategoryName = '';\r\n    },\r\n  },\r\n  mounted() {\r\n    useCounterStore().fetchCategories();\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./CategoryList.vue?vue&type=template&id=681fa658\"\nimport script from \"./CategoryList.vue?vue&type=script&lang=js\"\nexport * from \"./CategoryList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <h2>컬렉션 생성</h2>\r\n    <form @submit.prevent=\"createCategory\">\r\n      <input\r\n        v-model=\"categoryName\"\r\n        placeholder=\"컬렉션 이름을 입력하세요\"\r\n        class=\"form-control\"\r\n      />\r\n      <button type=\"submit\" class=\"btn btn-primary mt-2\">컬렉션 생성</button>\r\n    </form>\r\n    <p v-if=\"message\" class=\"mt-2\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport axiosInstance from \"@/axios\";\r\nimport {useCounterStore} from \"@/stores/counter.js\"\r\n\r\nexport default {\r\n  setup() {\r\n    const categoryName = ref(\"\"); // 입력된 컬렉션 이름\r\n    const message = ref(\"\"); // 사용자 메시지\r\n\r\n    const createCategory = async () => {\r\n      try {\r\n        const response = await axiosInstance.post(\"http://127.0.0.1:8000/accounts/categories/\",{\r\n            headers: {\r\n              Authorization: `Token ${store.token}`,\r\n            },\r\n          }, {\r\n          name: categoryName.value,\r\n        });\r\n        message.value = `컬렉션 \"${response.data.name}\"가 생성되었습니다.`;\r\n        categoryName.value = \"\"; // 입력 필드 초기화\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          message.value =\r\n            error.response.data.error || \"컬렉션 생성에 실패했습니다.\";\r\n        } else {\r\n          message.value = \"서버와의 연결에 문제가 발생했습니다.\";\r\n        }\r\n      }\r\n    };\r\n\r\n    return {\r\n      categoryName,\r\n      message,\r\n      createCategory,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n","import { render } from \"./CreateCategory.vue?vue&type=template&id=67c81dce&scoped=true\"\nimport script from \"./CreateCategory.vue?vue&type=script&lang=js\"\nexport * from \"./CreateCategory.vue?vue&type=script&lang=js\"\n\nimport \"./CreateCategory.vue?vue&type=style&index=0&id=67c81dce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67c81dce\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"main-page-container\">\r\n    <h1 class=\"maintext\">MOVIE MONSTER</h1>\r\n    <!-- 인기 영화 섹션 -->\r\n    <div class=\"popular-movies-section\">\r\n      <h2>요즘 핫한 영화</h2>\r\n      <p>요즘 가장 인기 있는 영화들을 모아봤어요!</p>\r\n      <div class=\"carousel-wrapper\">\r\n        <button class=\"carousel-btn prev\" @click=\"prevSlide('popular')\">&lt;</button>\r\n        <div class=\"carousel-track-container\">\r\n          <div\r\n            class=\"carousel-track\"\r\n            :style=\"{ transform: `translateX(-${currentIndex['popular'] * 100}%)` }\"\r\n          >\r\n            <div\r\n              class=\"carousel-slide\"\r\n              v-for=\"(chunk, index) in getChunks(popularMovies, 5)\"\r\n              :key=\"index\"\r\n            >\r\n              <div\r\n                class=\"card\"\r\n                v-for=\"movie in chunk\"\r\n                :key=\"movie.movie_id\"\r\n                @click.stop=\"goToDetail(movie.movie_id)\"\r\n              >\r\n                <img\r\n                  :src=\"getFullPosterUrl(movie.poster_url)\"\r\n                  class=\"card-img-top\"\r\n                  :alt=\"movie.title\"\r\n                />\r\n                <div>\r\n                  <p class = \"movietitle\">{{ movie.title }}</p>\r\n                  <span>⭐ {{ movie.rating || 'N/A' }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button class=\"carousel-btn next\" @click=\"nextSlide('popular')\">&gt;</button>\r\n      </div>\r\n    </div>\r\n    <!-- Top Ranking Section -->\r\n    <div class=\"top-ranking-section\">\r\n      <!-- 카드 섹션 -->\r\n      <div class=\"ranking-card-container\">\r\n        <h2 class=\"modiTop3\">TOP 3 MONSTERS</h2>\r\n        <div\r\n          v-for=\"(rank, index) in topThreeRankings\"\r\n          :key=\"rank.username\"\r\n          class=\"ranking-card\"\r\n        >\r\n          <div class=\"card-inner\" @click=\"navigateToProfile(rank.username)\">\r\n            <!-- 앞면 -->\r\n            <div class=\"card-front\">\r\n              <h1>{{ index + 1 }}st</h1>\r\n              <img :src=\"getRankImage(rank.rank_title)\" alt=\"랭크 이미지\" class=\"rank-image\" />\r\n              <div class=\"profile-header\">\r\n                <img :src=\"getProfileImage(rank.profile_picture)\" alt=\"프로필 사진\" class=\"profile-image\" />\r\n                <p class=\"username\">{{ rank.username }}</p>\r\n              </div>\r\n            </div>\r\n            <!-- 뒷면 -->\r\n            <div class=\"card-back\">\r\n              <div class=\"back-stats\">\r\n                <div class=\"back-stat\">\r\n                  <p>포인트</p>\r\n                  <div class=\"circle\">{{ rank.points }}</div>\r\n                </div>\r\n                <div class=\"back-stat\">\r\n                  <p>좋아요</p>\r\n                  <div class=\"circle\">{{ rank.likes_count }}</div>\r\n                </div>\r\n                <div class=\"back-stat\">\r\n                  <p>게시글</p>\r\n                  <div class=\"circle\">{{ rank.articles_count }}</div>\r\n                </div>\r\n                <div class=\"back-stat\">\r\n                  <p>팔로워</p>\r\n                  <div class=\"circle\">{{ rank.followers_count }}</div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"recommendation\"> -->\r\n                <!-- <span class=\"recommendation-label\">추천작:</span> -->\r\n                <!-- <span class=\"recommendation-title\">{{ rank.recommended_movie.movie.title || \"없음\" }}</span> -->\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Best Reviews Section -->\r\n    <div class=\"best-reviews-container\">\r\n      <h2>Best Review</h2>\r\n      <p>금주 가장 ❤를 많이 받은 게시물은 무엇일까요?</p>\r\n      <div v-if=\"isLoading\" class=\"loading-message\">리뷰 데이터를 불러오는 중입니다...</div>\r\n      <div v-else class=\"best-reviews\">\r\n        <div\r\n          v-for=\"review in topReviews\"\r\n          :key=\"review.id\"\r\n          class=\"review-card\"\r\n          @click=\"navigateToDetail(review.id)\"\r\n        >\r\n          <img :src=\"review.movie.poster_url\" alt=\"포스터 이미지\" class=\"poster\" />\r\n          <div class=\"review-details\">\r\n            <h3>{{ review.title }}</h3>\r\n            <p>작성자: {{ review.user }}</p>\r\n            <p>⭐  {{ review.rating }} / 10</p>\r\n            <p>{{ review.content }}...</p>\r\n            <p>❤  {{ review.like_count }}</p>\r\n            <p>작성일: {{ formatDate(review.created_at) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Categories of Top Ranker -->\r\n    <div class=\"top-ranker-categories-container\" v-if=\"topRankerCategories\">\r\n      <h2 class=\"zizon\">zl존 M✪N⭑스✧ㅌr  💥 <span class=\"firstuser\">{{ topThreeRankings[0]?.username }}</span> 💥님의 컬렉션을 만나보세요!</h2>\r\n      <div class=\"categories\">\r\n        <div\r\n          v-for=\"category in topRankerCategories\"\r\n          :key=\"category.id\"\r\n          class=\"category-card\"\r\n          @click=\"navigateToCategoryDetail(category.id)\"\r\n        >\r\n          <img\r\n            :src=\"category.movies.length > 0 ? getFullPosterUrl(category.movies[0].poster_url) : 'http://127.0.0.1:8000/media/default_categories/default-category.png'\"\r\n            alt=\"컬렉션 포스터\"\r\n            class=\"category-poster\"\r\n          />\r\n          <h3>{{ category.name }}</h3>\r\n          <p>영화 개수: {{ category.movies.length }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useCounterStore } from \"@/stores/counter\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\n// Pinia 상태 관리\r\nconst store = useCounterStore();\r\nconst router = useRouter();\r\n\r\n// Top 3 랭킹 데이터 가져오기\r\nconst topThreeRankings = computed(() => store.rankings.slice(0, 3));\r\n\r\n// 프로필 사진 URL 반환 함수\r\nconst getProfileImage = (path) => {\r\n  return `http://127.0.0.1:8000${path}`;\r\n};\r\n\r\n// 상태 관리\r\nconst topReviews = ref([]);\r\nconst isLoading = ref(true);\r\nconst topRankerCategories = ref(null);\r\nconst isLoadingCategories = ref(false);\r\n\r\nconst popularMovies = ref([]); // 인기 영화 데이터\r\nconst currentIndex = ref({ popular: 0 }); // 캐러셀 현재 인덱스\r\n\r\n// 날짜 포맷 함수\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n};\r\n\r\n// 랭크 이미지를 가져오는 함수\r\nimport bronzeRank from \"@/assets/BronzeRank.png\";\r\nimport silverRank from \"@/assets/SilverRank.png\";\r\nimport goldRank from \"@/assets/GoldRank.png\";\r\nimport platinumRank from \"@/assets/PlatinumRank.png\";\r\nimport diamondRank from \"@/assets/DiamondRank.png\";\r\n\r\n// 영화 상세 페이지로 이동\r\nconst goToDetail = (movieId) => {\r\n      router.push({ name: \"MovieDetail\", params: { id: movieId } });\r\n    };\r\n\r\nconst getRankImage = (rankTitle) => {\r\n  switch (rankTitle) {\r\n    case \"Bronze\":\r\n      return bronzeRank;\r\n    case \"Silver\":\r\n      return silverRank;\r\n    case \"Gold\":\r\n      return goldRank;\r\n    case \"Platinum\":\r\n      return platinumRank;\r\n    case \"Diamond\":\r\n      return diamondRank;\r\n    default:\r\n      return bronzeRank; // 기본값\r\n  }\r\n};\r\n\r\n// 포스터 URL 생성 함수\r\nconst getFullPosterUrl = (posterUrl) => {\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n  return `${baseUrl}${posterUrl}`;\r\n};\r\n\r\n// 프로필로 이동하는 함수\r\nconst navigateToProfile = (username) => {\r\n  // 라우터를 사용하여 프로필 페이지로 이동\r\n  window.location.href = `/profile/${username}`;\r\n};\r\n\r\n// API 호출: Top Reviews\r\nconst fetchTopReviews = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"http://127.0.0.1:8000/api/v1/communities/top-reviews/\"\r\n    );\r\n    topReviews.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching top reviews:\", error);\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\n// 인기 영화 가져오기\r\nconst fetchPopularMovies = async () => {\r\n  try {\r\n    const response = await axios.get(\"/popular.json\");\r\n    popularMovies.value = response.data.map((item) => ({\r\n      movie_id: item.fields.movie_id,\r\n      title: item.fields.title,\r\n      poster_url: item.fields.poster_url,\r\n      rating: item.fields.vote_avg || \"N/A\", // 평점 추가 (없으면 N/A)\r\n    }));\r\n    console.log('ww',popularMovies.value)\r\n  } catch (error) {\r\n    console.error(\"Error fetching popular movies:\", error);\r\n  }\r\n};\r\n\r\n// 슬라이드 이동\r\nconst nextSlide = (section) => {\r\n  const totalSlides = Math.ceil(popularMovies.value.length / 5);\r\n  if (currentIndex.value[section] < totalSlides - 1) {\r\n    currentIndex.value[section]++;\r\n  }\r\n};\r\n\r\nconst prevSlide = (section) => {\r\n  if (currentIndex.value[section] > 0) {\r\n    currentIndex.value[section]--;\r\n  }\r\n};\r\n\r\n// 데이터를 5개씩 나누기\r\nconst getChunks = (movies, size) => {\r\n  const chunks = [];\r\n  for (let i = 0; i < movies.length; i += size) {\r\n    chunks.push(movies.slice(i, i + size));\r\n  }\r\n  return chunks;\r\n};\r\n\r\n// API 호출: Top Ranker Categories\r\nconst fetchTopRankerCategories = async () => {\r\n  if (!topThreeRankings.value[0]?.username) return;\r\n\r\n  isLoadingCategories.value = true;\r\n  try {\r\n    const response = await axios.get(\r\n      `http://127.0.0.1:8000/accounts/profile/${topThreeRankings.value[0].username}/categories/`,\r\n      {\r\n        headers: { Authorization: `Token ${store.token}` },\r\n      }\r\n    );\r\n    topRankerCategories.value = response.data; // 성공적으로 데이터를 받음\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch categories:\", error);\r\n  } finally {\r\n    isLoadingCategories.value = false;\r\n  }\r\n};\r\n\r\n// 상세 페이지로 이동\r\nconst navigateToDetail = (id) => {\r\n  router.push({ name: \"DetailView\", params: { id } });\r\n};\r\n\r\nconst navigateToCategoryDetail = (categoryId) => {\r\n  window.location.href = `/categories/${categoryId}`;\r\n};\r\n\r\n// 데이터 로드\r\nonMounted(async () => {\r\n  if (!store.rankings.length) {\r\n    await store.fetchRankings();\r\n  }\r\n  await fetchTopReviews();\r\n  await fetchTopRankerCategories();\r\n  await fetchPopularMovies(); // 인기 영화 데이터 가져오기\r\n});\r\n\r\nconsole.log('ppss', topThreeRankings)\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 메인 페이지 컨테이너 스타일 */\r\n.main-page-container {\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 50px;\r\n}\r\n\r\n.maintext {\r\n  text-align: center;\r\n  font-size: 4rem; /* 글자 크기 */\r\n  font-weight: bold; /* 굵기 */\r\n  background: linear-gradient(135deg, #e02ff0, #39ffe5); /* 그래디언트 색상 */\r\n  -webkit-background-clip: text; /* 그래디언트가 글자 내부에만 표시되게 함 */\r\n  -webkit-text-fill-color: transparent; /* 텍스트 색상을 투명으로 */\r\n  text-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* 입체감을 위한 그림자 */\r\n  transform: perspective(500px) rotateX(10deg); /* 휘어진 효과 */\r\n  letter-spacing: 3px; /* 글자 간격 */\r\n  margin-bottom: 20px; /* 아래쪽 여백 */\r\n}\r\n\r\n/* 인기 영화 섹션 */\r\n.popular-movies-section {\r\n  margin-bottom: 50px;\r\n  padding-bottom: 30px;\r\n  border-bottom: 2px solid transparent; /* 기본 투명 */\r\n  border-image: linear-gradient(135deg, #e02ff0, #39ffe5); /* 그래디언트 색상 */\r\n  border-image-slice: 1; /* 전체 영역 적용 */\r\n}\r\n\r\n.popular-movies-section h2 {\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.popular-movies-section p {\r\n  font-size: 14px;\r\n  color: #f9f9f9;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.movietitle {\r\n  color: #f9f9f9\r\n}\r\n\r\n.carousel-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n\r\n.carousel-track-container {\r\n  overflow: hidden;\r\n  width: 100%;\r\n}\r\n\r\n.carousel-track {\r\n  display: flex;\r\n  transition: transform 0.5s ease-in-out;\r\n}\r\n\r\n.carousel-slide {\r\n  display: flex;\r\n  flex-shrink: 0; /* 크기 축소 방지 */\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.card {\r\n  flex: 0 0 auto; /* 크기 고정 */\r\n  width: 240px; /* 카드 너비 */\r\n  height: 360px; /* 카드 높이 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease-in-out;\r\n  background-color: transparent; /* 카드 배경을 투명하게 설정 */\r\n  padding: 5px;\r\n}\r\n\r\n.card img {\r\n  width: 100%;\r\n  height: 300px; /* 고정된 크기 */\r\n  object-fit: cover; /* 이미지 비율 유지 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.card p {\r\n  margin: 10px 0 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.card span {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.carousel-btn {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #39ffe5;\r\n  border: none;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding: 10px 15px;\r\n  z-index: 10;\r\n}\r\n\r\n\r\n.carousel-btn.prev {\r\n  left: 0;\r\n}\r\n\r\n.carousel-btn.next {\r\n  right: 0;\r\n}\r\n\r\n/* Top 랭킹 섹션 스타일 */\r\n.top-ranking {\r\n  position: relative;\r\n  width: 400px;\r\n  height: 300px;\r\n}\r\n\r\n.first {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  text-align: center;\r\n}\r\n\r\n.second {\r\n  position: absolute;\r\n  top: 120px;\r\n  left: 20%;\r\n  transform: translateX(-50%);\r\n  text-align: center;\r\n}\r\n\r\n.third {\r\n  position: absolute;\r\n  top: 120px;\r\n  right: 20%;\r\n  transform: translateX(50%);\r\n  text-align: center;\r\n}\r\n\r\n.position-icon {\r\n  width: 50px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.position-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.user-info {\r\n  margin-top: 10px;\r\n}\r\n\r\n.rank-icon {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.username {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-top: 5px;\r\n  display: block;\r\n}\r\n\r\n/* 베스트 리뷰 섹션 */\r\n.best-reviews-container {\r\n  width: 100%;\r\n  padding: 20px;\r\n  border-top: 2px solid transparent; /* 기본 투명 */\r\n  border-image: linear-gradient(135deg, #e02ff0, #39ffe5); /* 그래디언트 색상 */\r\n  border-image-slice: 1; /* 전체 영역 적용 */\r\n}\r\n\r\n.loading-message {\r\n  text-align: center;\r\n  font-size: 16px;\r\n  color: #888;\r\n}\r\n\r\n.best-reviews {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.review-card {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n  background-color: #f9f9f9; /* 조금 더 밝은 배경색 */\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.review-card:hover {\r\n  transform: scale(1.03); /* 살짝 확대 효과 */\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* 호버 시 강조된 그림자 */\r\n}\r\n\r\n.poster {\r\n  width: 100px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 포스터 그림자 */\r\n}\r\n\r\n.review-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center; /* 텍스트가 수직 중앙 정렬 */\r\n  flex-grow: 1; /* 텍스트가 충분히 공간을 차지하도록 설정 */\r\n}\r\n\r\n.review-details h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #333; /* 다소 어두운 글씨 */\r\n}\r\n\r\n.review-details p {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n  color: #555; /* 중간 밝기의 글씨 */\r\n}\r\n\r\n.review-details p:first-of-type {\r\n  font-weight: bold; /* 작성자 이름 강조 */\r\n}\r\n\r\n.review-details p:last-of-type {\r\n  color: #777; /* 작성일자 다소 흐릿하게 표시 */\r\n  font-size: 12px;\r\n}\r\n\r\n\r\n/* Top Ranker Categories Section */\r\n.top-ranker-categories-container {\r\n  border-top: 2px solid transparent; /* 기본 투명 */\r\n  border-image: linear-gradient(135deg, #e02ff0, #39ffe5); /* 그래디언트 색상 */\r\n  border-image-slice: 1; /* 전체 영역 적용 */\r\n  padding-top: 20px;\r\n  padding-left: 20px\r\n}\r\n\r\n.categories {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.category-card {\r\n  width: calc(25% - 20px);\r\n  border: 1px solid transparent; /* 기본 테두리 투명 */\r\n  border-radius: 8px; /* 테두리에 둥근 효과 */\r\n  background: linear-gradient(135deg, #e02ff0, #39ffe5) border-box; /* 그래디언트 테두리 */\r\n  overflow: hidden; /* 내부 요소가 영역을 넘지 않도록 */\r\n  cursor: pointer;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n.category-card:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.category-poster {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.category-card h3 {\r\n  font-size: 18px;\r\n  margin: 10px;\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n\r\n.category-card p {\r\n  font-size: 14px;\r\n  margin: 0 10px 10px;\r\n  color: black;\r\n\r\n}\r\n\r\n.zizon {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* 카드 컨테이너 */\r\n.ranking-card-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 0px;\r\n  margin-top: 0px;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n/* 카드 */\r\n.ranking-card {\r\n  width: 500px;\r\n  height: 390px;\r\n  perspective: 1000px;\r\n  margin-inline: 50px;\r\n  margin-bottom: -40px;\r\n  margin-top: -5px;\r\n}\r\n\r\n/* 카드 내부 */\r\n.card-inner {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform-style: preserve-3d;\r\n  transition: transform 0.8s;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 카드 회전 */\r\n.card-inner:hover {\r\n  transform: rotateY(180deg);\r\n}\r\n\r\n/* 카드 앞면 */\r\n.card-front,\r\n.card-back {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  backface-visibility: hidden;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 카드 앞면 스타일 */\r\n.card-front {\r\n  background: linear-gradient(135deg, #e02ff0, #39ffe5);\r\n  color: white;\r\n}\r\n\r\n.card-front h1 {\r\n  font-size: 4rem;\r\n  margin: 0;\r\n}\r\n\r\n.card-front .rank-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.card-front .username {\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 카드 뒷면 스타일 */\r\n.card-back {\r\n  background: linear-gradient(135deg, #e02ff0, #39ffe5);\r\n  transform: rotateY(180deg);\r\n  color: #333;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n.back-stats {\r\n  display: grid; /* 그리드 레이아웃 사용 */\r\n  grid-template-columns: repeat(2, 1fr); /* 2열로 설정 */\r\n  gap: 20px; /* 항목 간의 간격 */\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.back-stat {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.back-stat p {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  color: #555;\r\n}\r\n\r\n.circle {\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-top: 5px;\r\n}\r\n\r\n.top-ranking-section {\r\n  margin-top: -50px;\r\n}\r\n\r\n.back-recommend {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.back-recommend p {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  color: #555;\r\n}\r\n\r\n.recommendation {\r\n  display: flex;\r\n  align-items: center; /* 세로로 중앙 정렬 */\r\n  justify-content: center; /* 가로로 중앙 정렬 */\r\n  margin-top: 20px;\r\n  font-size: 1rem;\r\n  color: #333;\r\n}\r\n\r\n.recommendation-label {\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n}\r\n\r\n.recommendation-title {\r\n  display: inline-block;\r\n  padding: 5px 10px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 5px;\r\n  color: #555;\r\n  font-weight: bold;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n\r\n.card-back h3 {\r\n  margin: 10px 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.back-section {\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.back-section p {\r\n  font-size: 1.1rem;\r\n  margin: 5px 0;\r\n}\r\n\r\n.back-section strong {\r\n  color: #555;\r\n}\r\n\r\n.profile-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  margin-right: 0px;\r\n  border: 2px solid white;\r\n  object-fit: cover;\r\n}\r\n\r\n.username {\r\n  font-size: 10rem;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 프로필 헤더 */\r\n.profile-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10px; /* 중앙 정렬을 위한 여백 추가 */\r\n}\r\n\r\n.firstuser {\r\n  font-weight: bold;\r\n  background: linear-gradient(135deg, #e02ff0, #39ffe5);\r\n  -webkit-background-clip: text;  /* 웹킷 기반 브라우저에서 배경을 텍스트에 맞게 자르기 */\r\n  background-clip: text;         /* 비-웹킷 브라우저에서 배경을 텍스트에 맞게 자르기 */\r\n  color: transparent;            /* 텍스트 색상은 투명하게 처리 */\r\n}\r\n</style>\r\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=57aa5d26&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-57aa5d26\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\r\nimport ArticleList from '@/components/ArticleList.vue'\r\nimport ArticleView from '@/views/ArticleView.vue'\r\nimport DetailView from '@/views/DetailView.vue'\r\nimport CreateView from '@/views/CreateView.vue'\r\nimport SignUpView from '@/views/SignUpView.vue'\r\nimport LogInView from '@/views/LogInView.vue'\r\nimport MovieView from '@/views/MovieView.vue'\r\nimport MovieMore from '@/components/MovieMore.vue'\r\nimport MovieDetail from '@/components/MovieDetail.vue'\r\nimport GenreMovie from '@/components/GenreMovie.vue'\r\nimport GameView from '@/views/GameView.vue'\r\nimport OneLineView from \"@/views/OneLineView.vue\"\r\nimport KoreaQuotesView from \"@/views/KoreaQuotesView.vue\"\r\nimport ForeignQuotesView from \"@/views/ForeignQuotesView.vue\"\r\nimport RankView from '@/views/RankView.vue'\r\nimport RankInfoModal from '@/components/RankInfoModal.vue'\r\nimport { useCounterStore } from '@/stores/counter'\r\nimport EditView from '@/views/EditView.vue'\r\nimport ProfileView from '@/views/ProfileView.vue'\r\nimport CategoryDetail from '@/components/CategoryDetail.vue'\r\nimport CategoryList from '@/components/CategoryList.vue'\r\nimport CreateCategory from \"@/components/CreateCategory.vue\"\r\nimport HomeView from '@/views/HomeView.vue'\r\n\r\n\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(import.meta.env.BASE_URL),\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'HomeView',\r\n      component: HomeView\r\n    },\r\n    {\r\n      path: '/reviews',\r\n      name: 'ArticleView',\r\n      component: ArticleView\r\n    },\r\n    {\r\n      path: '/reviews/:id/edit',\r\n      name: 'EditView',\r\n      component: EditView\r\n    },\r\n    {\r\n      path: '/reviews/:id',\r\n      name: 'DetailView',\r\n      component: DetailView\r\n    },\r\n    {\r\n      path: '/create',\r\n      name: 'CreateView',\r\n      component: CreateView\r\n    },\r\n    {\r\n      path: '/signup',\r\n      name: 'SignUpView',\r\n      component: SignUpView\r\n    },\r\n    {\r\n      path: '/login',\r\n      name: 'LogInView',\r\n      component: LogInView\r\n    },\r\n    {\r\n      path: '/movies',\r\n      name: 'MovieView',\r\n      component: MovieView,\r\n    },\r\n    {\r\n      path: \"/movies/section/:section\",\r\n      name: \"MovieMore\",\r\n      component: MovieMore,\r\n      props: true,\r\n    },\r\n    {\r\n      path: '/movies/genre/:genre',\r\n      name: 'GenreMovie',\r\n      component: GenreMovie,\r\n    },\r\n    {\r\n      path: '/movies/detail/:id',\r\n      name: 'MovieDetail',\r\n      component: MovieDetail,\r\n    },\r\n    {\r\n      path: '/game',\r\n      name: 'GameView',\r\n      component: GameView,\r\n    },\r\n    {\r\n      path: \"/game/one-line\",\r\n      name: \"OneLineView\",\r\n      component: OneLineView,\r\n    },\r\n    {\r\n      path: \"/game/korea-quotes\",\r\n      name: \"KoreaQuotesView\",\r\n      component: KoreaQuotesView,\r\n    },\r\n    {\r\n      path: \"/game/foreign-quotes\",\r\n      name: \"ForeignQuotesView\",\r\n      component: ForeignQuotesView,\r\n    },\r\n    {\r\n      path: '/rank',\r\n      name: 'RankView',\r\n      component: RankView,\r\n    },\r\n    {\r\n      path: '/rank/info',\r\n      name: 'RankInfoModal',\r\n      component: RankInfoModal,\r\n    },\r\n    {\r\n      path: '/profile/:username',\r\n      name: 'ProfileView',\r\n      component: ProfileView,\r\n    },\r\n    {\r\n      path: '/profile/:username/categories',\r\n      name: 'CategoryList',\r\n      component: CategoryList,\r\n    },\r\n    {\r\n      path: '/categories/:categoryId',\r\n      name: 'CategoryDetail',\r\n      component: CategoryDetail,\r\n    },{\r\n      path: '/categories/create',\r\n      name: 'CreateCategory',\r\n      component: CreateCategory,\r\n    },\r\n  ]\r\n})\r\n\r\nrouter.beforeEach((to, from) => {\r\n  const store = useCounterStore();\r\n\r\n  // 로그인 상태 확인이 필요한 경로들\r\n  const protectedRoutes = ['ArticleView', 'MovieView', 'GameView', 'RankView'];\r\n\r\n  if (protectedRoutes.includes(to.name) && !store.isLogin) {\r\n    window.alert('로그인이 필요합니다.');\r\n    return { name: 'LogInView' };\r\n  }\r\n\r\n  // 로그인 사용자가 회원가입 또는 로그인 페이지로 이동하려고 하면 메인 페이지로 리다이렉트\r\n  if ((to.name === 'SignUpView' || to.name === 'LogInView') && store.isLogin) {\r\n    window.alert('이미 로그인 되어있습니다.');\r\n    return { name: 'HomeView' };\r\n  }\r\n});\r\n\r\nexport default router\r\n","import piniaPluginPersistedstate from 'pinia-plugin-persistedstate'\r\nimport { createApp } from 'vue'\r\nimport { createPinia } from 'pinia'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap\";\r\nimport './assets/styles/global.css'; // Global CSS import\r\n\r\nconst app = createApp(App)\r\nconst pinia = createPinia()\r\n\r\n\r\npinia.use(piniaPluginPersistedstate)\r\n// app.use(createPinia())\r\napp.use(pinia)\r\napp.use(router)\r\n\r\napp.mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_front\"] = self[\"webpackChunkvue_front\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(761)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["username","password","store","useCounterStore","logIn","payload","value","__exports__","articles","API_URL","token","rankings","Username","user","isLogin","router","signUpResponse","error","fetchArticles","async","console","log","response","axios","get","headers","Authorization","data","signUp","post","loginPayload","push","name","err","message","sortArticles","sortOrder","sort","a","b","like_count","id","getSortedArticles","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","fetchRankings","displayStars","rating","stars","i","filled","syncArticle","updatedArticle","index","findIndex","fetchUser","pk","defaults","common","updateCategoryName","categoryId","newName","patch","deleteCategory","delete","removeMovieFromCategory","movieId","category_id","movie_id","getRankTitle","points","fetchUserPoints","current_points","rank_title","getArticles","forceReload","length","method","url","then","catch","res","key","alert","logOut","localStorage","removeItem","getComments","articleId","addComment","commentContent","content","updateComment","commentId","updatedContent","deleteComment","fetchCategoryDetails","searchMovies","title","params","addMovieToCategory","createArticle","articleData","updateLikeStatus","getArticleDetail","persist","isLoading","showScrollToTop","getRankImage","rankTitle","handleScroll","window","scrollY","scrollToTop","scrollTo","top","behavior","addEventListener","props","emit","article","isLiked","is_liked","likeCount","toggleLike","action","newArticle","immediate","navigateToReviewDetail","navigateToProfile","navigateToMovieDetail","movie","errorMessage","setSortOrder","order","updateArticle","route","comments","newComment","editingComment","updatedCommentContent","isAuthor","fetchArticle","fetchComments","submitComment","trim","comment","comment_count","editComment","submitUpdatedComment","put","c","removeComment","filter","cancelEdit","deleteArticle","goBack","goToEdit","searchQuery","searchResults","selectedMovie","selectedMoviePoster","showMovieModal","hoverRating","selectedRating","go","openMovieSelectModal","closeMovieModal","selectMovie","poster_url","hoverStar","clearHover","selectRating","isSubmitting","unshift","password1","password2","profilePicture","profilePreview","fileInput","onFileChange","event","file","target","files","URL","createObjectURL","formData","FormData","append","entries","triggerFileInput","click","class","goToGenre","searchMovie","type","pattern","required","placeholder","goToDetail","src","getFullPosterUrl","alt","sections","section","goToMore","prevSlide","style","getChunks","movies","chunk","nextSlide","for","handleGenreChange","genres","genreItem","genreTranslations","genre","filteredMovies","setup","all","Action","Thriller","Crime","Drama","Fantasy","Romance","Animation","Adventure","Family","Comedy","History","War","Mystery","Music","Horror","Western","Documentary","fetchMovies","map","item","fields","genreSet","Set","forEach","g","add","Array","from","filterMovies","includes","posterUrl","baseUrl","newRoute","components","GenreMovie","defaultPoster","currentIndex","popular","recent","upcoming","endpoints","size","chunks","slice","sectionName","totalSlides","Math","ceil","find","s","getMoviesInOrder","count","location","reload","processedQuery","replace","description","render","sectionTitle","apiEndpoint","$emit","categories","category","newCategoryName","createCategory","axiosInstance","create","baseURL","timeout","withCredentials","interceptors","request","use","config","getItem","Number","fetchCategories","detail","videoData","modalRef","youtubeKey","stopVideo","fetchTrailer","part","q","movieTitle","maxResults","videoId","items","removeEventListener","showCategoryModal","fetchMovie","backdropUrl","backdrop_url","backgroundElement","document","querySelector","backgroundImage","isDisabled","handleGameClick","modalMessage","closeModal","cooldownTime","showModal","methods","gameKey","gameName","lastPlayed","now","this","remainingTime","floor","$router","correctCount","totalQuestions","href","openConfirmModal","restartGame","currentQuestionIndex","showResult","currentReview","checkAnswer","userAnswer","getPosterUrl","nextReview","handleModalConfirm","COOLDOWN_KEY","reviews","selectedReviews","isCorrect","gameOver","modalAction","setCooldown","setItem","claimPoints","goToRank","handleModalCancel","updatePoints","selectRandomReviews","startTypingEffect","review","fetchReviews","shuffled","random","some","correctTitle","toLowerCase","text","typingText","textContent","idx","setTimeout","currentquote","selectedQuotes","typingEffect","movietext","translatedMovietext","selector","animatedIndexes","applySequentialAnimation","_","submitEdit","categoryName","toggleFollow","isFollowed","is_followed","followersCount","followers_count","followingsCount","followings_count","articlesCount","likesCount","showCreateCategoryModal","showRecommendationModal","recommendedMovie","recommendationReason","isOwnProfile","fetchProfile","articles_count","likes_count","profile_picture","profile_image","recommended_movie","reason","goToCategoryDetail","closeCreateCategoryModal","addCategory","openRecommendationModal","closeRecommendationModal","selectRecommendedMovie","saveRecommendation","editRecommendation","newUsername","oldUsername","showAddMovieModal","isEditingName","startEditingName","saveCategoryName","cancelEditingName","isOwner","owner_id","removeMovie","goToMovieDetail","openAddMovieModal","closeAddMovieModal","confirmAddMovie","confirmed","confirm","to","computed","mounted","topThreeRankings","getProfileImage","path","topReviews","topRankerCategories","isLoadingCategories","popularMovies","fetchTopReviews","fetchPopularMovies","vote_avg","fetchTopRankerCategories","navigateToDetail","navigateToCategoryDetail","history","routes","component","HomeView","ArticleView","EditView","DetailView","CreateView","SignUpView","LogInView","MovieView","MovieMore","MovieDetail","GameView","OneLineView","KoreaQuotesView","ForeignQuotesView","RankView","RankInfoModal","ProfileView","CategoryList","CategoryDetail","CreateCategory","beforeEach","protectedRoutes","app","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}